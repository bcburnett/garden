






Started logging.

<<<
Content-Length: 3077

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":142748,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"/home/brian/Arduino/projects/garden/esp32/garden/garden","rootUri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden","name":"garden"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 5267

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","languageId":"cpp","version":1,"text":"#include <Arduino.h>\n#include \"State.h\"\n#include \"bcbaws.h\"\n#include \"bcbsdcard.h\"\n#include \"time.h\"\n#include \"WiFiCred1.h\"\n#include <ArduinoJson.h>\n#include <ArduinoOTA.h>\n#include <ESPmDNS.h>\n#include <WiFi.h>\n#include <WiFiUdp.h>\n\n#define ARDUINO_RUNNING_CORE 1\nState state;\nBcbAws aws(&state);\n\n// internal rtc variables\nconst char *ntpServer = \"pool.ntp.org\";\nconst long gmtOffset_sec = -18000;\nconst int daylightOffset_sec = 3600;\n\n\nbool wifiavail = false;\n\n// localtime from internal rtc\nString printLocalTime() {\n  struct tm timeinfo;\n  if (!getLocalTime(&timeinfo)) {\n    return (\"\");\n  }\n  return (asctime(&timeinfo));\n}\n\nString printLocalHour() {\n  struct tm timeinfo;\n  if (!getLocalTime(&timeinfo)) {\n    return (\"\");\n  }\n  return (String(asctime(&timeinfo)).substring(11, 16) + \" \");\n}\n\n// define functions\nvoid UpdateClients(void *pvParameters); // maintains the websocket display\n//void UpdateDatabase(void *pvParameters); // maintains the websocket display\nvoid initWiFi();\nvoid initTime();\n\n\nvoid setup() {\n  // start the serial interface\n  Serial.begin(115200);\n  delay(500);\n  initWiFi();\n  initTime();\n  aws.initWebServer();\n  aws.initWebSocket();\n  initSDCard();\n  checkForIndex();\n  digitalWrite(2, LOW);\n  pinMode(2, OUTPUT);\n  state.relay(false);\n  \n  xTaskCreatePinnedToCore(UpdateClients, // function name \n                          \"updateClients\" // A name just for humans\n                          ,\n                          4096 // This stack size can be checked & adjusted by\n                          // reading the Stack Highwater\n                          ,\n                          NULL,// task input parameter\n                          2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n                          // being the highest, and 0 being the lowest.\n                          ,\n                          NULL, // task handle\n                          ARDUINO_RUNNING_CORE);\n//\n//  xTaskCreatePinnedToCore(UpdateDatabase, \"updateDatabase\" // A name just for humans\n//                          ,\n//                          4096 // This stack size can be checked & adjusted by\n//                          // reading the Stack Highwater\n//                          ,\n//                          NULL, 2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n//                          // being the highest, and 0 being the lowest.\n//                          ,\n//                          NULL, ARDUINO_RUNNING_CORE);\n\n  ArduinoOTA\n  .onStart([]() {\n    String type;\n    if (ArduinoOTA.getCommand() == U_FLASH)\n      type = \"sketch\";\n    else // U_SPIFFS\n      type = \"filesystem\";\n\n    // NOTE: if updating SPIFFS this would be the place to unmount SPIFFS\n    SPIFFS.end();\n // Disable client connections    \n    ws.enable(false);\n\n    // Advertise connected clients what's going on\n    ws.textAll(\"OTA Update Started\");\n\n    // Close them\n    ws.closeAll();\n    state.setOta(true);\n\n    \n    Serial.println(\"Start updating \" + type);\n  })\n  .onEnd([]() {\n    Serial.println(\"\\nEnd\");\n  })\n  .onProgress([](unsigned int progress, unsigned int total) {\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\n  })\n  .onError([](ota_error_t error) {\n    Serial.printf(\"Error[%u]: \", error);\n    if (error == OTA_AUTH_ERROR)\n      Serial.println(\"Auth Failed\");\n    else if (error == OTA_BEGIN_ERROR)\n      Serial.println(\"Begin Failed\");\n    else if (error == OTA_CONNECT_ERROR)\n      Serial.println(\"Connect Failed\");\n    else if (error == OTA_RECEIVE_ERROR)\n      Serial.println(\"Receive Failed\");\n    else if (error == OTA_END_ERROR)\n      Serial.println(\"End Failed\");\n  });\n  ArduinoOTA.begin();\n}\n\nvoid loop() {\n  ArduinoOTA.handle(); // check if an update is available\n  if (WiFi.status() != WL_CONNECTED) // check if wifi is still connected, if not, reconnect\n    initWiFi();\n  vTaskDelay(60);\n}\n\nvoid UpdateClients(void *pvParameters) { // handle websocket and oled displays\n  (void)pvParameters;\n  for (;;) {\n    if(!state.getOta()) {aws.notifyClients();} // send state to the client as a json string\n    vTaskDelay(10000);\n  }\n}\n\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() > 3400 && state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}\n\n\n\n\nvoid initWiFi() {\n  Serial.println(\"connecting to wifi\");\n  // connect to wifi\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  if (WiFi.waitForConnectResult() != WL_CONNECTED) {\n  Serial.println(\"connecting to wifi failed\");\n  delay(500);\n  initWiFi();\n  }\n  Serial.println(\"wifi connected\");\n  wifiavail = true;\n}\n\nvoid initTime() {\n  // set the clock from ntp server\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n  printLocalTime();\n}\n"}}}Content-Length: 1909

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp","languageId":"cpp","version":1,"text":"#include\"State.h\"\n\nint State::moisture() {\n      int avg = 0;\n      for (int num = 0; num <= 9; num++) {\n        avg += analogRead(32);\n      }\n      jsonMap[\"moisture\"] = String(avg / 10);\n      return avg / 10;\n    }\n\n\n    int State::threshold() {\n      return jsonMap[\"threshold\"].toInt();\n    };\n    \n    int State::threshold(int value) {\n      jsonMap[\"threshold\"] = String(value);\n      return jsonMap[\"threshold\"].toInt();\n    };\n    \n\n    String State::filename() {\n      return jsonMap[\"filename\"];\n    };\n    \n    String State::filename(String value) {\n      jsonMap[\"filename\"] = value;\n      return jsonMap[\"filename\"];\n    };\n\n\n    bool State::setOta (bool value) {\n      ota = value;\n      return ota;\n    };\n    \n    bool State::getOta () {\n      return ota;\n    };\n\n\n    bool State::reload() {\n      return (jsonMap[\"reload\"] == \"true\");\n    };\n    \n    bool State::reload(bool value) {\n      jsonMap[\"reload\"] = value ? \"true\" : \"false\";\n      return (jsonMap[\"reload\"] == \"true\");\n    };\n\n\n    bool State::relay() {\n      return (jsonMap[\"relay\"] == \"true\");\n    };\n    \n    bool State::relay(bool value) {\n      jsonMap[\"relay\"] = value ? \"true\" : \"false\";\n      return (jsonMap[\"relay\"] == \"true\");\n    };\n\n\n    String State::getJSON() {\n      moisture();\n      String json = \"{\";\n      String quote = \"\\\"\";\n      for (auto const x : jsonMap) {\n        if (json.length() > 3) json += \",\";\n        json += quote + x.first + quote + \":\" + quote + x.second + quote;\n      };\n      json += \"}\";\n      Serial.println(json);\n      return json;\n    }\n\nState state;\n"}}}Content-Length: 729

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h","languageId":"cpp","version":1,"text":"#ifndef STATE\n#define STATE\n#include<Arduino.h>\n#include<map>\n//set initial state\n\nclass State {\n  public:\n\n    int moisture();\n\n    int threshold();\n    int threshold(int value);\n\n\n    String filename();\n    String filename(String value);\n\n\n    bool setOta (bool value);\n    bool getOta ();\n\n    bool reload();\n    bool reload(bool value);\n\n    bool relay();\n    bool relay(bool value);\n\n    String getJSON();\n\n  private:\n    std::map<String, String> jsonMap;\n    bool ota = false;\n\n};\n\n#endif\n"}}}Content-Length: 352

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred.h","languageId":"cpp","version":1,"text":"\n//wifi connection credentials\nconst char* ssid     = \"Espnet\";\n//const char* ssid     = \"Frontier4848\";\nconst char* password = \"*********\";\n"}}}Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h","languageId":"cpp","version":1,"text":"// wifi connection credentials\nconst char *ssid = \"Espnet\";\nconst char *password = \"8141695320\";\n"}}}Content-Length: 2788

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","languageId":"cpp","version":1,"text":"#include\"bcbaws.h\"\n\nBcbAws::BcbAws(State* istate){\n  state=istate;\n}\n\nvoid BcbAws::notifyClients() {\n  ws.textAll(state->getJSON());  // send non-slider updating data\n}\n\nvoid BcbAws::handleWebSocketMessage(void *arg, uint8_t *data, size_t len) { // receive the comm from the client and convert it into a string\n  AwsFrameInfo *info = (AwsFrameInfo *)arg;\n  if (info->final && info->index == 0 && info->len == len &&\n      info->opcode == WS_TEXT) {\n    data[len] = 0;\n    parseCommand((char *)data);\n  }\n}\n\nvoid BcbAws::onEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,\n             AwsEventType type, void *arg, uint8_t *data, size_t len) {\n  switch (type) {\n    case WS_EVT_CONNECT:\n      notifyClients();\n      break;\n    case WS_EVT_DISCONNECT:\n      Serial.printf(\"WebSocket client #%u disconnected\\n\", client->id());\n      break;\n    case WS_EVT_DATA:\n      handleWebSocketMessage(arg, data, len);\n      break;\n    case WS_EVT_PONG:\n    case WS_EVT_ERROR:\n      break;\n  }\n}\n\n\nvoid BcbAws::initWebSocket() {\n  ws.onEvent(onEvent);\n  server.addHandler(&ws);\n}\n\n\nvoid BcbAws::initWebServer() {\n  // Route for root / web page served from spiffs\n  // TODO add routines for dynamically updating index.htm\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request->send(SPIFFS, \"/index.htm\", \"text/html\");\n  });    \n  \n  server.on(\"/config\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request->send(SPIFFS, \"/config.htm\", \"text/html\");\n  }); \n  \n  server.on(\"/json\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request->send(200, \"application/json\", state.getJSON());\n  });\n  // start the web server\n  server.begin();\n}\n\n\nvoid BcbAws::parseCommand(String command) {\n  \n  if (command == \"relay\") {\n    state->relay(!state->relay());\n    digitalWrite(2,state->relay());\n    notifyClients();\n  }\n  // file upload handler\n\n  if (command.substring(0, 4) == \"upld\") {\n    state->filename(command.substring(5));\n    deleteFile(SPIFFS, \"/temp.txt\");\n  }\n\n  if (command.substring(0, 4) == \"comp\") {\n    deleteFile(SPIFFS, (\"/\" + state->filename()).c_str());\n    renameFile(SPIFFS, \"/temp.txt\", (\"/\" + state->filename()).c_str());\n    state->filename(\"\");\n  }\n\n  if (command.substring(0, 4) == \"file\") {\n    String message = command.substring(5);\n    appendFile(SPIFFS, \"/temp.txt\", message.c_str());\n  }\n\n  if (command == \"reload\") {\n    state->reload(true);\n    notifyClients();\n    state->reload(false);\n  }\n}\n"}}}Content-Length: 5622

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","languageId":"cpp","version":1,"text":"#ifndef BCBAWS\n#define BCBAWS\n#include <Arduino.h>\n#include <ESPAsyncWebServer.h>\n#include \"bcbsdcard.h\"\n#include <SPIFFS.h>\n#include \"State.h\"\n//#include <HTTPClient.h>\n\nAsyncWebServer server(80);\nAsyncWebSocket ws(\"/ws\");\n\nclass BcbAws{\n  public:\nBcbAws(State*istate);\nvoid parseCommand(String command);\nvoid notifyClients();\nvoid handleWebSocketMessage(void *arg, uint8_t *data, size_t len);\nvoid initWebSocket();\nvoid initWebServer();\nvoid onEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,\n             AwsEventType type, void *arg, uint8_t *data, size_t len);\n\n  private:\n//  AsyncWebServer server;\n//  AsyncWebSocket ws;\n  State* state;\n};\n// define functions\n//void parseCommand(String command);\n//void notifyClients();\n//void handleWebSocketMessage(void *arg, uint8_t *data, size_t len);\n//void initWebSocket();\n//void initWebServer();\n//void updateDB();\n\n// web server variables\n//AsyncWebServer server(80);\n//AsyncWebSocket ws(\"/ws\");\n// web client\n//HTTPClient http;\n//char req[450];\n\n//void notifyClients() {\n//  ws.textAll(state.getJSON());  // send non-slider updating data\n//}\n\n//void handleWebSocketMessage(void *arg, uint8_t *data, size_t len) { // receive the comm from the client and convert it into a string\n//  AwsFrameInfo *info = (AwsFrameInfo *)arg;\n//  if (info->final && info->index == 0 && info->len == len &&\n//      info->opcode == WS_TEXT) {\n//    data[len] = 0;\n//    parseCommand((char *)data);\n//  }\n//}\n\n\n// handle websocket connections\n//void onEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,\n//             AwsEventType type, void *arg, uint8_t *data, size_t len) {\n//  switch (type) {\n//    case WS_EVT_CONNECT:\n//      notifyClients();\n//      break;\n//    case WS_EVT_DISCONNECT:\n//      Serial.printf(\"WebSocket client #%u disconnected\\n\", client->id());\n//      break;\n//    case WS_EVT_DATA:\n//      handleWebSocketMessage(arg, data, len);\n//      break;\n//    case WS_EVT_PONG:\n//    case WS_EVT_ERROR:\n//      break;\n//  }\n//}\n\n// init websockets\n//void initWebSocket() {\n//  ws.onEvent(onEvent);\n//  server.addHandler(&ws);\n//}\n\n// init webserver\n//void initWebServer() {\n//  // Route for root / web page served from spiffs\n//  // TODO add routines for dynamically updating index.htm\n//  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest * request) {\n//    request->send(SPIFFS, \"/index.htm\", \"text/html\");\n//  });    \n//  \n//  server.on(\"/config\", HTTP_GET, [](AsyncWebServerRequest * request) {\n//    request->send(SPIFFS, \"/config.htm\", \"text/html\");\n//  }); \n//  \n//  server.on(\"/json\", HTTP_GET, [](AsyncWebServerRequest * request) {\n//    request->send(200, \"application/json\", state.getJSON());\n//  });\n//  // start the web server\n//  server.begin();\n//}\n\n\n\n//// convert state to json\n//String getJson(bool b) {\n//\n//  String response = \"{\\\"moisture\\\":\"+String(state.moisture())+\",\\\"relay\\\":\"+(state.relay()?\"\\\"on\\\"\":\"\\\"off\\\"\")+\",\\\"initial\\\": \\\"true\\\"}\";\n//\n//  return response;\n//}\n\n//parse the command coming from the client(s)\n//void parseCommand(String command) {\n//  Serial.println(command);\n//\n//  \n//  \n//  if (command == \"relay\") {\n//    state.relay(!state.relay());\n//    digitalWrite(2,state.relay());\n//    notifyClients();\n//  }\n//  // file upload handler\n//\n//  if (command.substring(0, 4) == \"upld\") {\n//    state.filename(command.substring(5));\n//    deleteFile(SPIFFS, \"/temp.txt\");\n//  }\n//\n//  if (command.substring(0, 4) == \"comp\") {\n//    deleteFile(SPIFFS, (\"/\" + state.filename()).c_str());\n//    renameFile(SPIFFS, \"/temp.txt\", (\"/\" + state.filename()).c_str());\n//    state.filename(\"\");\n//  }\n//\n//  if (command.substring(0, 4) == \"file\") {\n//    String message = command.substring(5);\n//    appendFile(SPIFFS, \"/temp.txt\", message.c_str());\n//  }\n//\n//  if (command == \"reload\") {\n//    state.reload(true);\n//    notifyClients();\n//    state.reload(false);\n//  }\n//}\n\n//void updateDB(){\n//      Serial.println(\"[HTTP] begin...\\n\");\n//      strcpy(req, (\"http://192.168.1.177/~brian/esp32/mysql-data-logger/garden.php?temp=\" + String(state.temp()) + \"&press=\" + String(state.pressure()) + \"&p64=\" + String(state.pressure64()) + \"&humid=\" + String(state.humidity())).c_str());\n//      Serial.println(String(state.temp()));\n//      Serial.println(String(state.pressure()));\n//      Serial.println(String(state.pressure64()));\n//      Serial.println(String(state.humidity()));\n//      Serial.println(String(req));\n//      http.begin(req); //HTTP\n//\n//      Serial.print(\"[HTTP] GET...\\n\");\n//      // start connection and send HTTP header\n//      int httpCode = http.GET();\n//\n//      // httpCode will be negative on error\n//      if (httpCode > 0) {\n//        // HTTP header has been send and Server response header has been handled\n//        Serial.printf(\"[HTTP] GET... code: %d\\n\", httpCode);\n//\n//        // file found at server\n//        if (httpCode == HTTP_CODE_OK) {\n//          String payload = http.getString();\n//          Serial.println(payload);\n//        }\n//      } else {\n//        Serial.printf(\"[HTTP] GET... failed, error: %s\\n\", http.errorToString(httpCode).c_str());\n//      }\n//\n//      http.end();\n//    }\n\n\n\n\n#endif\n"}}}Content-Length: 2481

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h","languageId":"cpp","version":1,"text":"#include \"FS.h\"\n#include \"SPIFFS.h\"\n#include \"State.h\"\n\n#ifndef BCBSD\n#define BCBSD\n#include \"defaulthtml.h\"\n\n\n// variables\nxSemaphoreHandle semFile = xSemaphoreCreateMutex(); // file operation lock\nvoid initSDCard() {\n  Serial.print(\"Initializing SD card...\");\n\n  if (!SPIFFS.begin(true)) {\n    Serial.println(\"initialization failed!\");\n    while (1);\n  }\n  Serial.println(\"initialization done.\");\n\n}\n\nvoid appendFile(fs::FS &fs, const char * path, const char * message) {\n\n  if (xSemaphoreTake(semFile, 500)) {\n    File file = fs.open(path, FILE_APPEND);\n\n    if (!file) {\n      return;\n    }\n    file.print(message);\n    file.close();\n\n    xSemaphoreGive(semFile);\n  }\n}\n\nvoid writeFile(fs::FS &fs, const char * path, const char * message) {\n\n  if (xSemaphoreTake(semFile, 500)) {\n    File file = fs.open(path, FILE_WRITE);\n\n    if (!file) {\n      return;\n    }\n    file.print(message);\n    file.close();\n\n    xSemaphoreGive(semFile);\n  }\n}\nString readFile(fs::FS &fs, const char * path){\n    Serial.printf(\"Reading file: %s\\r\\n\", path);\n\n    File file = fs.open(path);\n    if(!file || file.isDirectory()){\n        Serial.println(\"- failed to open file for reading\");\n        return \"\";\n    }\n    String result;\n    Serial.println(\"- read from file:\");\n    while(file.available()){\n        result += String(char(file.read()));\n    }\n    file.close();\n    return result;\n}\n\nvoid renameFile(fs::FS &fs, const char * path1, const char * path2) {\n  if (xSemaphoreTake(semFile, 500)) {\n    fs.rename(path1, path2);\n    xSemaphoreGive(semFile);\n  }\n}\n\nvoid deleteFile(fs::FS &fs, const char * path) {\n  if (xSemaphoreTake(semFile, 500)) {\n    fs.remove(path);\n    xSemaphoreGive(semFile);\n  }\n}\n\n// write the default index.htm to SPIFFS\n//  check if index exists and only update if it doesn't\nvoid checkForIndex(){\n//  if(SPIFFS.exists(\"/data.json\")) {\n//    state.json(readFile(SPIFFS, \"/data.json\"));\n//    Serial.println(state.json());\n//  }\n  if(SPIFFS.exists(\"/index.htm\")) return; // \n  deleteFile(SPIFFS,\"/index.htm\");\n  delay(500);\n  File file = SPIFFS.open(\"/index.htm\", FILE_WRITE);\n    file.print(htmlCode);\n    file.close();\n    }\n\n#endif\n"}}}Content-Length: 3516

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h","languageId":"cpp","version":1,"text":"//default html page if not in SPIFFS\n\n// beginning of default web page\nconst char htmlCode[]PROGMEM = R\"rawliteral(\n <!DOCTYPE HTML>\n<html>\n\n<head>\n  <! define meta data>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <! define the style CSS of your page>\n     \n</head>\n\n<body>\n\n\n\n    <input type='file' name='upload' id='upload' value=''><span id=\"percent\"></span>\n  </div>\n  <script>\n    var gateway = `ws://${window.location.hostname}/ws`;\n    var websocket;\n    var state = {};\n    var json = {};\n\n    window.addEventListener('load', onLoad);\n\n    function initWebSocket() {\n      console.log('Trying to open a WebSocket connection...');\n      websocket = new WebSocket(gateway);\n      websocket.onopen = onOpen;\n      websocket.onclose = onClose;\n      websocket.onmessage = onMessage;\n    }\n\n    function onOpen(event) {\n      console.log('Connection opened');\n    }\n\n    function onClose(event) {\n      console.log('Connection closed');\n      setTimeout(initWebSocket, 2000);\n    }\n\n    function toFixed(num, fixed) {\n      var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\n      return num.toString().match(re)[0];\n    }\n\n    function onMessage(event) {\n\n    }\n\n    // on page load\n    function onLoad(event) {\n      initWebSocket();\n      document.getElementById(\"upload\").addEventListener(\"change\", (e) => processFile(e));\n    }\n\n    function processFile(e) {\n      const reader = new FileReader();\n      reader.readAsText(e.path[0].files[0]);\n      var myfilename = e.path[0].files[0].name;\n\n      reader.onload = (e) => {\n        var myfile = e.target.result;\n        var myarray = myfile.split('');\n        var mylength = myfile.length;\n        i = 0;\n        k = 1;\n        var sendArray = [];\n        sendArray[0] = (\"upld:\" + myfilename);\n\n        function getChunk() {\n          var sendstring = '';\n          for (var j = 0; j < 512; j++) {\n            if (i < mylength) {\n              sendstring += myarray[i];\n            }\n            i++\n          }\n          return sendstring;\n        }\n\n        function loopThroughSplittedText(splittedText) {\n          splittedText.forEach(function (text, i) {\n            setTimeout(function () {\n              sendMessage(text, i);\n            }, i * 500)\n          })\n        }\n\n        while (i < mylength) {\n\n          sendArray[k] = (\"file:\" + getChunk());\n          k++;\n        }\n        sendArray[k] = (\"comp\");\n        sendstring = '';\n        loopThroughSplittedText(sendArray);\n      };\n    }\n\n    function sendMessage(data, index) {\n      if (index) var percent = index / k * 100;\n      if (data.substring(0, 4) == 'file') document.getElementById('percent').innerHTML = percent + ' %';\n      if (data.substring(0, 4) == 'comp') {\n        document.getElementById('percent').innerHTML = \"completed\";\n        setTimeout(() => {\n          sendMessage(\"reload\");\n        }, 2000);\n      }\n      websocket.send(data);\n    }\n      function doTime() {\n        document.getElementById('time').innerHTML = new Date().toLocaleString();\n      }\n      setInterval(doTime, 1000);\n\n  </script>\n</body>\n\n</html>\n)rawliteral\";\n\n// end of default web page\n"}}}Content-Length: 272

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 271

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 269

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 273

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 272

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/p
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 1130

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":16}},"severity":2,"code":"misc-definitions-in-headers","source":"clang-tidy","message":"Variable 'ssid' defined in a header file; variable definitions in header files can lead to ODR violations"},{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":20}},"severity":2,"code":"misc-definitions-in-headers","source":"clang-tidy","message":"Variable 'password' defined in a header file; variable definitions in header files can lead to ODR violations"}]},"jsonrpc":"2.0"}Content-Length: 1131

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":1,"character":12},"end":{"line":1,"character":16}},"severity":2,"code":"misc-definitions-in-headers","source":"clang-tidy","message":"Variable 'ssid' defined in a header file; variable definitions in header files can lead to ODR violations"},{"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":20}},"severity":2,"code":"misc-definitions-in-headers","source":"clang-tidy","message":"Variable 'password' defined in a header file; variable definitions in header files can lead to ODR violations"}]},"jsonrpc":"2.0"}Content-Length: 1027

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":9}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 1030

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 1072

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":3,"character":11},"end":{"line":3,"character":19}},"severity":1,"code":"typecheck_incomplete_array_needs_initializer","source":"clang","message":"Definition of variable with array type needs an explicit size or an initializer"},{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":28}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 1032

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":15}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 1698

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":39,"character":13},"end":{"line":39,"character":20}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":56,"character":43},"end":{"line":56,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":56,"character":48},"end":{"line":56,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":3,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":4,"result":[],"jsonrpc":"2.0"}
<<<
rojects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 270

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 273

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 275

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}Content-Length: 693

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 690

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 692

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}
>>>
Content-Length: 36

{"id":5,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":6,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":7,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":8,"result":[],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/67","percentage":2.985074626865672,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 36

{"id":9,"result":[],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/67","percentage":4.477611940298507,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/67","percentage":4.477611940298507,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":11,"result":[],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/67","percentage":5.970149253731344,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/67","percentage":7.462686567164179,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/67","percentage":7.462686567164179,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 691

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":12,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 696

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}
>>>
Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/67","percentage":8.955223880597014,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 37

{"id":13,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 694

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 693

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 273

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":14,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":15,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/67","percentage":10.447761194029852,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/67","percentage":10.447761194029852,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/67","percentage":11.940298507462687,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/67","percentage":11.940298507462687,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/67","percentage":13.432835820895523,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/67","percentage":13.432835820895523,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/67","percentage":14.925373134328359,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/67","percentage":14.925373134328359,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/67","percentage":16.417910447761194,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/67","percentage":17.91044776119403,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/67","percentage":19.402985074626866,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/67","percentage":19.402985074626866,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/67","percentage":20.895522388059703,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/67","percentage":20.895522388059703,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/67","percentage":22.388059701492537,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/67","percentage":23.880597014925375,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/67","percentage":23.880597014925375,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/67","percentage":25.37313432835821,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/67","percentage":25.37313432835821,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/67","percentage":26.865671641791046,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/67","percentage":26.865671641791046,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/67","percentage":28.35820895522388,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/67","percentage":28.35820895522388,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/67","percentage":29.850746268656717,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/67","percentage":29.850746268656717,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/67","percentage":31.34328358208955,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/67","percentage":31.34328358208955,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/67","percentage":32.83582089552239,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/67","percentage":34.32835820895522,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/67","percentage":35.82089552238806,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/67","percentage":35.82089552238806,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/67","percentage":37.3134328358209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/67","percentage":37.3134328358209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/67","percentage":38.80597014925373,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/67","percentage":38.80597014925373,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/67","percentage":40.298507462686565,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/67","percentage":40.298507462686565,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/67","percentage":41.791044776119406,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/67","percentage":41.791044776119406,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/67","percentage":43.28358208955224,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/67","percentage":43.28358208955224,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/67","percentage":44.776119402985074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/67","percentage":44.776119402985074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/67","percentage":46.26865671641791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/67","percentage":46.26865671641791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/67","percentage":47.76119402985075,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/67","percentage":47.76119402985075,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/67","percentage":49.25373134328358,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/67","percentage":50.74626865671642,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/67","percentage":50.74626865671642,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/67","percentage":52.23880597014925,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/67","percentage":52.23880597014925,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/67","percentage":53.73134328358209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/67","percentage":53.73134328358209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/67","percentage":55.223880597014926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/67","percentage":55.223880597014926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"38/67","percentage":56.71641791044776,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"39/67","percentage":58.208955223880594,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"39/67","percentage":58.208955223880594,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"40/67","percentage":59.701492537313435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"40/67","percentage":59.701492537313435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"41/67","percentage":61.19402985074627,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"41/67","percentage":61.19402985074627,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"42/67","percentage":62.6865671641791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"42/67","percentage":62.6865671641791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"43/67","percentage":64.17910447761194,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"43/67","percentage":64.17910447761194,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"44/67","percentage":65.67164179104478,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"45/67","percentage":67.16417910447761,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"45/67","percentage":67.16417910447761,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"46/67","percentage":68.65671641791045,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"46/67","percentage":68.65671641791045,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"47/67","percentage":70.14925373134328,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"47/67","percentage":70.14925373134328,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"48/67","percentage":71.64179104477611,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"48/67","percentage":71.64179104477611,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":19}}}
>>>
Content-Length: 125

{"id":17,"result":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":19}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":18,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"49/67","percentage":73.13432835820896,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"49/67","percentage":73.13432835820896,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"50/67","percentage":74.6268656716418,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"50/67","percentage":74.6268656716418,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"51/67","percentage":76.11940298507463,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"52/67","percentage":77.61194029850746,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"52/67","percentage":77.61194029850746,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"53/67","percentage":79.1044776119403,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"54/67","percentage":80.59701492537313,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"54/67","percentage":80.59701492537313,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"55/67","percentage":82.08955223880596,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"55/67","percentage":82.08955223880596,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"56/67","percentage":83.58208955223881,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"56/67","percentage":83.58208955223881,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"57/67","percentage":85.07462686567165,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"58/67","percentage":86.56716417910448,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"58/67","percentage":86.56716417910448,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"59/67","percentage":88.05970149253731,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"59/67","percentage":88.05970149253731,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"60/67","percentage":89.55223880597015,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"60/67","percentage":89.55223880597015,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"61/67","percentage":91.04477611940298,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"61/67","percentage":91.04477611940298,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"62/67","percentage":92.53731343283582,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"63/67","percentage":94.02985074626865,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":2},"contentChanges":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":19}},"rangeLength":0,"text":","}]}}
>>>
Content-Length: 1204

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":21}},"severity":1,"code":"missing_param","source":"clang","message":"Expected parameter declarator"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":19,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":20},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 92

{"id":19,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 449

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":21}},"message":"Expected parameter declarator","severity":1,"code":"missing_param","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":20,"result":[],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"64/67","percentage":95.5223880597015,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":3},"contentChanges":[{"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":20}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 1204

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":22}},"severity":1,"code":"missing_param","source":"clang","message":"Expected parameter declarator"}]},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"65/67","percentage":97.01492537313433,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 449

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":22}},"message":"Expected parameter declarator","severity":1,"code":"missing_param","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":21,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"66/67","percentage":98.50746268656717,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":3}}}
>>>
Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":9,"character":21}}}
>>>
Content-Length: 123

{"id":22,"result":[{"range":{"start":{"line":9,"character":15},"end":{"line":9,"character":21}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":23,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":19}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}
>>>
Content-Length: 39

{"id":24,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":20}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}Content-Length: 201

{"jsonrpc":"2.0","id":26,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":19}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":26}}Content-Length: 201

{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":20}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}Content-Length: 449

{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":22}},"message":"Expected parameter declarator","severity":1,"code":"missing_param","source":"clang"}]}}}
>>>
Content-Length: 39

{"id":25,"result":null,"jsonrpc":"2.0"}Content-Length: 39

{"id":26,"result":null,"jsonrpc":"2.0"}Content-Length: 39

{"id":27,"result":null,"jsonrpc":"2.0"}Content-Length: 37

{"id":28,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 317

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":4},"contentChanges":[{"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":21}},"rangeLength":0,"text":"AsyncWebServer server"}]}}Content-Length: 275

{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":14,"character":42},"end":{"line":14,"character":42}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":29,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":4}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":5},"contentChanges":[{"range":{"start":{"line":14,"character":42},"end":{"line":14,"character":42}},"rangeLength":0,"text":","}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":29}}Content-Length: 280

{"jsonrpc":"2.0","id":30,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":43},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}Content-Length: 275

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":14,"character":43},"end":{"line":14,"character":43}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":5}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":6},"contentChanges":[{"range":{"start":{"line":14,"character":43},"end":{"line":14,"character":43}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":30}}Content-Length: 256

{"jsonrpc":"2.0","id":32,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":44},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 275

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":14,"character":44},"end":{"line":14,"character":44}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 92

{"id":30,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":31,"result":[],"jsonrpc":"2.0"}Content-Length: 92

{"id":32,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":33,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":6}}}
>>>
Content-Length: 1204

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":14,"character":43},"end":{"line":14,"character":44}},"severity":1,"code":"missing_param","source":"clang","message":"Expected parameter declarator"}]},"jsonrpc":"2.0"}Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 1204

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":14,"character":44},"end":{"line":14,"character":45}},"severity":1,"code":"missing_param","source":"clang","message":"Expected parameter declarator"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":10,"character":17}}}
>>>
Content-Length: 125

{"id":34,"result":[{"range":{"start":{"line":10,"character":15},"end":{"line":10,"character":17}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 274

{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":35,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":36,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":37,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":42}}}
>>>
Content-Length: 39

{"id":37,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":38,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":42}}}
>>>
Content-Length: 39

{"id":38,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":39,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":43}}}
>>>
Content-Length: 39

{"id":39,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":40,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":43}}}
>>>
Content-Length: 39

{"id":40,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":41,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":43}}}
>>>
Content-Length: 39

{"id":41,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 449

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":14,"character":44},"end":{"line":14,"character":44}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":44},"end":{"line":14,"character":45}},"message":"Expected parameter declarator","severity":1,"code":"missing_param","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":42,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":7},"contentChanges":[{"range":{"start":{"line":14,"character":44},"end":{"line":14,"character":44}},"rangeLength":0,"text":"AsyncWebSocket ws"}]}}Content-Length: 275

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":14,"character":61},"end":{"line":14,"character":61}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":43,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":7}}}
>>>
Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":14,"character":61},"end":{"line":14,"character":61}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":44,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":45,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":61}}}
>>>
Content-Length: 39

{"id":45,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":60}}}
>>>
Content-Length: 125

{"id":46,"result":[{"range":{"start":{"line":14,"character":59},"end":{"line":14,"character":61}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":9},"end":{"line":14,"character":61}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":47,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":61}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":48,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":28}}}
>>>
Content-Length: 209

{"id":49,"result":[{"range":{"start":{"line":2,"character":22},"end":{"line":2,"character":28}},"kind":1},{"range":{"start":{"line":3,"character":8},"end":{"line":3,"character":14}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":28},"end":{"line":2,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":50,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 336

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":2},"contentChanges":[{"range":{"start":{"line":2,"character":28},"end":{"line":2,"character":28}},"rangeLength":0,"text":"AsyncWebServer server, AsyncWebSocket ws"}]}}Content-Length: 275

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":68},"end":{"line":2,"character":68}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":51,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":2}}}Content-Length: 214

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":28}}}Content-Length: 275

{"jsonrpc":"2.0","id":53,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":28},"end":{"line":2,"character":28}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":51}}
>>>
Content-Length: 2379

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":43},"end":{"line":2,"character":49}},"severity":1,"code":"expected","source":"clang","message":"Expected ')'\n\nbcbaws.cpp:3:15: note: to match this '('"},{"range":{"start":{"line":2,"character":14},"end":{"line":2,"character":15}},"severity":3,"message":"To match this '('\n\nbcbaws.cpp:3:44: error: expected ')'"},{"range":{"start":{"line":3,"character":8},"end":{"line":3,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'istate'; did you mean 'state'? (fix available)\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:28:10:\nnote: 'state' declared here"},{"range":{"start":{"line":39,"character":13},"end":{"line":39,"character":20}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":56,"character":43},"end":{"line":56,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":56,"character":48},"end":{"line":56,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 123

{"id":52,"result":[{"range":{"start":{"line":2,"character":22},"end":{"line":2,"character":42}},"kind":1}],"jsonrpc":"2.0"}Content-Length: 37

{"id":53,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":28},"end":{"line":2,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":54,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":3},"contentChanges":[{"range":{"start":{"line":2,"character":28},"end":{"line":2,"character":28}},"rangeLength":0,"text":","}]}}Content-Length: 281

{"jsonrpc":"2.0","id":55,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":29},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 1931

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'"},{"range":{"start":{"line":39,"character":13},"end":{"line":39,"character":20}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":56,"character":43},"end":{"line":56,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":56,"character":48},"end":{"line":56,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":55,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":29},"end":{"line":2,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":56,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":3}}}Content-Length: 275

{"jsonrpc":"2.0","id":57,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":29},"end":{"line":2,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":57,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":11}}}
>>>
Content-Length: 302

{"id":58,"result":{"contents":{"kind":"markdown","value":"### constructor `BcbAws::BcbAws`  \n\n---\n```cpp\n// In BcbAws\npublic: BcbAws::BcbAws(State *istate, AsyncWebServer server, AsyncWebSocket ws)\n```"},"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 526

{"jsonrpc":"2.0","id":59,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'","severity":1,"code":"member_decl_does_not_match","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 37

{"id":59,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":60,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":71},"end":{"line":2,"character":71}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":60,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":61,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":62,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":41}}}
>>>
Content-Length: 227

{"id":62,"result":{"contents":{"kind":"markdown","value":"### class `AsyncWebServer`  \n\n---\n```cpp\nclass AsyncWebServer {}\n```"},"range":{"start":{"line":2,"character":29},"end":{"line":2,"character":43}}},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":63,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":64,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":10,"character":25},"end":{"line":10,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":64,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":10,"character":25},"end":{"line":11,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":65,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":66,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":66,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":9,"character":0},"end":{"line":10,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":67,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":8},"contentChanges":[{"range":{"start":{"line":9,"character":0},"end":{"line":10,"character":25}},"rangeLength":52,"text":""}]}}
>>>
Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":8}}}Content-Length: 201

{"jsonrpc":"2.0","id":68,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":6,"character":2}}}
>>>
Content-Length: 39

{"id":68,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":69,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":10,"character":4}}}
>>>
Content-Length: 39

{"id":69,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":70,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":12,"character":21}}}
>>>
Content-Length: 241

{"id":70,"result":{"contents":{"kind":"markdown","value":"### macro `ARDUINO_RUNNING_CORE`  \n\n---\n```cpp\n#define ARDUINO_RUNNING_CORE 1\n```"},"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":71,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":12,"character":30}}}
>>>
Content-Length: 37

{"id":71,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":72,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":12,"character":30},"end":{"line":12,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":72,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":2},"contentChanges":[{"range":{"start":{"line":12,"character":30},"end":{"line":12,"character":30}},"rangeLength":0,"text":"\n"}]}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":2}}}Content-Length: 202

{"jsonrpc":"2.0","id":73,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":14,"character":8}}}
>>>
Content-Length: 240

{"id":73,"result":{"contents":{"kind":"markdown","value":"### variable `state`  \n\n---\nType: `class State`  \n\n---\n```cpp\nState state\n```"},"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":11}}},"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":73}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 351

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":3},"contentChanges":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":0}},"rangeLength":0,"text":"AsyncWebServer server(80);\nAsyncWebSocket ws(\"/ws\");"}]}}
>>>
Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":74,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":14,"character":25},"end":{"line":14,"character":25}},"context":{"diagnostics":[]}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":3}}}Content-Length: 203

{"jsonrpc":"2.0","id":75,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":17}}}Content-Length: 215

{"jsonrpc":"2.0","id":76,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":17}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":75}}Content-Length: 277

{"jsonrpc":"2.0","id":77,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":17}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":74}}Content-Length: 203

{"jsonrpc":"2.0","id":78,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":19,"character":20}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":78}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":76}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":4},"contentChanges":[{"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":17}},"rangeLength":0,"text":","}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":77}}Content-Length: 282

{"jsonrpc":"2.0","id":79,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":18},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}Content-Length: 277

{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":18},"end":{"line":16,"character":18}},"context":{"diagnostics":[]}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":4}}}Content-Length: 203

{"jsonrpc":"2.0","id":81,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":19,"character":21}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":81}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":5},"contentChanges":[{"range":{"start":{"line":16,"character":18},"end":{"line":16,"character":18}},"rangeLength":0,"text":"s"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":80}}Content-Length: 236

{"jsonrpc":"2.0","id":82,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":19},"context":{"triggerKind":1}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":79}}Cont
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}Content-Length: 37

{"id":74,"result":[],"jsonrpc":"2.0"}Content-Length: 247

{"id":75,"result":{"contents":{"kind":"markdown","value":"### constructor `BcbAws`  \n\n---\n```cpp\n// In BcbAws\npublic: BcbAws(State *istate)\n```"},"range":{"start":{"line":17,"character":12},"end":{"line":17,"character":17}}},"jsonrpc":"2.0"}Content-Length: 124

{"id":76,"result":[{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":10}},"kind":1}],"jsonrpc":"2.0"}Content-Length: 37

{"id":77,"result":[],"jsonrpc":"2.0"}Content-Length: 340

{"id":78,"result":{"contents":{"kind":"markdown","value":"### variable `ntpServer`  \n\n---\nType: `const char *`  \nValue = `\u0026\"pool.ntp.org\"[0]`  \ninternal rtc variables  \n\n---\n```cpp\nconst char *ntpServer = \"pool.ntp.org\"\n```"},"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":21}}},"jsonrpc":"2.0"}Content-Length: 92

{"id":79,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":80,"result":[],"jsonrpc":"2.0"}Content-Length: 340

{"id":81,"result":{"contents":{"kind":"markdown","value":"### variable `ntpServer`  \n\n---\nType: `const char *`  \nValue = `\u0026\"pool.ntp.org\"[0]`  \ninternal rtc variables  \n\n---\n```cpp\nconst char *ntpServer = \"pool.ntp.org\"\n```"},"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":21}}},"jsonrpc":"2.0"}Content-Length: 39914

{"id":82,"result":{"isIncomplete":true,"items":[{"label":" state","kind":6,"detail":"State","sortText":"3e7ba499state","filterText":"state","insertText":"state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"state"}},{"label":"•String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"3e9b0d3aString","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"String"}},{"label":"•size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstddef\u003e`"},"sortText":"3ebe032csize_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"size_t"}},{"label":" State","kind":7,"documentation":{"kind":"markdown","value":"set initial state"},"sortText":"3ef6f28bState","filterText":"State","insertText":"State","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"State"}},{"label":" short","kind":14,"sortText":"3f000000short","filterText":"short","insertText":"short","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"3f000000signed","filterText":"signed","insertText":"signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"3f000000sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"3f000000sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"struct"}},{"label":" SemaphoreHandle_t","kind":8,"sortText":"3f17ae13SemaphoreHandle_t","filterText":"SemaphoreHandle_t","insertText":"SemaphoreHandle_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SemaphoreHandle_t"}},{"label":" State(…)","kind":4,"detail":"[3 overloads]","sortText":"3f2cccccState","filterText":"State","insertText":"State($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"State($0)"}},{"label":" server","kind":6,"detail":"AsyncWebServer","sortText":"3f2cccccserver","filterText":"server","insertText":"server","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"server"}},{"label":" semFile","kind":6,"detail":"SemaphoreHandle_t","documentation":{"kind":"markdown","value":"file operation lock"},"sortText":"3f5b380csemFile","filterText":"semFile","insertText":"semFile","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"semFile"}},{"label":" ssid","kind":6,"detail":"const char *","documentation":{"kind":"markdown","value":"wifi connection credentials"},"sortText":"3f651eb8ssid","filterText":"ssid","insertText":"ssid","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"ssid"}},{"label":" String(…)","kind":4,"detail":"[13 overloads]","sortText":"3f733333String","filterText":"String","insertText":"String($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"String($0)"}},{"label":"•Serial","kind":6,"detail":"HardwareSerial","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"3f954e3dSerial","filterText":"Serial","insertText":"Serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"Serial"}},{"label":" std","kind":9,"sortText":"3f9eb851std","filterText":"std","insertText":"std","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"std"}},{"label":" setup()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"3ffb38a5setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"setup()"}},{"label":"•strlen(const char *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"3ffbbe3cstrlen","filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strlen(${1:const char *})"}},{"label":"•StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"400a5edbStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"StringSumHelper"}},{"label":"•sprintf(char *, const char *, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"400cad55sprintf","filterText":"sprintf","insertText":"sprintf(${1:char *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"sprintf(${1:char *}, ${2:const char *, ...})"}},{"label":"•spi_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp32-hal-spi.h\"`"},"sortText":"401b9d2dspi_t","filterText":"spi_t","insertText":"spi_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"spi_t"}},{"label":"•Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \ncompatability macros for testing  \n#define getInt() parseInt()  \n#define getInt(skipChar) parseInt(skipchar)  \n#define getFloat() parseFloat()  \n#define getFloat(skipChar) parseFloat(skipChar)  \n#define getString( pre_string, post_string, buffer, length) readBytesBetween( pre_string, terminator, buffer, length)"},"sortText":"401f42fbStream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"Stream"}},{"label":"•strcpy(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403ec9efstrcpy","filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strcpy(${1:char *}, ${2:const char *})"}},{"label":"•SDA","kind":6,"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"403f858bSDA","filterText":"SDA","insertText":"SDA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SDA"}},{"label":"•SPIFFS","kind":6,"detail":"fs::SPIFFSFS","documentation":{"kind":"markdown","value":"From `\"SPIFFS.h\"`"},"sortText":"403f858bSPIFFS","filterText":"SPIFFS","insertText":"SPIFFS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SPIFFS"}},{"label":"•STA_CONNECTED_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bSTA_CONNECTED_BIT","filterText":"STA_CONNECTED_BIT","insertText":"STA_CONNECTED_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"STA_CONNECTED_BIT"}},{"label":"•STA_HAS_IP6_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bSTA_HAS_IP6_BIT","filterText":"STA_HAS_IP6_BIT","insertText":"STA_HAS_IP6_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"STA_HAS_IP6_BIT"}},{"label":"•STA_HAS_IP_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bSTA_HAS_IP_BIT","filterText":"STA_HAS_IP_BIT","insertText":"STA_HAS_IP_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"STA_HAS_IP_BIT"}},{"label":"•STA_STARTED_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bSTA_STARTED_BIT","filterText":"STA_STARTED_BIT","insertText":"STA_STARTED_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"STA_STARTED_BIT"}},{"label":"•scanf(const char *, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bscanf","filterText":"scanf","insertText":"scanf(${1:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"scanf(${1:const char *, ...})"}},{"label":"•snprintf(char *, size_t, const char *, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bsnprintf","filterText":"snprintf","insertText":"snprintf(${1:char *}, ${2:size_t}, ${3:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"snprintf(${1:char *}, ${2:size_t}, ${3:const char *, ...})"}},{"label":"•srand(unsigned int __seed)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bsrand","filterText":"srand","insertText":"srand(${1:unsigned int __seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"srand(${1:unsigned int __seed})"}},{"label":"•stpcpy(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstpcpy","filterText":"stpcpy","insertText":"stpcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"stpcpy(${1:char *}, ${2:const char *})"}},{"label":"•stpncpy(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstpncpy","filterText":"stpncpy","insertText":"stpncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"stpncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":"•strcasecmp(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcasecmp","filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strcasecmp(${1:const char *}, ${2:const char *})"}},{"label":"•strcasestr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcasestr","filterText":"strcasestr","insertText":"strcasestr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strcasestr(${1:const char *}, ${2:const char *})"}},{"label":"•strchr(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrchr","filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strchr(${1:const char *}, ${2:int})"}},{"label":"•strchrnul(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrchrnul","filterText":"strchrnul","insertText":"strchrnul(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strchrnul(${1:const char *}, ${2:int})"}},{"label":"•strcmp(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcmp","filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strcmp(${1:const char *}, ${2:const char *})"}},{"label":"•strcoll(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcoll","filterText":"strcoll","insertText":"strcoll(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strcoll(${1:const char *}, ${2:const char *})"}},{"label":"•strcspn(const char *, const char *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrcspn","filterText":"strcspn","insertText":"strcspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strcspn(${1:const char *}, ${2:const char *})"}},{"label":"•strdup(const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrdup","filterText":"strdup","insertText":"strdup(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strdup(${1:const char *})"}},{"label":"•strerror_r(int, char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrerror_r","filterText":"strerror_r","insertText":"strerror_r(${1:int}, ${2:char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strerror_r(${1:int}, ${2:char *}, ${3:size_t})"}},{"label":"•strlcat(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlcat","filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":"•strlwr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrlwr","filterText":"strlwr","insertText":"strlwr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strlwr(${1:char *})"}},{"label":"•strncmp(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncmp","filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":"•strncpy(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrncpy","filterText":"strncpy","insertText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":"•strnlen(const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrnlen","filterText":"strnlen","insertText":"strnlen(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strnlen(${1:const char *}, ${2:size_t})"}},{"label":"•strpbrk(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrpbrk","filterText":"strpbrk","insertText":"strpbrk(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strpbrk(${1:const char *}, ${2:const char *})"}},{"label":"•strrchr(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrrchr","filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strrchr(${1:const char *}, ${2:int})"}},{"label":"•strsignal(int __signo)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrsignal","filterText":"strsignal","insertText":"strsignal(${1:int __signo})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strsignal(${1:int __signo})"}},{"label":"•strspn(const char *, const char *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrspn","filterText":"strspn","insertText":"strspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strspn(${1:const char *}, ${2:const char *})"}},{"label":"•strstr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrstr","filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strstr(${1:const char *}, ${2:const char *})"}},{"label":"•strtok_r(char *, const char *, char **)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"sortText":"403f858bstrtok_r","filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})"}},{"label":"•system_prov_event_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bsystem_prov_event_t","filterText":"system_prov_event_t","insertText":"system_prov_event_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"system_prov_event_t"}},{"label":"•socket(int domain, int type, int protocol)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"lwip/sockets.h\"`"},"sortText":"40463cd8socket","filterText":"socket","insertText":"socket(${1:int domain}, ${2:int type}, ${3:int protocol})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"socket(${1:int domain}, ${2:int type}, ${3:int protocol})"}},{"label":"•StreamString","kind":7,"documentation":{"kind":"markdown","value":"From `\"StreamString.h\"`"},"sortText":"40500923StreamString","filterText":"StreamString","insertText":"StreamString","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"StreamString"}},{"label":"•sigmaDeltaAttachPin(uint8_t pin, uint8_t channel)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"esp32-hal-sigmadelta.h\"`"},"sortText":"40500923sigmaDeltaAttachPin","filterText":"sigmaDeltaAttachPin","insertText":"sigmaDeltaAttachPin(${1:uint8_t pin}, ${2:uint8_t channel})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"sigmaDeltaAttachPin(${1:uint8_t pin}, ${2:uint8_t channel})"}},{"label":"•sinhf(float)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"40500923sinhf","filterText":"sinhf","insertText":"sinhf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"sinhf(${1:float})"}},{"label":"•spiFrequencyToClockDiv(uint32_t freq)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-spi.h\"`  \nHelper functions to translate frequency to clock divider and back"},"sortText":"40500923spiFrequencyToClockDiv","filterText":"spiFrequencyToClockDiv","insertText":"spiFrequencyToClockDiv(${1:uint32_t freq})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"spiFrequencyToClockDiv(${1:uint32_t freq})"}},{"label":"•spiSSClear(spi_t *spi)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"esp32-hal-spi.h\"`  \nDeactivate enabled SPI_CSx pins"},"sortText":"40500923spiSSClear","filterText":"spiSSClear","insertText":"spiSSClear(${1:spi_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"spiSSClear(${1:spi_t *spi})"}},{"label":"•spiSSEnable(spi_t *spi)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"esp32-hal-spi.h\"`  \nEnable/Disable hardware control of SPI_CSx pins"},"sortText":"40500923spiSSEnable","filterText":"spiSSEnable","insertText":"spiSSEnable(${1:spi_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"spiSSEnable(${1:spi_t *spi})"}},{"label":"•spiWriteWord(spi_t *spi, uint16_t data)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"esp32-hal-spi.h\"`"},"sortText":"40500923spiWriteWord","filterText":"spiWriteWord","insertText":"spiWriteWord(${1:spi_t *spi}, ${2:uint16_t data})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"spiWriteWord(${1:spi_t *spi}, ${2:uint16_t data})"}},{"label":"•SeekEnd","kind":18,"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"sortText":"4051050aSeekEnd","filterText":"SeekEnd","insertText":"SeekEnd","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SeekEnd"}},{"label":"•sbrk(ptrdiff_t __incr)","kind":3,"detail":"void *","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"405d8e68sbrk","filterText":"sbrk","insertText":"sbrk(${1:ptrdiff_t __incr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"sbrk(${1:ptrdiff_t __incr})"}},{"label":"•select(int nfds, _types_fd_set *readfds, _types_fd_set *writefds, _types_fd_set *errorfds, struct timeval *timeout)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/select.h\u003e`"},"sortText":"405d8e68select","filterText":"select","insertText":"select(${1:int nfds}, ${2:_types_fd_set *readfds}, ${3:_types_fd_set *writefds}, ${4:_types_fd_set *errorfds}, ${5:struct timeval *timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"select(${1:int nfds}, ${2:_types_fd_set *readfds}, ${3:_types_fd_set *writefds}, ${4:_types_fd_set *errorfds}, ${5:struct timeval *timeout})"}},{"label":"•stat(const char *__path, struct stat *__sbuf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"405d8e68stat","filterText":"stat","insertText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})"}},{"label":"•step_A","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"405d8e68step_A","filterText":"step_A","insertText":"step_A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"step_A"}},{"label":"•step_B","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"405d8e68step_B","filterText":"step_B","insertText":"step_B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"step_B"}},{"label":"•step_C","kind":20,"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"sortText":"405d8e68step_C","filterText":"step_C","insertText":"step_C","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"step_C"}},{"label":"•step_a","kind":20,"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"sortText":"405d8e68step_a","filterText":"step_a","insertText":"step_a","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"step_a"}},{"label":"•system_event_cb_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_event_loop.h\"`  \n@brief Application specified event callback function  \n@param void \\*ctx : reserved for user  \n@param system_event_t \\*event : event type defined in this file  \n@return ESP_OK : succeed  \n@return others : fail"},"sortText":"405d8e68system_event_cb_t","filterText":"system_event_cb_t","insertText":"system_event_cb_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"system_event_cb_t"}},{"label":"•fs::SPIFFSFS","kind":7,"documentation":{"kind":"markdown","value":"From `\"SPIFFS.h\"`"},"sortText":"405efd9cSPIFFSFS","filterText":"SPIFFSFS","insertText":"fs::SPIFFSFS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"fs::SPIFFSFS"}},{"label":"•std::signbit(_Tp __x)","kind":3,"detail":"typename __gnu_cxx::__enable_if\u003c__is_integer\u003c_Tp\u003e::__value, bool\u003e::__type","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"405f99f3signbit","filterText":"signbit","insertText":"std::signbit(${1:_Tp __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"std::signbit(${1:_Tp __x})"}},{"label":"•std::sinh(float __x)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"405f99f3sinh","filterText":"sinh","insertText":"std::sinh(${1:float __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"std::sinh(${1:float __x})"}},{"label":"•SIGMADELTA","kind":6,"detail":"gpio_sd_dev_t","documentation":{"kind":"markdown","value":"From `\"soc/gpio_sd_struct.h\"`"},"sortText":"40680cb3SIGMADELTA","filterText":"SIGMADELTA","insertText":"SIGMADELTA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SIGMADELTA"}},{"label":"•SPI0","kind":6,"detail":"spi_dev_t","documentation":{"kind":"markdown","value":"From `\"soc/spi_struct.h\"`  \nSPI0 IS FOR INTERNAL USE"},"sortText":"4068a03fSPI0","filterText":"SPI0","insertText":"SPI0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SPI0"}},{"label":"•SPIFFSEditor","kind":7,"documentation":{"kind":"markdown","value":"From `\"SPIFFSEditor.h\"`"},"sortText":"4068a03fSPIFFSEditor","filterText":"SPIFFSEditor","insertText":"SPIFFSEditor","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SPIFFSEditor"}},{"label":"•spi_dev_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"soc/spi_struct.h\"`"},"sortText":"4068a03fspi_dev_t","filterText":"spi_dev_t","insertText":"spi_dev_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"spi_dev_t"}},{"label":"•std::scalbln","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"406e2eddscalbln","filterText":"scalbln","insertText":"std::scalbln","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"std::scalbln"}},{"label":"•std::scalblnf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"406e2eddscalblnf","filterText":"scalblnf","insertText":"std::scalblnf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"std::scalblnf"}},{"label":"•SYSTEM_EVENT_AP_STOP","kind":20,"detail":"system_event_id_t","documentation":{"kind":"markdown","value":"From `\"esp_event_legacy.h\"`  \nESP32 soft-AP stop"},"sortText":"4071b066SYSTEM_EVENT_AP_STOP","filterText":"SYSTEM_EVENT_AP_STOP","insertText":"SYSTEM_EVENT_AP_STOP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SYSTEM_EVENT_AP_STOP"}},{"label":"•SYSTEM_EVENT_STA_STOP","kind":20,"detail":"system_event_id_t","documentation":{"kind":"markdown","value":"From `\"esp_event_legacy.h\"`  \nESP32 station stop"},"sortText":"4071b066SYSTEM_EVENT_STA_STOP","filterText":"SYSTEM_EVENT_STA_STOP","insertText":"SYSTEM_EVENT_STA_STOP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SYSTEM_EVENT_STA_STOP"}},{"label":"•SYSTEM_EVENT_STA_WPS_ER_FAILED","kind":20,"detail":"system_event_id_t","documentation":{"kind":"markdown","value":"From `\"esp_event_legacy.h\"`  \nESP32 station wps fails in enrollee mode"},"sortText":"4071b066SYSTEM_EVENT_STA_WPS_ER_FAILED","filterText":"SYSTEM_EVENT_STA_WPS_ER_FAILED","insertText":"SYSTEM_EVENT_STA_WPS_ER_FAILED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SYSTEM_EVENT_STA_WPS_ER_FAILED"}},{"label":"•system_event_id_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_event_legacy.h\"`"},"sortText":"4071b066system_event_id_t","filterText":"system_event_id_t","insertText":"system_event_id_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"system_event_id_t"}},{"label":"•system_event_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_event_legacy.h\"`"},"sortText":"4071b066system_event_t","filterText":"system_event_t","insertText":"system_event_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"system_event_t"}},{"label":"•sockaddr_in","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/sockets.h\"`  \nmembers are in network byte order"},"sortText":"4077edb9sockaddr_in","filterText":"sockaddr_in","insertText":"sockaddr_in","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"sockaddr_in"}},{"label":"•ArduinoJson6173_91::serializeJsonPretty(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Json/PrettyJsonSerializer.hpp\"`"},"sortText":"4078a156serializeJsonPretty","filterText":"serializeJsonPretty","insertText":"ArduinoJson6173_91::serializeJsonPretty($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"ArduinoJson6173_91::serializeJsonPretty($0)"}},{"label":"•ArduinoJson6173_91::serializeMsgPack(const TSource \u0026source, void *output, size_t size)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/MsgPack/MsgPackSerializer.hpp\"`"},"sortText":"4078a156serializeMsgPack","filterText":"serializeMsgPack","insertText":"ArduinoJson6173_91::serializeMsgPack(${1:const TSource \u0026source}, ${2:void *output}, ${3:size_t size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"ArduinoJson6173_91::serializeMsgPack(${1:const TSource \u0026source}, ${2:void *output}, ${3:size_t size})"}},{"label":"•std::size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cbits/c++config.h\u003e`"},"sortText":"4078a156size_t","filterText":"size_t","insertText":"std::size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"std::size_t"}},{"label":"•SC_STATUS_GETTING_SSID_PSWD","kind":20,"detail":"smartconfig_status_t","documentation":{"kind":"markdown","value":"From `\"esp_smartconfig.h\"`  \nGetting SSID and password of target AP"},"sortText":"40791bfcSC_STATUS_GETTING_SSID_PSWD","filterText":"SC_STATUS_GETTING_SSID_PSWD","insertText":"SC_STATUS_GETTING_SSID_PSWD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SC_STATUS_GETTING_SSID_PSWD"}},{"label":"•SC_STATUS_LINK_OVER","kind":20,"detail":"smartconfig_status_t","documentation":{"kind":"markdown","value":"From `\"esp_smartconfig.h\"`  \nConnected to AP successfully"},"sortText":"40791bfcSC_STATUS_LINK_OVER","filterText":"SC_STATUS_LINK_OVER","insertText":"SC_STATUS_LINK_OVER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SC_STATUS_LINK_OVER"}},{"label":"•sc_callback_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_smartconfig.h\"`  \n@brief The callback of SmartConfig, executed when smart-config status changed.  \n@param status Status of SmartConfig:  \n\\- SC_STATUS_GETTING_SSID_PSWD : pdata is a pointer of smartconfig_type_t, means config type.  \n\\- SC_STATUS_LINK : pdata is a pointer to wifi_config_t.  \n\\- SC_STATUS_LINK_OVER : pdata is a pointer of phone's IP address(4 bytes) if pdata unequal NULL.  \n\\- otherwise : parameter void \\*pdata is NULL.  \n@param pdata According to the different status have different values."},"sortText":"40791bfcsc_callback_t","filterText":"sc_callback_t","insertText":"sc_callback_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"sc_callback_t"}},{"label":"•SendMsg(uint8_t *pData, uint16_t DataLen)","kind":3,"detail":"STATUS","documentation":{"kind":"markdown","value":"From `\"rom/uart.h\"`  \n@brief Send an packet to download tool, with SLIP escaping.  \nPlease do not call this function in SDK.  \n@param uint8_t \\*pData : the pointer to input string.  \n@param uint16_t DataLen : the string length.  \n@return OK for successful.  \nFAIL for failed."},"sortText":"407f2f3bSendMsg","filterText":"SendMsg","insertText":"SendMsg(${1:uint8_t *pData}, ${2:uint16_t DataLen})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"SendMsg(${1:uint8_t *pData}, ${2:uint16_t DataLen})"}},{"label":"•sockaddr","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/sockets.h\"`"},"sortText":"4083254csockaddr","filterText":"sockaddr","insertText":"sockaddr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"sockaddr"}},{"label":"•ArduinoJson6173_91::safe_strcmp(const char *a, const char *b)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Polyfills/safe_strcmp.hpp\"`"},"sortText":"4083b5besafe_strcmp","filterText":"safe_strcmp","insertText":"ArduinoJson6173_91::safe_strcmp(${1:const char *a}, ${2:const char *b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"ArduinoJson6173_91::safe_strcmp(${1:const char *a}, ${2:const char *b})"}},{"label":"•ArduinoJson6173_91::safe_strncmp(const char *a, const char *b, size_t n)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Polyfills/safe_strcmp.hpp\"`"},"sortText":"4083b5besafe_strncmp","filterText":"safe_strncmp","insertText":"ArduinoJson6173_91::safe_strncmp(${1:const char *a}, ${2:const char *b}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"ArduinoJson6173_91::safe_strncmp(${1:const char *a}, ${2:const char *b}, ${3:size_t n})"}},{"label":"•std::set_terminate(terminate_handler)","kind":3,"detail":"terminate_handler","documentation":{"kind":"markdown","value":"From `\u003cexception\u003e`  \nTakes a new handler function as an argument, returns the old function."},"sortText":"4083b5beset_terminate","filterText":"set_terminate","insertText":"std::set_terminate(${1:terminate_handler})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"newText":"std::set_terminate(${1:terminate_handler})"}}]},"jsonrpc":"2.0"}
<<<
ent-Length: 258

{"jsonrpc":"2.0","id":83,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":19},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":6},"contentChanges":[{"range":{"start":{"line":16,"character":19},"end":{"line":16,"character":19}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":83}}Content-Length: 258

{"jsonrpc":"2.0","id":84,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":20},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":7},"contentChanges":[{"range":{"start":{"line":16,"character":20},"end":{"line":16,"character":20}},"rangeLength":0,"text":"r"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":84}}Content-Length: 258

{"jsonrpc":"2.0","id":85,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":21},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 277

{"jsonrpc":"2.0","id":86,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":21}},"context":{"diagnostics":[]}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":7}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":8},"contentChanges":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":21}},"rangeLength":0,"text":"v"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":86}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":85}}Content-Length: 258

{"jsonrpc":"2.0","id":87,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":22},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 277

{"jsonrpc":"2.0","id":88,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":9},"contentChanges":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":22}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":88}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":87}}Content-Length: 258

{"jsonrpc":"2.0","id":89,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":23},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":
>>>
Content-Length: 92

{"id":83,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 92

{"id":84,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 92

{"id":85,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":86,"result":[],"jsonrpc":"2.0"}Content-Length: 92

{"id":87,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":88,"result":[],"jsonrpc":"2.0"}Content-Length: 92

{"id":89,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":10},"contentChanges":[{"range":{"start":{"line":16,"character":23},"end":{"line":16,"character":23}},"rangeLength":0,"text":"r"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":89}}Content-Length: 258

{"jsonrpc":"2.0","id":90,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":24},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 277

{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":24},"end":{"line":16,"character":24}},"context":{"diagnostics":[]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":10}}}Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":11},"contentChanges":[{"range":{"start":{"line":16,"character":24},"end":{"line":16,"character":24}},"rangeLength":0,"text":","}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":91}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":90}}Content-Length: 281

{"jsonrpc":"2.0","id":92,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":25},"context":{"isRetrigger":true,"triggerCharacter":",","triggerKind":2}}}Content-Length: 277

{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":25},"end":{"line":16,"character":25}},"context":{"diagnostics":[]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":11}}}
>>>
Content-Length: 92

{"id":90,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":91,"result":[],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 92

{"id":92,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":93,"result":[],"jsonrpc":"2.0"}Content-Length: 1377

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":10}},"severity":1,"code":"ovl_no_viable_function_in_init","source":"clang","message":"No matching constructor for initialization of 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'State *' to 'const BcbAws' for 1st argument\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit move constructor) not viable: no known conversion from 'State *' to 'BcbAws' for 1st argument\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:1:\nnote: candidate constructor not viable: requires 3 arguments, but 1 was provided"}]},"jsonrpc":"2.0"}Content-Length: 781

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":16,"character":25},"end":{"line":16,"character":26}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"jsonrpc":"2.0","id":94,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":25},"end":{"line":16,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":25},"end":{"line":16,"character":26}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":94,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":12},"contentChanges":[{"range":{"start":{"line":16,"character":25},"end":{"line":16,"character":25}},"rangeLength":0,"text":"w"}]}}Content-Length: 236

{"jsonrpc":"2.0","id":95,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":26},"context":{"triggerKind":1}}}
>>>
Content-Length: 42182

{"id":95,"result":{"isIncomplete":true,"items":[{"label":" ws","kind":6,"detail":"AsyncWebSocket","sortText":"3db51ac6ws","filterText":"ws","insertText":"ws","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"ws"}},{"label":" wchar_t","kind":14,"sortText":"3f000000wchar_t","filterText":"wchar_t","insertText":"wchar_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wchar_t"}},{"label":"•WiFiClientSocketHandle","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiClient.h\"`"},"sortText":"3f17ae13WiFiClientSocketHandle","filterText":"WiFiClientSocketHandle","insertText":"WiFiClientSocketHandle","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiClientSocketHandle"}},{"label":"•WiFiClientRxBuffer","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiClient.h\"`"},"sortText":"3f651eb8WiFiClientRxBuffer","filterText":"WiFiClientRxBuffer","insertText":"WiFiClientRxBuffer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiClientRxBuffer"}},{"label":" WiFi","kind":6,"detail":"WiFiClass","documentation":{"kind":"markdown","value":"From `\"WiFi.h\"`"},"sortText":"3f9f39d8WiFi","filterText":"WiFi","insertText":"WiFi","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFi"}},{"label":"•WiFiServer","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiServer.h\"`"},"sortText":"3fea60e2WiFiServer","filterText":"WiFiServer","insertText":"WiFiServer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiServer"}},{"label":" WiFiUDP","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiUdp.h\"`"},"sortText":"3ff6562aWiFiUDP","filterText":"WiFiUDP","insertText":"WiFiUDP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiUDP"}},{"label":"•WiFiGenericClass","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"3ffa50b8WiFiGenericClass","filterText":"WiFiGenericClass","insertText":"WiFiGenericClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiGenericClass"}},{"label":"•WiFiSTAClass","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiSTA.h\"`"},"sortText":"40062e22WiFiSTAClass","filterText":"WiFiSTAClass","insertText":"WiFiSTAClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiSTAClass"}},{"label":"•WiFiClient","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiClient.h\"`"},"sortText":"400a5edbWiFiClient","filterText":"WiFiClient","insertText":"WiFiClient","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiClient"}},{"label":"•wifi_prov_mgr_get_wifi_state(wifi_prov_sta_state_t *state)","kind":3,"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Get state of Wi-Fi Station during provisioning  \n@param[out] state Pointer to wifi_prov_sta_state_t variable to be filled  \n@return  \n\\- ESP_OK : Successfully retrieved Wi-Fi state  \n\\- ESP_FAIL : Provisioning app not running"},"sortText":"400c559bwifi_prov_mgr_get_wifi_state","filterText":"wifi_prov_mgr_get_wifi_state","insertText":"wifi_prov_mgr_get_wifi_state(${1:wifi_prov_sta_state_t *state})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_prov_mgr_get_wifi_state(${1:wifi_prov_sta_state_t *state})"}},{"label":"•WiFiScanClass","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiScan.h\"`"},"sortText":"400e4e7fWiFiScanClass","filterText":"WiFiScanClass","insertText":"WiFiScanClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiScanClass"}},{"label":" WiFiClass","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFi.h\"`"},"sortText":"4012b71bWiFiClass","filterText":"WiFiClass","insertText":"WiFiClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiClass"}},{"label":" word","kind":8,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4012b71bword","filterText":"word","insertText":"word","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"word"}},{"label":" writeFile(fs::FS \u0026fs, const char *path, const char *message)","kind":3,"detail":"void","sortText":"4012b71bwriteFile","filterText":"writeFile","insertText":"writeFile(${1:fs::FS \u0026fs}, ${2:const char *path}, ${3:const char *message})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"writeFile(${1:fs::FS \u0026fs}, ${2:const char *path}, ${3:const char *message})"}},{"label":"•WL_CONNECTED","kind":20,"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"4027c47aWL_CONNECTED","filterText":"WL_CONNECTED","insertText":"WL_CONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WL_CONNECTED"}},{"label":"•wifi_prov_sta_state_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/wifi_config.h\"`  \n@brief WiFi STA status for conveying back to the provisioning master"},"sortText":"402a889awifi_prov_sta_state_t","filterText":"wifi_prov_sta_state_t","insertText":"wifi_prov_sta_state_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_prov_sta_state_t"}},{"label":"•WiFiAPClass","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiAP.h\"`"},"sortText":"4030d1fcWiFiAPClass","filterText":"WiFiAPClass","insertText":"WiFiAPClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiAPClass"}},{"label":"•WL_CONNECT_FAILED","kind":20,"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"4035bf4cWL_CONNECT_FAILED","filterText":"WL_CONNECT_FAILED","insertText":"WL_CONNECT_FAILED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WL_CONNECT_FAILED"}},{"label":"•WDTO_0MS","kind":20,"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_0MS"},"sortText":"403f858bWDTO_0MS","filterText":"WDTO_0MS","insertText":"WDTO_0MS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WDTO_0MS"}},{"label":"•WDTO_120MS","kind":20,"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_120MS"},"sortText":"403f858bWDTO_120MS","filterText":"WDTO_120MS","insertText":"WDTO_120MS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WDTO_120MS"}},{"label":"•WDTO_15MS","kind":20,"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_15MS"},"sortText":"403f858bWDTO_15MS","filterText":"WDTO_15MS","insertText":"WDTO_15MS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WDTO_15MS"}},{"label":"•WDTO_1S","kind":20,"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_1S"},"sortText":"403f858bWDTO_1S","filterText":"WDTO_1S","insertText":"WDTO_1S","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WDTO_1S"}},{"label":"•WDTO_250MS","kind":20,"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_250MS"},"sortText":"403f858bWDTO_250MS","filterText":"WDTO_250MS","insertText":"WDTO_250MS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WDTO_250MS"}},{"label":"•WDTO_2S","kind":20,"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_2S"},"sortText":"403f858bWDTO_2S","filterText":"WDTO_2S","insertText":"WDTO_2S","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WDTO_2S"}},{"label":"•WDTO_30MS","kind":20,"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_30MS"},"sortText":"403f858bWDTO_30MS","filterText":"WDTO_30MS","insertText":"WDTO_30MS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WDTO_30MS"}},{"label":"•WDTO_4S","kind":20,"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_4S"},"sortText":"403f858bWDTO_4S","filterText":"WDTO_4S","insertText":"WDTO_4S","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WDTO_4S"}},{"label":"•WDTO_500MS","kind":20,"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_500MS"},"sortText":"403f858bWDTO_500MS","filterText":"WDTO_500MS","insertText":"WDTO_500MS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WDTO_500MS"}},{"label":"•WDTO_60MS","kind":20,"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_60MS"},"sortText":"403f858bWDTO_60MS","filterText":"WDTO_60MS","insertText":"WDTO_60MS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WDTO_60MS"}},{"label":"•WDTO_8S","kind":20,"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_8S"},"sortText":"403f858bWDTO_8S","filterText":"WDTO_8S","insertText":"WDTO_8S","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WDTO_8S"}},{"label":"•WDTO_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nAVR macros for WDT managment"},"sortText":"403f858bWDTO_t","filterText":"WDTO_t","insertText":"WDTO_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WDTO_t"}},{"label":"•WIFI_DNS_DONE_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bWIFI_DNS_DONE_BIT","filterText":"WIFI_DNS_DONE_BIT","insertText":"WIFI_DNS_DONE_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_DNS_DONE_BIT"}},{"label":"•WIFI_DNS_IDLE_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bWIFI_DNS_IDLE_BIT","filterText":"WIFI_DNS_IDLE_BIT","insertText":"WIFI_DNS_IDLE_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_DNS_IDLE_BIT"}},{"label":"•WIFI_POWER_11dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n11dBm"},"sortText":"403f858bWIFI_POWER_11dBm","filterText":"WIFI_POWER_11dBm","insertText":"WIFI_POWER_11dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_POWER_11dBm"}},{"label":"•WIFI_POWER_13dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n13dBm"},"sortText":"403f858bWIFI_POWER_13dBm","filterText":"WIFI_POWER_13dBm","insertText":"WIFI_POWER_13dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_POWER_13dBm"}},{"label":"•WIFI_POWER_15dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n15dBm"},"sortText":"403f858bWIFI_POWER_15dBm","filterText":"WIFI_POWER_15dBm","insertText":"WIFI_POWER_15dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_POWER_15dBm"}},{"label":"•WIFI_POWER_17dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n17dBm"},"sortText":"403f858bWIFI_POWER_17dBm","filterText":"WIFI_POWER_17dBm","insertText":"WIFI_POWER_17dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_POWER_17dBm"}},{"label":"•WIFI_POWER_18_5dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n18.5dBm"},"sortText":"403f858bWIFI_POWER_18_5dBm","filterText":"WIFI_POWER_18_5dBm","insertText":"WIFI_POWER_18_5dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_POWER_18_5dBm"}},{"label":"•WIFI_POWER_19_5dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n19.5dBm"},"sortText":"403f858bWIFI_POWER_19_5dBm","filterText":"WIFI_POWER_19_5dBm","insertText":"WIFI_POWER_19_5dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_POWER_19_5dBm"}},{"label":"•WIFI_POWER_19dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n19dBm"},"sortText":"403f858bWIFI_POWER_19dBm","filterText":"WIFI_POWER_19dBm","insertText":"WIFI_POWER_19dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_POWER_19dBm"}},{"label":"•WIFI_POWER_2dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n2dBm"},"sortText":"403f858bWIFI_POWER_2dBm","filterText":"WIFI_POWER_2dBm","insertText":"WIFI_POWER_2dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_POWER_2dBm"}},{"label":"•WIFI_POWER_5dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n5dBm"},"sortText":"403f858bWIFI_POWER_5dBm","filterText":"WIFI_POWER_5dBm","insertText":"WIFI_POWER_5dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_POWER_5dBm"}},{"label":"•WIFI_POWER_7dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n7dBm"},"sortText":"403f858bWIFI_POWER_7dBm","filterText":"WIFI_POWER_7dBm","insertText":"WIFI_POWER_7dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_POWER_7dBm"}},{"label":"•WIFI_POWER_8_5dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n8.5dBm"},"sortText":"403f858bWIFI_POWER_8_5dBm","filterText":"WIFI_POWER_8_5dBm","insertText":"WIFI_POWER_8_5dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_POWER_8_5dBm"}},{"label":"•WIFI_POWER_MINUS_1dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n-1dBm"},"sortText":"403f858bWIFI_POWER_MINUS_1dBm","filterText":"WIFI_POWER_MINUS_1dBm","insertText":"WIFI_POWER_MINUS_1dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_POWER_MINUS_1dBm"}},{"label":"•WIFI_SCANNING_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bWIFI_SCANNING_BIT","filterText":"WIFI_SCANNING_BIT","insertText":"WIFI_SCANNING_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_SCANNING_BIT"}},{"label":"•WIFI_SCAN_DONE_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bWIFI_SCAN_DONE_BIT","filterText":"WIFI_SCAN_DONE_BIT","insertText":"WIFI_SCAN_DONE_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_SCAN_DONE_BIT"}},{"label":"•WL_DISCONNECTED","kind":20,"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"403f858bWL_DISCONNECTED","filterText":"WL_DISCONNECTED","insertText":"WL_DISCONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WL_DISCONNECTED"}},{"label":"•WL_NO_SSID_AVAIL","kind":20,"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"403f858bWL_NO_SSID_AVAIL","filterText":"WL_NO_SSID_AVAIL","insertText":"WL_NO_SSID_AVAIL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WL_NO_SSID_AVAIL"}},{"label":"•WL_SCAN_COMPLETED","kind":20,"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"403f858bWL_SCAN_COMPLETED","filterText":"WL_SCAN_COMPLETED","insertText":"WL_SCAN_COMPLETED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WL_SCAN_COMPLETED"}},{"label":"•WebRequestMethodComposite","kind":8,"documentation":{"kind":"markdown","value":"From `\"ESPAsyncWebServer.h\"`"},"sortText":"403f858bWebRequestMethodComposite","filterText":"WebRequestMethodComposite","insertText":"WebRequestMethodComposite","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WebRequestMethodComposite"}},{"label":"•WiFiEventCb","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bWiFiEventCb","filterText":"WiFiEventCb","insertText":"WiFiEventCb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiEventCb"}},{"label":"•WiFiEventFuncCb","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bWiFiEventFuncCb","filterText":"WiFiEventFuncCb","insertText":"WiFiEventFuncCb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiEventFuncCb"}},{"label":"•WiFiEventSysCb","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bWiFiEventSysCb","filterText":"WiFiEventSysCb","insertText":"WiFiEventSysCb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiEventSysCb"}},{"label":"•WiFiProvEventCb","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bWiFiProvEventCb","filterText":"WiFiProvEventCb","insertText":"WiFiProvEventCb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiProvEventCb"}},{"label":"•wcstoimax(const wchar_t *, wchar_t **, int)","kind":3,"detail":"intmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"403f858bwcstoimax","filterText":"wcstoimax","insertText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":"•wcstombs(char *, const wchar_t *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bwcstombs","filterText":"wcstombs","insertText":"wcstombs(${1:char *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wcstombs(${1:char *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":"•wcstoumax(const wchar_t *, wchar_t **, int)","kind":3,"detail":"uintmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"403f858bwcstoumax","filterText":"wcstoumax","insertText":"wcstoumax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wcstoumax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":"•wctomb(char *, wchar_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"sortText":"403f858bwctomb","filterText":"wctomb","insertText":"wctomb(${1:char *}, ${2:wchar_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wctomb(${1:char *}, ${2:wchar_t})"}},{"label":"•wifi_event_id_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bwifi_event_id_t","filterText":"wifi_event_id_t","insertText":"wifi_event_id_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_event_id_t"}},{"label":"•wifi_power_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bwifi_power_t","filterText":"wifi_power_t","insertText":"wifi_power_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_power_t"}},{"label":"•wifi_prov_event_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403f858bwifi_prov_event_t","filterText":"wifi_prov_event_t","insertText":"wifi_prov_event_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_prov_event_t"}},{"label":"•wl_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"403f858bwl_status_t","filterText":"wl_status_t","insertText":"wl_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wl_status_t"}},{"label":"•WiFiMulti","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiMulti.h\"`"},"sortText":"40500923WiFiMulti","filterText":"WiFiMulti","insertText":"WiFiMulti","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WiFiMulti"}},{"label":"•WifiAPlist_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiMulti.h\"`"},"sortText":"40500923WifiAPlist_t","filterText":"WifiAPlist_t","insertText":"WifiAPlist_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WifiAPlist_t"}},{"label":"•wcsftime(wchar_t *, size_t, const wchar_t *, const struct tm *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40500923wcsftime","filterText":"wcsftime","insertText":"wcsftime(${1:wchar_t *}, ${2:size_t}, ${3:const wchar_t *}, ${4:const struct tm *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wcsftime(${1:wchar_t *}, ${2:size_t}, ${3:const wchar_t *}, ${4:const struct tm *})"}},{"label":"•wcslcpy(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40500923wcslcpy","filterText":"wcslcpy","insertText":"wcslcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wcslcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":"•wcsnrtombs(char *, const wchar_t **, size_t, size_t, mbstate_t *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40500923wcsnrtombs","filterText":"wcsnrtombs","insertText":"wcsnrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:size_t}, ${5:mbstate_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wcsnrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:size_t}, ${5:mbstate_t *})"}},{"label":"•wcstod(const wchar_t *, wchar_t **)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40500923wcstod","filterText":"wcstod","insertText":"wcstod(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wcstod(${1:const wchar_t *}, ${2:wchar_t **})"}},{"label":"•wcstof(const wchar_t *, wchar_t **)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40500923wcstof","filterText":"wcstof","insertText":"wcstof(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wcstof(${1:const wchar_t *}, ${2:wchar_t **})"}},{"label":"•wcstol(const wchar_t *, wchar_t **, int)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40500923wcstol","filterText":"wcstol","insertText":"wcstol(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wcstol(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":"•wcwidth(const wchar_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40500923wcwidth","filterText":"wcwidth","insertText":"wcwidth(${1:const wchar_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wcwidth(${1:const wchar_t})"}},{"label":"•wmemchr(const wchar_t *, wchar_t, size_t)","kind":3,"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40500923wmemchr","filterText":"wmemchr","insertText":"wmemchr(${1:const wchar_t *}, ${2:wchar_t}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wmemchr(${1:const wchar_t *}, ${2:wchar_t}, ${3:size_t})"}},{"label":"•WIFI_MODE_NULL","kind":20,"detail":"wifi_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nnull mode"},"sortText":"4052cc13WIFI_MODE_NULL","filterText":"WIFI_MODE_NULL","insertText":"WIFI_MODE_NULL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_MODE_NULL"}},{"label":"•wifi_config_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Configuration data for ESP32 AP or STA.  \nThe usage of this union (for ap or sta configuration) is determined by the accompanying interface argument passed to esp_wifi_set_config() or esp_wifi_get_config()"},"sortText":"405d152awifi_config_t","filterText":"wifi_config_t","insertText":"wifi_config_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_config_t"}},{"label":"•WIFI_PROV_CRED_FAIL","kind":20,"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nEmitted when device fails to connect to the AP of which the credentials were received earlier on event `WIFI_PROV_CRED_RECV`.  \nThe event data in this case is a pointer to the disconnection reason code with type `wifi_prov_sta_fail_reason_t`"},"sortText":"405d8e68WIFI_PROV_CRED_FAIL","filterText":"WIFI_PROV_CRED_FAIL","insertText":"WIFI_PROV_CRED_FAIL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_PROV_CRED_FAIL"}},{"label":"•WIFI_PROV_CRED_RECV","kind":20,"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nEmitted when Wi-Fi AP credentials are received via `protocomm` endpoint `wifi_config`. The event data in this case is a pointer to the corresponding `wifi_sta_config_t` structure"},"sortText":"405d8e68WIFI_PROV_CRED_RECV","filterText":"WIFI_PROV_CRED_RECV","insertText":"WIFI_PROV_CRED_RECV","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_PROV_CRED_RECV"}},{"label":"•WIFI_PROV_CRED_SUCCESS","kind":20,"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nEmitted when device successfully connects to the AP of which the credentials were received earlier on event `WIFI_PROV_CRED_RECV`"},"sortText":"405d8e68WIFI_PROV_CRED_SUCCESS","filterText":"WIFI_PROV_CRED_SUCCESS","insertText":"WIFI_PROV_CRED_SUCCESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_PROV_CRED_SUCCESS"}},{"label":"•WIFI_PROV_DEINIT","kind":20,"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nSignals that manager has been de-initialized"},"sortText":"405d8e68WIFI_PROV_DEINIT","filterText":"WIFI_PROV_DEINIT","insertText":"WIFI_PROV_DEINIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_PROV_DEINIT"}},{"label":"•WIFI_PROV_END","kind":20,"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nSignals that provisioning service has stopped"},"sortText":"405d8e68WIFI_PROV_END","filterText":"WIFI_PROV_END","insertText":"WIFI_PROV_END","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_PROV_END"}},{"label":"•WIFI_PROV_INIT","kind":20,"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nEmitted when the manager is initialized"},"sortText":"405d8e68WIFI_PROV_INIT","filterText":"WIFI_PROV_INIT","insertText":"WIFI_PROV_INIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_PROV_INIT"}},{"label":"•WIFI_PROV_SECURITY_0","kind":20,"detail":"wifi_prov_security","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nNo security (plain-text communication)"},"sortText":"405d8e68WIFI_PROV_SECURITY_0","filterText":"WIFI_PROV_SECURITY_0","insertText":"WIFI_PROV_SECURITY_0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_PROV_SECURITY_0"}},{"label":"•WIFI_PROV_SECURITY_1","kind":20,"detail":"wifi_prov_security","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nThis secure communication mode consists of X25519 key exchange + proof of possession (pop) based authentication + AES-CTR encryption"},"sortText":"405d8e68WIFI_PROV_SECURITY_1","filterText":"WIFI_PROV_SECURITY_1","insertText":"WIFI_PROV_SECURITY_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_PROV_SECURITY_1"}},{"label":"•WIFI_PROV_START","kind":20,"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nIndicates that provisioning has started"},"sortText":"405d8e68WIFI_PROV_START","filterText":"WIFI_PROV_START","insertText":"WIFI_PROV_START","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WIFI_PROV_START"}},{"label":"•WS_CONNECTED","kind":20,"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_CONNECTED","filterText":"WS_CONNECTED","insertText":"WS_CONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WS_CONNECTED"}},{"label":"•WS_DISCONNECT","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_DISCONNECT","filterText":"WS_DISCONNECT","insertText":"WS_DISCONNECT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WS_DISCONNECT"}},{"label":"•WS_EVT_DATA","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_EVT_DATA","filterText":"WS_EVT_DATA","insertText":"WS_EVT_DATA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WS_EVT_DATA"}},{"label":"•WS_EVT_DISCONNECT","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_EVT_DISCONNECT","filterText":"WS_EVT_DISCONNECT","insertText":"WS_EVT_DISCONNECT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WS_EVT_DISCONNECT"}},{"label":"•WS_MSG_ERROR","kind":20,"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_MSG_ERROR","filterText":"WS_MSG_ERROR","insertText":"WS_MSG_ERROR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WS_MSG_ERROR"}},{"label":"•WS_MSG_SENDING","kind":20,"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_MSG_SENDING","filterText":"WS_MSG_SENDING","insertText":"WS_MSG_SENDING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WS_MSG_SENDING"}},{"label":"•WS_MSG_SENT","kind":20,"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_MSG_SENT","filterText":"WS_MSG_SENT","insertText":"WS_MSG_SENT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WS_MSG_SENT"}},{"label":"•WS_PING","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_PING","filterText":"WS_PING","insertText":"WS_PING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WS_PING"}},{"label":"•WS_PONG","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_PONG","filterText":"WS_PONG","insertText":"WS_PONG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"WS_PONG"}},{"label":"•wifi_prov_cb_event_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Events generated by manager  \nThese events are generated in order of declaration and, for the stretch of time between initialization and de-initialization of the manager, each event is signaled only once"},"sortText":"405d8e68wifi_prov_cb_event_t","filterText":"wifi_prov_cb_event_t","insertText":"wifi_prov_cb_event_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_prov_cb_event_t"}},{"label":"•wifi_prov_cb_func_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`"},"sortText":"405d8e68wifi_prov_cb_func_t","filterText":"wifi_prov_cb_func_t","insertText":"wifi_prov_cb_func_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_prov_cb_func_t"}},{"label":"•wifi_prov_event_handler_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Event handler that is used by the manager while provisioning service is active"},"sortText":"405d8e68wifi_prov_event_handler_t","filterText":"wifi_prov_event_handler_t","insertText":"wifi_prov_event_handler_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_prov_event_handler_t"}},{"label":"•wifi_prov_mgr_config_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Structure for specifying the manager configuration"},"sortText":"405d8e68wifi_prov_mgr_config_t","filterText":"wifi_prov_mgr_config_t","insertText":"wifi_prov_mgr_config_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_prov_mgr_config_t"}},{"label":"•wifi_prov_mgr_configure_sta(wifi_config_t *wifi_cfg)","kind":3,"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Runs Wi-Fi as Station with the supplied configuration  \nConfigures the Wi-Fi station mode to connect to the AP with SSID and password specified in config structure and sets Wi-Fi to run as station.  \nThis is automatically called by provisioning service upon receiving new credentials.  \nIf credentials are to be supplied to the manager via a different mode other than through protocomm, then this API needs to be called.  \nEvent WIFI_PROV_CRED_RECV is emitted after credentials have been applied and Wi-Fi station started  \n@param[in] wifi_cfg Pointer to Wi-Fi configuration structure  \n@return  \n\\- ESP_OK : Wi-Fi configured and started successfully  \n\\- ESP_FAIL : Failed to set configuration"},"sortText":"405d8e68wifi_prov_mgr_configure_sta","filterText":"wifi_prov_mgr_configure_sta","insertText":"wifi_prov_mgr_configure_sta(${1:wifi_config_t *wifi_cfg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_prov_mgr_configure_sta(${1:wifi_config_t *wifi_cfg})"}},{"label":"•wifi_prov_mgr_deinit()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Stop provisioning (if running) and release resource used by the manager  \nEvent WIFI_PROV_DEINIT is emitted right after de-initialization is finished  \nIf provisioning service is still active when this API is called,  \nit first stops the service, hence emitting WIFI_PROV_END, and then performs the de-initialization"},"sortText":"405d8e68wifi_prov_mgr_deinit","filterText":"wifi_prov_mgr_deinit","insertText":"wifi_prov_mgr_deinit()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_prov_mgr_deinit()"}},{"label":"•wifi_prov_mgr_disable_auto_stop(uint32_t cleanup_delay)","kind":3,"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Disable auto stopping of provisioning service upon completion  \nBy default, once provisioning is complete, the provisioning service is automatically stopped, and all endpoints (along with those registered by main application) are deactivated.  \nThis API is useful in the case when main application wishes to close provisioning service only after it receives some protocomm command from the client side app. For example, after connecting to Wi-Fi, the device may want to connect to the cloud, and only once that is successfully, the device is said to be fully configured. But, then it is upto the main application to explicitly call wifi_prov_mgr_stop_provisioning() later when the device is fully configured and the provisioning service is no longer required.  \n@note This must be called before executing wifi_prov_mgr_start_provisioning()  \n@param[in] cleanup_delay Sets the delay after which the actual cleanup of transport related resources is done after a call to wifi_prov_mgr_stop_provisioning() returns. Minimum allowed value is 100ms. If not specified, this will default to 1000ms.  \n@return  \n\\- ESP_OK : Success  \n\\- ESP_ERR_INVALID_STATE : Manager not initialized or provisioning service already started"},"sortText":"405d8e68wifi_prov_mgr_disable_auto_stop","filterText":"wifi_prov_mgr_disable_auto_stop","insertText":"wifi_prov_mgr_disable_auto_stop(${1:uint32_t cleanup_delay})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"newText":"wifi_prov_mgr_disable_auto_stop(${1:uint32_t cleanup_delay})"}}]},"jsonrpc":"2.0"}Content-Length: 793

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":16,"character":25},"end":{"line":16,"character":26}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'w'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":13},"contentChanges":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"rangeLength":0,"text":"s"}]}}Content-Length: 236

{"jsonrpc":"2.0","id":96,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":27},"context":{"triggerKind":3}}}
>>>
Content-Length: 24763

{"id":96,"result":{"isIncomplete":false,"items":[{"label":" ws","kind":6,"detail":"AsyncWebSocket","sortText":"3d351ac6ws","filterText":"ws","insertText":"ws","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"ws"}},{"label":" WiFiClientSocketHandle","kind":7,"sortText":"3f97ae13WiFiClientSocketHandle","filterText":"WiFiClientSocketHandle","insertText":"WiFiClientSocketHandle","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WiFiClientSocketHandle"}},{"label":"•std::ws(basic_istream\u003c_CharT, _Traits\u003e \u0026__is)","kind":3,"detail":"basic_istream\u003c_CharT, _Traits\u003e \u0026","documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \n@brief Quick and easy way to eat whitespace  \nThis manipulator extracts whitespace characters, stopping when the next character is non-whitespace, or when the input sequence is empty.  \nIf the sequence is empty, @c eofbit is set in the stream, but not  \n@c failbit.  \nThe current locale is used to distinguish whitespace characters.  \nExample:  \n@code MyClass mc;  \nstd::cin \u003e\u003e std::ws \u003e\u003e mc;  \n@endcode will skip leading whitespace before calling operator\u003e\u003e on cin and your object. Note that the same effect can be achieved by creating a std::basic_istream::sentry inside your definition of operator\u003e\u003e."},"sortText":"4003b5bews","filterText":"ws","insertText":"std::ws(${1:basic_istream\u003c_CharT, _Traits\u003e \u0026__is})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"std::ws(${1:basic_istream\u003c_CharT, _Traits\u003e \u0026__is})"}},{"label":"•wscanf(const wchar_t *, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40500923wscanf","filterText":"wscanf","insertText":"wscanf(${1:const wchar_t *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wscanf(${1:const wchar_t *, ...})"}},{"label":"•WIFI_SCANNING_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"406fa427WIFI_SCANNING_BIT","filterText":"WIFI_SCANNING_BIT","insertText":"WIFI_SCANNING_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WIFI_SCANNING_BIT"}},{"label":"•WIFI_SCAN_DONE_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"406fa427WIFI_SCAN_DONE_BIT","filterText":"WIFI_SCAN_DONE_BIT","insertText":"WIFI_SCAN_DONE_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WIFI_SCAN_DONE_BIT"}},{"label":"•WL_SCAN_COMPLETED","kind":20,"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"406fa427WL_SCAN_COMPLETED","filterText":"WL_SCAN_COMPLETED","insertText":"WL_SCAN_COMPLETED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WL_SCAN_COMPLETED"}},{"label":"•wl_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"406fa427wl_status_t","filterText":"wl_status_t","insertText":"wl_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wl_status_t"}},{"label":"•WS_BINARY","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_BINARY","filterText":"WS_BINARY","insertText":"WS_BINARY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_BINARY"}},{"label":"•WS_CONNECTED","kind":20,"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_CONNECTED","filterText":"WS_CONNECTED","insertText":"WS_CONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_CONNECTED"}},{"label":"•WS_CONTINUATION","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_CONTINUATION","filterText":"WS_CONTINUATION","insertText":"WS_CONTINUATION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_CONTINUATION"}},{"label":"•WS_DISCONNECT","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_DISCONNECT","filterText":"WS_DISCONNECT","insertText":"WS_DISCONNECT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_DISCONNECT"}},{"label":"•WS_DISCONNECTED","kind":20,"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_DISCONNECTED","filterText":"WS_DISCONNECTED","insertText":"WS_DISCONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_DISCONNECTED"}},{"label":"•WS_DISCONNECTING","kind":20,"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_DISCONNECTING","filterText":"WS_DISCONNECTING","insertText":"WS_DISCONNECTING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_DISCONNECTING"}},{"label":"•WS_EVT_CONNECT","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_EVT_CONNECT","filterText":"WS_EVT_CONNECT","insertText":"WS_EVT_CONNECT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_EVT_CONNECT"}},{"label":"•WS_EVT_DATA","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_EVT_DATA","filterText":"WS_EVT_DATA","insertText":"WS_EVT_DATA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_EVT_DATA"}},{"label":"•WS_EVT_DISCONNECT","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_EVT_DISCONNECT","filterText":"WS_EVT_DISCONNECT","insertText":"WS_EVT_DISCONNECT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_EVT_DISCONNECT"}},{"label":"•WS_EVT_ERROR","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_EVT_ERROR","filterText":"WS_EVT_ERROR","insertText":"WS_EVT_ERROR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_EVT_ERROR"}},{"label":"•WS_EVT_PONG","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_EVT_PONG","filterText":"WS_EVT_PONG","insertText":"WS_EVT_PONG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_EVT_PONG"}},{"label":"•WS_MSG_ERROR","kind":20,"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_MSG_ERROR","filterText":"WS_MSG_ERROR","insertText":"WS_MSG_ERROR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_MSG_ERROR"}},{"label":"•WS_MSG_SENDING","kind":20,"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_MSG_SENDING","filterText":"WS_MSG_SENDING","insertText":"WS_MSG_SENDING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_MSG_SENDING"}},{"label":"•WS_MSG_SENT","kind":20,"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_MSG_SENT","filterText":"WS_MSG_SENT","insertText":"WS_MSG_SENT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_MSG_SENT"}},{"label":"•WS_PING","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_PING","filterText":"WS_PING","insertText":"WS_PING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_PING"}},{"label":"•WS_PONG","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_PONG","filterText":"WS_PONG","insertText":"WS_PONG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_PONG"}},{"label":"•WS_TEXT","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_TEXT","filterText":"WS_TEXT","insertText":"WS_TEXT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_TEXT"}},{"label":"•std::wstreambuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nBase class for @c wchar_t buffers."},"sortText":"4083b5bewstreambuf","filterText":"wstreambuf","insertText":"std::wstreambuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"std::wstreambuf"}},{"label":"•std::wstringbuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c wchar_t memory buffers."},"sortText":"4083b5bewstringbuf","filterText":"wstringbuf","insertText":"std::wstringbuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"std::wstringbuf"}},{"label":"•std::wstringstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c wchar_t mixed input and output memory streams."},"sortText":"4083b5bewstringstream","filterText":"wstringstream","insertText":"std::wstringstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"std::wstringstream"}},{"label":"•std::wstreampos","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nFile position for wchar_t streams."},"sortText":"4092d0aawstreampos","filterText":"wstreampos","insertText":"std::wstreampos","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"std::wstreampos"}},{"label":"•std::wstring","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \nA string of @c wchar_t"},"sortText":"4092d0aawstring","filterText":"wstring","insertText":"std::wstring","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"std::wstring"}},{"label":" AsyncWebServer","kind":7,"sortText":"4097ae13AsyncWebServer","filterText":"AsyncWebServer","insertText":"AsyncWebServer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebServer"}},{"label":" AsyncWebServerRequest","kind":7,"sortText":"4097ae13AsyncWebServerRequest","filterText":"AsyncWebServerRequest","insertText":"AsyncWebServerRequest","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebServerRequest"}},{"label":" AsyncWebSocket","kind":7,"sortText":"4097ae13AsyncWebSocket","filterText":"AsyncWebSocket","insertText":"AsyncWebSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebSocket"}},{"label":" AsyncWebSocketClient","kind":7,"sortText":"4097ae13AsyncWebSocketClient","filterText":"AsyncWebSocketClient","insertText":"AsyncWebSocketClient","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebSocketClient"}},{"label":" AsyncWebSocketControl","kind":7,"sortText":"4097ae13AsyncWebSocketControl","filterText":"AsyncWebSocketControl","insertText":"AsyncWebSocketControl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebSocketControl"}},{"label":" AsyncWebSocketMessage","kind":7,"sortText":"4097ae13AsyncWebSocketMessage","filterText":"AsyncWebSocketMessage","insertText":"AsyncWebSocketMessage","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebSocketMessage"}},{"label":" AsyncWebSocketMessageBuffer","kind":7,"sortText":"4097ae13AsyncWebSocketMessageBuffer","filterText":"AsyncWebSocketMessageBuffer","insertText":"AsyncWebSocketMessageBuffer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebSocketMessageBuffer"}},{"label":"•std::wscanf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"409aa539wscanf","filterText":"wscanf","insertText":"std::wscanf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"std::wscanf"}},{"label":"•WIFI_SCAN_TYPE_ACTIVE","kind":20,"detail":"wifi_scan_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nactive scan"},"sortText":"40aa889bWIFI_SCAN_TYPE_ACTIVE","filterText":"WIFI_SCAN_TYPE_ACTIVE","insertText":"WIFI_SCAN_TYPE_ACTIVE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WIFI_SCAN_TYPE_ACTIVE"}},{"label":"•WIFI_SCAN_TYPE_PASSIVE","kind":20,"detail":"wifi_scan_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \npassive scan"},"sortText":"40aa889bWIFI_SCAN_TYPE_PASSIVE","filterText":"WIFI_SCAN_TYPE_PASSIVE","insertText":"WIFI_SCAN_TYPE_PASSIVE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WIFI_SCAN_TYPE_PASSIVE"}},{"label":"•WIFI_SECOND_CHAN_ABOVE","kind":20,"detail":"wifi_second_chan_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe channel width is HT40 and the secondary channel is above the primary channel"},"sortText":"40aa889bWIFI_SECOND_CHAN_ABOVE","filterText":"WIFI_SECOND_CHAN_ABOVE","insertText":"WIFI_SECOND_CHAN_ABOVE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WIFI_SECOND_CHAN_ABOVE"}},{"label":"•WIFI_SECOND_CHAN_BELOW","kind":20,"detail":"wifi_second_chan_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe channel width is HT40 and the secondary channel is below the primary channel"},"sortText":"40aa889bWIFI_SECOND_CHAN_BELOW","filterText":"WIFI_SECOND_CHAN_BELOW","insertText":"WIFI_SECOND_CHAN_BELOW","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WIFI_SECOND_CHAN_BELOW"}},{"label":"•WIFI_SECOND_CHAN_NONE","kind":20,"detail":"wifi_second_chan_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe channel width is HT20"},"sortText":"40aa889bWIFI_SECOND_CHAN_NONE","filterText":"WIFI_SECOND_CHAN_NONE","insertText":"WIFI_SECOND_CHAN_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WIFI_SECOND_CHAN_NONE"}},{"label":"•WIFI_STORAGE_FLASH","kind":20,"detail":"wifi_storage_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nall configuration will strore in both memory and flash"},"sortText":"40aa889bWIFI_STORAGE_FLASH","filterText":"WIFI_STORAGE_FLASH","insertText":"WIFI_STORAGE_FLASH","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WIFI_STORAGE_FLASH"}},{"label":"•WIFI_STORAGE_RAM","kind":20,"detail":"wifi_storage_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nall configuration will only store in the memory"},"sortText":"40aa889bWIFI_STORAGE_RAM","filterText":"WIFI_STORAGE_RAM","insertText":"WIFI_STORAGE_RAM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WIFI_STORAGE_RAM"}},{"label":"•wifi_scan_config_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Parameters for an SSID scan."},"sortText":"40aa889bwifi_scan_config_t","filterText":"wifi_scan_config_t","insertText":"wifi_scan_config_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wifi_scan_config_t"}},{"label":"•wifi_scan_method_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"40aa889bwifi_scan_method_t","filterText":"wifi_scan_method_t","insertText":"wifi_scan_method_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wifi_scan_method_t"}},{"label":"•wifi_scan_threshold_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"40aa889bwifi_scan_threshold_t","filterText":"wifi_scan_threshold_t","insertText":"wifi_scan_threshold_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wifi_scan_threshold_t"}},{"label":"•wifi_scan_time_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Aggregate of active \u0026 passive scan time per channel"},"sortText":"40aa889bwifi_scan_time_t","filterText":"wifi_scan_time_t","insertText":"wifi_scan_time_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wifi_scan_time_t"}},{"label":"•wifi_scan_type_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"40aa889bwifi_scan_type_t","filterText":"wifi_scan_type_t","insertText":"wifi_scan_type_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wifi_scan_type_t"}},{"label":"•wifi_second_chan_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"40aa889bwifi_second_chan_t","filterText":"wifi_second_chan_t","insertText":"wifi_second_chan_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wifi_second_chan_t"}},{"label":"•wifi_sort_method_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"40aa889bwifi_sort_method_t","filterText":"wifi_sort_method_t","insertText":"wifi_sort_method_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wifi_sort_method_t"}},{"label":"•wifi_sta_config_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief STA configuration settings for the ESP32"},"sortText":"40aa889bwifi_sta_config_t","filterText":"wifi_sta_config_t","insertText":"wifi_sta_config_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wifi_sta_config_t"}},{"label":"•wifi_sta_info_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Description of STA associated with AP"},"sortText":"40aa889bwifi_sta_info_t","filterText":"wifi_sta_info_t","insertText":"wifi_sta_info_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wifi_sta_info_t"}},{"label":"•wifi_sta_list_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief List of stations associated with the ESP32 Soft-AP"},"sortText":"40aa889bwifi_sta_list_t","filterText":"wifi_sta_list_t","insertText":"wifi_sta_list_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wifi_sta_list_t"}},{"label":"•wifi_storage_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"40aa889bwifi_storage_t","filterText":"wifi_storage_t","insertText":"wifi_storage_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"wifi_storage_t"}},{"label":" AsyncWebServer(…)","kind":4,"detail":"[2 overloads]","sortText":"40acccccAsyncWebServer","filterText":"AsyncWebServer","insertText":"AsyncWebServer($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebServer($0)"}},{"label":" AsyncWebServerRequest(…)","kind":4,"detail":"[2 overloads]","sortText":"40acccccAsyncWebServerRequest","filterText":"AsyncWebServerRequest","insertText":"AsyncWebServerRequest($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebServerRequest($0)"}},{"label":" AsyncWebSocket(…)","kind":4,"detail":"[2 overloads]","sortText":"40acccccAsyncWebSocket","filterText":"AsyncWebSocket","insertText":"AsyncWebSocket($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebSocket($0)"}},{"label":" AsyncWebSocketClient(…)","kind":4,"detail":"[2 overloads]","sortText":"40acccccAsyncWebSocketClient","filterText":"AsyncWebSocketClient","insertText":"AsyncWebSocketClient($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebSocketClient($0)"}},{"label":" AsyncWebSocketMessage(…)","kind":4,"detail":"[2 overloads]","sortText":"40acccccAsyncWebSocketMessage","filterText":"AsyncWebSocketMessage","insertText":"AsyncWebSocketMessage($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebSocketMessage($0)"}},{"label":" AsyncWebSocketMessageBuffer(…)","kind":4,"detail":"[5 overloads]","sortText":"40acccccAsyncWebSocketMessageBuffer","filterText":"AsyncWebSocketMessageBuffer","insertText":"AsyncWebSocketMessageBuffer($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"AsyncWebSocketMessageBuffer($0)"}},{"label":"•WAIT_SYNC_FRM","kind":20,"detail":"RcvMsgState","documentation":{"kind":"markdown","value":"From `\"rom/uart.h\"`"},"sortText":"40bec6d9WAIT_SYNC_FRM","filterText":"WAIT_SYNC_FRM","insertText":"WAIT_SYNC_FRM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WAIT_SYNC_FRM"}},{"label":"•WS_MAX_QUEUED_MESSAGES","kind":1,"documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"40fec88dWS_MAX_QUEUED_MESSAGES","filterText":"WS_MAX_QUEUED_MESSAGES","insertText":"WS_MAX_QUEUED_MESSAGES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WS_MAX_QUEUED_MESSAGES"}},{"label":"•WSR(reg, newval)","kind":1,"documentation":{"kind":"markdown","value":"From `\"soc/cpu.h\"`"},"sortText":"410f2d7bWSR","filterText":"WSR","insertText":"WSR(${1:reg}, ${2:newval})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}},"newText":"WSR(${1:reg}, ${2:newval})"}}]},"jsonrpc":"2.0"}Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":27},"end":{"line":16,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":97,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":13}}}Content-Length: 203

{"jsonrpc":"2.0","id":98,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":18,"character":22}}}
>>>
Content-Length: 39

{"id":98,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":99,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":29},"end":{"line":16,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":99,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":100,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":7,"character":1}}}
>>>
Content-Length: 40

{"id":100,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":101,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":8,"character":8}}}
>>>
Content-Length: 40

{"id":101,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":102,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":17}}}
>>>
Content-Length: 290

{"id":102,"result":{"contents":{"kind":"markdown","value":"### constructor `BcbAws`  \n\n---\n```cpp\n// In BcbAws\npublic: BcbAws(State *istate, AsyncWebServer server, AsyncWebSocket ws)\n```"},"range":{"start":{"line":17,"character":12},"end":{"line":17,"character":17}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":103,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":14,"character":18}}}
>>>
Content-Length: 40

{"id":103,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":104,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":19}}}
>>>
Content-Length: 266

{"id":104,"result":{"contents":{"kind":"markdown","value":"### variable `server`  \n\n---\nType: `class AsyncWebServer`  \n\n---\n```cpp\nAsyncWebServer server(80)\n```"},"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":24}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":105,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":26}}}
>>>
Content-Length: 263

{"id":105,"result":{"contents":{"kind":"markdown","value":"### variable `ws`  \n\n---\nType: `class AsyncWebSocket`  \n\n---\n```cpp\nAsyncWebSocket ws(\"/ws\")\n```"},"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":106,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":6}}}
>>>
Content-Length: 256

{"id":106,"result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include \u003cHTTPClient.h\u003e  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":107,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":5}}}
>>>
Content-Length: 256

{"id":107,"result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include \u003cHTTPClient.h\u003e  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":108,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":8}}}
>>>
Content-Length: 264

{"id":108,"result":{"contents":{"kind":"markdown","value":"### variable `aws`  \n\n---\nType: `class BcbAws`  \n\n---\n```cpp\nBcbAws aws(\u0026state, server, ws)\n```"},"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":109,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":13,"character":35}}}Content-Length: 276

{"jsonrpc":"2.0","id":110,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":35},"end":{"line":13,"character":35}},"context":{"diagnostics":[]}}}Content-Length: 202

{"jsonrpc":"2.0","id":111,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":13,"character":35}}}
>>>
Content-Length: 126

{"id":109,"result":[{"range":{"start":{"line":13,"character":21},"end":{"line":13,"character":35}},"kind":1}],"jsonrpc":"2.0"}Content-Length: 38

{"id":110,"result":[],"jsonrpc":"2.0"}Content-Length: 230

{"id":111,"result":{"contents":{"kind":"markdown","value":"### class `AsyncWebServer`  \n\n---\n```cpp\nclass AsyncWebServer {}\n```"},"range":{"start":{"line":13,"character":21},"end":{"line":13,"character":35}}},"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":111}}Content-Length: 202

{"jsonrpc":"2.0","id":112,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":13,"character":36}}}
>>>
Content-Length: 281

{"id":112,"result":{"contents":{"kind":"markdown","value":"### param `server`  \n\n---\nType: `class AsyncWebServer`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer server\n```"},"range":{"start":{"line":13,"character":36},"end":{"line":13,"character":42}}},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":9},"contentChanges":[{"range":{"start":{"line":13,"character":35},"end":{"line":13,"character":35}},"rangeLength":0,"text":"*"}]}}Content-Length: 276

{"jsonrpc":"2.0","id":113,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":36},"end":{"line":13,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":113,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":9}}}Content-Length: 202

{"jsonrpc":"2.0","id":114,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":13,"character":45}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":114}}Content-Length: 202

{"jsonrpc":"2.0","id":115,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":13,"character":58}}}Content-Length: 214

{"jsonrpc":"2.0","id":116,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":13,"character":59}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":115}}Content-Length: 276

{"jsonrpc":"2.0","id":117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":59},"end":{"line":13,"character":59}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":113}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":10},"contentChanges":[{"range":{"start":{"line":13,"character":59},"end":{"line":13,"character":59}},"rangeLength":0,"text":"*"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":116}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":117}}Content-Length: 276

{"jsonrpc":"2.0","id":118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":60},"end":{"line":13,"character":60}},"context":{"diagnostics":[]}}}Content-Length: 170

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":10}}}
>>>
Content-Length: 337

{"id":114,"result":{"contents":{"kind":"markdown","value":"### class `AsyncWebSocket`  \n\n---\nWebServer Handler implementation that plays the role of a socket server  \n\n---\n```cpp\nclass AsyncWebSocket : public AsyncWebHandler {}\n```"},"range":{"start":{"line":13,"character":45},"end":{"line":13,"character":59}}},"jsonrpc":"2.0"}Content-Length: 337

{"id":115,"result":{"contents":{"kind":"markdown","value":"### class `AsyncWebSocket`  \n\n---\nWebServer Handler implementation that plays the role of a socket server  \n\n---\n```cpp\nclass AsyncWebSocket : public AsyncWebHandler {}\n```"},"range":{"start":{"line":13,"character":45},"end":{"line":13,"character":59}}},"jsonrpc":"2.0"}Content-Length: 215

{"id":116,"result":[{"range":{"start":{"line":13,"character":45},"end":{"line":13,"character":59}},"kind":1},{"range":{"start":{"line":19,"character":13},"end":{"line":19,"character":27}},"kind":1}],"jsonrpc":"2.0"}Content-Length: 38

{"id":117,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":118,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":119,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":43}}}
>>>
Content-Length: 1032

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":15}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 1030

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 228

{"id":119,"result":{"contents":{"kind":"markdown","value":"### class `AsyncWebServer`  \n\n---\n```cpp\nclass AsyncWebServer {}\n```"},"range":{"start":{"line":2,"character":29},"end":{"line":2,"character":43}}},"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":119}}Content-Length: 203

{"jsonrpc":"2.0","id":120,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":42}}}Content-Length: 215

{"jsonrpc":"2.0","id":121,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":43}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":120}}Content-Length: 693

{"jsonrpc":"2.0","id":122,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 695

{"jsonrpc":"2.0","id":123,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}
>>>
Content-Length: 228

{"id":120,"result":{"contents":{"kind":"markdown","value":"### class `AsyncWebServer`  \n\n---\n```cpp\nclass AsyncWebServer {}\n```"},"range":{"start":{"line":2,"character":29},"end":{"line":2,"character":43}}},"jsonrpc":"2.0"}Content-Length: 124

{"id":121,"result":[{"range":{"start":{"line":2,"character":29},"end":{"line":2,"character":43}},"kind":1}],"jsonrpc":"2.0"}Content-Length: 38

{"id":122,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":123,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":124,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":43},"end":{"line":2,"character":43}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":124,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":4},"contentChanges":[{"range":{"start":{"line":2,"character":43},"end":{"line":2,"character":43}},"rangeLength":0,"text":"*"}]}}Content-Length: 276

{"jsonrpc":"2.0","id":125,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":44},"end":{"line":2,"character":44}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":125,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":4}}}Content-Length: 203

{"jsonrpc":"2.0","id":126,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":67}}}
>>>
Content-Length: 335

{"id":126,"result":{"contents":{"kind":"markdown","value":"### class `AsyncWebSocket`  \n\n---\nWebServer Handler implementation that plays the role of a socket server  \n\n---\n```cpp\nclass AsyncWebSocket : public AsyncWebHandler {}\n```"},"range":{"start":{"line":2,"character":53},"end":{"line":2,"character":67}}},"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":127,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":67}}}
>>>
Content-Length: 213

{"id":127,"result":[{"range":{"start":{"line":2,"character":53},"end":{"line":2,"character":67}},"kind":1},{"range":{"start":{"line":19,"character":21},"end":{"line":19,"character":35}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":5},"contentChanges":[{"range":{"start":{"line":2,"character":67},"end":{"line":2,"character":67}},"rangeLength":0,"text":"*"}]}}
>>>
Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":128,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":68},"end":{"line":2,"character":68}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":128,"result":[],"jsonrpc":"2.0"}Content-Length: 3381

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":55,"character":2},"end":{"line":55,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":43},"end":{"line":56,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":56,"character":48},"end":{"line":56,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}Content-Length: 3381

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":55,"character":2},"end":{"line":55,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":43},"end":{"line":56,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":56,"character":48},"end":{"line":56,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}Content-Length: 2966

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":55,"character":2},"end":{"line":55,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":43},"end":{"line":56,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":56,"character":48},"end":{"line":56,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":129,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":60},"end":{"line":13,"character":60}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":129,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":5}}}Content-Length: 276

{"jsonrpc":"2.0","id":130,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":68},"end":{"line":2,"character":68}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":130,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":131,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":24,"character":21}}}
>>>
Content-Length: 40

{"id":131,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":132,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":23,"character":20}}}
>>>
Content-Length: 40

{"id":132,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":133,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":23,"character":7}}}
>>>
Content-Length: 40

{"id":133,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":134,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":24,"character":3}}}
>>>
Content-Length: 40

{"id":134,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":135,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":24,"character":2}}}
>>>
Content-Length: 40

{"id":135,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":136,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":136,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":11},"contentChanges":[{"range":{"start":{"line":24,"character":1},"end":{"line":24,"character":2}},"rangeLength":1,"text":""}]}}Content-Length: 274

{"jsonrpc":"2.0","id":137,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":24,"character":1},"end":{"line":24,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":137,"result":[],"jsonrpc":"2.0"}Content-Length: 1244

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"severity":1,"code":"expected_member_name_or_semi","source":"clang","message":"Expected member name or ';' after declaration specifiers"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":12},"contentChanges":[{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 170

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":12}}}Content-Length: 201

{"jsonrpc":"2.0","id":138,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":23,"character":1}}}
>>>
Content-Length: 40

{"id":138,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":139,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":139,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":13},"contentChanges":[{"range":{"start":{"line":23,"character":1},"end":{"line":23,"character":2}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 1244

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":1}},"severity":1,"code":"expected_member_name_or_semi","source":"clang","message":"Expected member name or ';' after declaration specifiers"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":14},"contentChanges":[{"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":1}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":140,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":24,"character":14}}}
>>>
Content-Length: 336

{"id":140,"result":{"contents":{"kind":"markdown","value":"### class `AsyncWebSocket`  \n\n---\nWebServer Handler implementation that plays the role of a socket server  \n\n---\n```cpp\nclass AsyncWebSocket : public AsyncWebHandler {}\n```"},"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 170

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":14}}}Content-Length: 202

{"jsonrpc":"2.0","id":141,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":23,"character":16}}}
>>>
Content-Length: 229

{"id":141,"result":{"contents":{"kind":"markdown","value":"### class `AsyncWebServer`  \n\n---\n```cpp\nclass AsyncWebServer {}\n```"},"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":142,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":23,"character":16}}}
>>>
Content-Length: 214

{"id":142,"result":[{"range":{"start":{"line":13,"character":21},"end":{"line":13,"character":35}},"kind":1},{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":16}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":143,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":23,"character":16},"end":{"line":23,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":143,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":15},"contentChanges":[{"range":{"start":{"line":23,"character":16},"end":{"line":23,"character":16}},"rangeLength":0,"text":"*"}]}}
>>>
Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":144,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":23,"character":17},"end":{"line":23,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":144,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 170

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":15}}}Content-Length: 202

{"jsonrpc":"2.0","id":145,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":24,"character":15}}}
>>>
Content-Length: 336

{"id":145,"result":{"contents":{"kind":"markdown","value":"### class `AsyncWebSocket`  \n\n---\nWebServer Handler implementation that plays the role of a socket server  \n\n---\n```cpp\nclass AsyncWebSocket : public AsyncWebHandler {}\n```"},"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":146,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":24,"character":16}}}
>>>
Content-Length: 303

{"id":146,"result":[{"range":{"start":{"line":13,"character":45},"end":{"line":13,"character":59}},"kind":1},{"range":{"start":{"line":19,"character":13},"end":{"line":19,"character":27}},"kind":1},{"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":16}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":147,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":24,"character":16},"end":{"line":24,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":147,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":16},"contentChanges":[{"range":{"start":{"line":24,"character":16},"end":{"line":24,"character":16}},"rangeLength":0,"text":"*"}]}}
>>>
Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":148,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":24,"character":17},"end":{"line":24,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":148,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 170

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":16}}}Content-Length: 276

{"jsonrpc":"2.0","id":149,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":149,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":6},"contentChanges":[{"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":15}},"rangeLength":0,"text":"\n  "}]}}
>>>
Content-Length: 3381

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":6}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":7},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"rangeLength":0,"text":"w"}]}}Content-Length: 235

{"jsonrpc":"2.0","id":150,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 3560

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'w'"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}Content-Length: 40589

{"id":150,"result":{"isIncomplete":true,"items":[{"label":" ws","kind":6,"detail":"AsyncWebSocket *","sortText":"3e2cccccws","filterText":"ws","insertText":"ws","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"ws"}},{"label":" wchar_t","kind":14,"sortText":"3f000000wchar_t","filterText":"wchar_t","insertText":"wchar_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wchar_t"}},{"label":" while (condition) {statements}","kind":15,"sortText":"3f000000while","filterText":"while","insertText":"while (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"while (${1:condition}) {\n${0:statements}\n}"}},{"label":"•WebResponseState","kind":8,"documentation":{"kind":"markdown","value":"From `\"ESPAsyncWebServer.h\"`  \nRESPONSE :: One instance is created for each Request (attached by the Handler)"},"sortText":"3fefa429WebResponseState","filterText":"WebResponseState","insertText":"WebResponseState","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WebResponseState"}},{"label":"•WiFiServer","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiServer.h\"`"},"sortText":"4022c05bWiFiServer","filterText":"WiFiServer","insertText":"WiFiServer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiServer"}},{"label":"•WiFiClientSocketHandle","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiClient.h\"`"},"sortText":"402a889aWiFiClientSocketHandle","filterText":"WiFiClientSocketHandle","insertText":"WiFiClientSocketHandle","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiClientSocketHandle"}},{"label":" writeFile(fs::FS \u0026fs, const char *path, const char *message)","kind":3,"detail":"void","sortText":"402b59f1writeFile","filterText":"writeFile","insertText":"writeFile(${1:fs::FS \u0026fs}, ${2:const char *path}, ${3:const char *message})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"writeFile(${1:fs::FS \u0026fs}, ${2:const char *path}, ${3:const char *message})"}},{"label":"•WiFi","kind":6,"detail":"WiFiClass","documentation":{"kind":"markdown","value":"From `\"WiFi.h\"`"},"sortText":"4037c744WiFi","filterText":"WiFi","insertText":"WiFi","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFi"}},{"label":"•WiFiGenericClass","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"403a514cWiFiGenericClass","filterText":"WiFiGenericClass","insertText":"WiFiGenericClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiGenericClass"}},{"label":"•WebRequestMethod","kind":8,"documentation":{"kind":"markdown","value":"From `\"ESPAsyncWebServer.h\"`"},"sortText":"403f858bWebRequestMethod","filterText":"WebRequestMethod","insertText":"WebRequestMethod","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WebRequestMethod"}},{"label":"•WebRequestMethodComposite","kind":8,"documentation":{"kind":"markdown","value":"From `\"ESPAsyncWebServer.h\"`"},"sortText":"403f858bWebRequestMethodComposite","filterText":"WebRequestMethodComposite","insertText":"WebRequestMethodComposite","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WebRequestMethodComposite"}},{"label":"•WiFiSTAClass","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiSTA.h\"`"},"sortText":"40474b05WiFiSTAClass","filterText":"WiFiSTAClass","insertText":"WiFiSTAClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiSTAClass"}},{"label":"•WiFiClient","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiClient.h\"`"},"sortText":"404a6426WiFiClient","filterText":"WiFiClient","insertText":"WiFiClient","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiClient"}},{"label":"•wifi_prov_sta_state_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/wifi_config.h\"`  \n@brief WiFi STA status for conveying back to the provisioning master"},"sortText":"404c589dwifi_prov_sta_state_t","filterText":"wifi_prov_sta_state_t","insertText":"wifi_prov_sta_state_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wifi_prov_sta_state_t"}},{"label":"•WiFiScanClass","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiScan.h\"`"},"sortText":"404d4d28WiFiScanClass","filterText":"WiFiScanClass","insertText":"WiFiScanClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiScanClass"}},{"label":"•WiFiUDP","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiUdp.h\"`"},"sortText":"405adf97WiFiUDP","filterText":"WiFiUDP","insertText":"WiFiUDP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiUDP"}},{"label":"•WDTO_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nAVR macros for WDT managment"},"sortText":"405d8e68WDTO_t","filterText":"WDTO_t","insertText":"WDTO_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WDTO_t"}},{"label":"•WS_BINARY","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_BINARY","filterText":"WS_BINARY","insertText":"WS_BINARY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_BINARY"}},{"label":"•WS_CONNECTED","kind":20,"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_CONNECTED","filterText":"WS_CONNECTED","insertText":"WS_CONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_CONNECTED"}},{"label":"•WS_CONTINUATION","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_CONTINUATION","filterText":"WS_CONTINUATION","insertText":"WS_CONTINUATION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_CONTINUATION"}},{"label":"•WS_DISCONNECT","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_DISCONNECT","filterText":"WS_DISCONNECT","insertText":"WS_DISCONNECT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_DISCONNECT"}},{"label":"•WS_DISCONNECTED","kind":20,"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_DISCONNECTED","filterText":"WS_DISCONNECTED","insertText":"WS_DISCONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_DISCONNECTED"}},{"label":"•WS_DISCONNECTING","kind":20,"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_DISCONNECTING","filterText":"WS_DISCONNECTING","insertText":"WS_DISCONNECTING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_DISCONNECTING"}},{"label":"•WS_EVT_CONNECT","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_EVT_CONNECT","filterText":"WS_EVT_CONNECT","insertText":"WS_EVT_CONNECT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_EVT_CONNECT"}},{"label":"•WS_EVT_DATA","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_EVT_DATA","filterText":"WS_EVT_DATA","insertText":"WS_EVT_DATA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_EVT_DATA"}},{"label":"•WS_EVT_DISCONNECT","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_EVT_DISCONNECT","filterText":"WS_EVT_DISCONNECT","insertText":"WS_EVT_DISCONNECT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_EVT_DISCONNECT"}},{"label":"•WS_EVT_ERROR","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_EVT_ERROR","filterText":"WS_EVT_ERROR","insertText":"WS_EVT_ERROR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_EVT_ERROR"}},{"label":"•WS_EVT_PONG","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_EVT_PONG","filterText":"WS_EVT_PONG","insertText":"WS_EVT_PONG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_EVT_PONG"}},{"label":"•WS_MSG_ERROR","kind":20,"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_MSG_ERROR","filterText":"WS_MSG_ERROR","insertText":"WS_MSG_ERROR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_MSG_ERROR"}},{"label":"•WS_MSG_SENDING","kind":20,"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_MSG_SENDING","filterText":"WS_MSG_SENDING","insertText":"WS_MSG_SENDING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_MSG_SENDING"}},{"label":"•WS_MSG_SENT","kind":20,"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_MSG_SENT","filterText":"WS_MSG_SENT","insertText":"WS_MSG_SENT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_MSG_SENT"}},{"label":"•WS_PING","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_PING","filterText":"WS_PING","insertText":"WS_PING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_PING"}},{"label":"•WS_PONG","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_PONG","filterText":"WS_PONG","insertText":"WS_PONG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_PONG"}},{"label":"•WS_TEXT","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"405d8e68WS_TEXT","filterText":"WS_TEXT","insertText":"WS_TEXT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WS_TEXT"}},{"label":"•WiFiClass","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFi.h\"`"},"sortText":"405d8e68WiFiClass","filterText":"WiFiClass","insertText":"WiFiClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiClass"}},{"label":"•wcstoimax(const wchar_t *, wchar_t **, int)","kind":3,"detail":"intmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"405d8e68wcstoimax","filterText":"wcstoimax","insertText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":"•wcstoumax(const wchar_t *, wchar_t **, int)","kind":3,"detail":"uintmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"sortText":"405d8e68wcstoumax","filterText":"wcstoumax","insertText":"wcstoumax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstoumax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":"•wint_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstddef\u003e`"},"sortText":"405d8e68wint_t","filterText":"wint_t","insertText":"wint_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wint_t"}},{"label":"•WiFiAPClass","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiAP.h\"`"},"sortText":"4066d1c6WiFiAPClass","filterText":"WiFiAPClass","insertText":"WiFiAPClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiAPClass"}},{"label":"•WIFI_MODE_NULL","kind":20,"detail":"wifi_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nnull mode"},"sortText":"40694698WIFI_MODE_NULL","filterText":"WIFI_MODE_NULL","insertText":"WIFI_MODE_NULL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_MODE_NULL"}},{"label":"•WL_CONNECT_FAILED","kind":20,"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"406a7657WL_CONNECT_FAILED","filterText":"WL_CONNECT_FAILED","insertText":"WL_CONNECT_FAILED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WL_CONNECT_FAILED"}},{"label":"•WL_CONNECTED","kind":20,"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"407125b0WL_CONNECTED","filterText":"WL_CONNECTED","insertText":"WL_CONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WL_CONNECTED"}},{"label":"•WIFI_DNS_DONE_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"4071b066WIFI_DNS_DONE_BIT","filterText":"WIFI_DNS_DONE_BIT","insertText":"WIFI_DNS_DONE_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_DNS_DONE_BIT"}},{"label":"•WIFI_DNS_IDLE_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"4071b066WIFI_DNS_IDLE_BIT","filterText":"WIFI_DNS_IDLE_BIT","insertText":"WIFI_DNS_IDLE_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_DNS_IDLE_BIT"}},{"label":"•WIFI_POWER_18_5dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n18.5dBm"},"sortText":"4071b066WIFI_POWER_18_5dBm","filterText":"WIFI_POWER_18_5dBm","insertText":"WIFI_POWER_18_5dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_POWER_18_5dBm"}},{"label":"•WIFI_POWER_19_5dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n19.5dBm"},"sortText":"4071b066WIFI_POWER_19_5dBm","filterText":"WIFI_POWER_19_5dBm","insertText":"WIFI_POWER_19_5dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_POWER_19_5dBm"}},{"label":"•WIFI_POWER_19dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n19dBm"},"sortText":"4071b066WIFI_POWER_19dBm","filterText":"WIFI_POWER_19dBm","insertText":"WIFI_POWER_19dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_POWER_19dBm"}},{"label":"•WIFI_POWER_5dBm","kind":20,"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n5dBm"},"sortText":"4071b066WIFI_POWER_5dBm","filterText":"WIFI_POWER_5dBm","insertText":"WIFI_POWER_5dBm","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_POWER_5dBm"}},{"label":"•WIFI_SCANNING_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"4071b066WIFI_SCANNING_BIT","filterText":"WIFI_SCANNING_BIT","insertText":"WIFI_SCANNING_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_SCANNING_BIT"}},{"label":"•WIFI_SCAN_DONE_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"4071b066WIFI_SCAN_DONE_BIT","filterText":"WIFI_SCAN_DONE_BIT","insertText":"WIFI_SCAN_DONE_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_SCAN_DONE_BIT"}},{"label":"•WL_DISCONNECTED","kind":20,"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"4071b066WL_DISCONNECTED","filterText":"WL_DISCONNECTED","insertText":"WL_DISCONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WL_DISCONNECTED"}},{"label":"•WL_NO_SSID_AVAIL","kind":20,"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"4071b066WL_NO_SSID_AVAIL","filterText":"WL_NO_SSID_AVAIL","insertText":"WL_NO_SSID_AVAIL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WL_NO_SSID_AVAIL"}},{"label":"•WL_SCAN_COMPLETED","kind":20,"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"4071b066WL_SCAN_COMPLETED","filterText":"WL_SCAN_COMPLETED","insertText":"WL_SCAN_COMPLETED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WL_SCAN_COMPLETED"}},{"label":"•WiFiClientRxBuffer","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiClient.h\"`"},"sortText":"4071b066WiFiClientRxBuffer","filterText":"WiFiClientRxBuffer","insertText":"WiFiClientRxBuffer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiClientRxBuffer"}},{"label":"•WiFiEventCb","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"4071b066WiFiEventCb","filterText":"WiFiEventCb","insertText":"WiFiEventCb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiEventCb"}},{"label":"•WiFiEventSysCb","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"4071b066WiFiEventSysCb","filterText":"WiFiEventSysCb","insertText":"WiFiEventSysCb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiEventSysCb"}},{"label":"•wifi_event_id_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"4071b066wifi_event_id_t","filterText":"wifi_event_id_t","insertText":"wifi_event_id_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wifi_event_id_t"}},{"label":"•wifi_power_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"4071b066wifi_power_t","filterText":"wifi_power_t","insertText":"wifi_power_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wifi_power_t"}},{"label":"•wl_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"4071b066wl_status_t","filterText":"wl_status_t","insertText":"wl_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wl_status_t"}},{"label":"•wifi_config_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Configuration data for ESP32 AP or STA.  \nThe usage of this union (for ap or sta configuration) is determined by the accompanying interface argument passed to esp_wifi_set_config() or esp_wifi_get_config()"},"sortText":"407239f4wifi_config_t","filterText":"wifi_config_t","insertText":"wifi_config_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wifi_config_t"}},{"label":"•wifi_ap_record_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Description of a WiFi AP"},"sortText":"40734131wifi_ap_record_t","filterText":"wifi_ap_record_t","insertText":"wifi_ap_record_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wifi_ap_record_t"}},{"label":"•WiFiMulti","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiMulti.h\"`"},"sortText":"40791bfcWiFiMulti","filterText":"WiFiMulti","insertText":"WiFiMulti","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiMulti"}},{"label":"•WifiAPlist_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiMulti.h\"`"},"sortText":"40791bfcWifiAPlist_t","filterText":"WifiAPlist_t","insertText":"WifiAPlist_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WifiAPlist_t"}},{"label":"•wcsftime(wchar_t *, size_t, const wchar_t *, const struct tm *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40791bfcwcsftime","filterText":"wcsftime","insertText":"wcsftime(${1:wchar_t *}, ${2:size_t}, ${3:const wchar_t *}, ${4:const struct tm *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsftime(${1:wchar_t *}, ${2:size_t}, ${3:const wchar_t *}, ${4:const struct tm *})"}},{"label":"•wcslcpy(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40791bfcwcslcpy","filterText":"wcslcpy","insertText":"wcslcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcslcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":"•wcsnrtombs(char *, const wchar_t **, size_t, size_t, mbstate_t *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40791bfcwcsnrtombs","filterText":"wcsnrtombs","insertText":"wcsnrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:size_t}, ${5:mbstate_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsnrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:size_t}, ${5:mbstate_t *})"}},{"label":"•wcstod(const wchar_t *, wchar_t **)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40791bfcwcstod","filterText":"wcstod","insertText":"wcstod(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstod(${1:const wchar_t *}, ${2:wchar_t **})"}},{"label":"•wcstof(const wchar_t *, wchar_t **)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40791bfcwcstof","filterText":"wcstof","insertText":"wcstof(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstof(${1:const wchar_t *}, ${2:wchar_t **})"}},{"label":"•wcstol(const wchar_t *, wchar_t **, int)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40791bfcwcstol","filterText":"wcstol","insertText":"wcstol(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstol(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":"•wcwidth(const wchar_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40791bfcwcwidth","filterText":"wcwidth","insertText":"wcwidth(${1:const wchar_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcwidth(${1:const wchar_t})"}},{"label":"•wmemchr(const wchar_t *, wchar_t, size_t)","kind":3,"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40791bfcwmemchr","filterText":"wmemchr","insertText":"wmemchr(${1:const wchar_t *}, ${2:wchar_t}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wmemchr(${1:const wchar_t *}, ${2:wchar_t}, ${3:size_t})"}},{"label":"•WIFI_PROV_CRED_FAIL","kind":20,"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nEmitted when device fails to connect to the AP of which the credentials were received earlier on event `WIFI_PROV_CRED_RECV`.  \nThe event data in this case is a pointer to the disconnection reason code with type `wifi_prov_sta_fail_reason_t`"},"sortText":"407f2f3bWIFI_PROV_CRED_FAIL","filterText":"WIFI_PROV_CRED_FAIL","insertText":"WIFI_PROV_CRED_FAIL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_PROV_CRED_FAIL"}},{"label":"•WIFI_PROV_CRED_SUCCESS","kind":20,"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nEmitted when device successfully connects to the AP of which the credentials were received earlier on event `WIFI_PROV_CRED_RECV`"},"sortText":"407f2f3bWIFI_PROV_CRED_SUCCESS","filterText":"WIFI_PROV_CRED_SUCCESS","insertText":"WIFI_PROV_CRED_SUCCESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_PROV_CRED_SUCCESS"}},{"label":"•wifi_prov_event_handler_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Event handler that is used by the manager while provisioning service is active"},"sortText":"407f2f3bwifi_prov_event_handler_t","filterText":"wifi_prov_event_handler_t","insertText":"wifi_prov_event_handler_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wifi_prov_event_handler_t"}},{"label":"•wifi_prov_mgr_get_wifi_disconnect_reason(wifi_prov_sta_fail_reason_t *reason)","kind":3,"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Get reason code in case of Wi-Fi station disconnection during provisioning  \n@param[out] reason Pointer to wifi_prov_sta_fail_reason_t variable to be filled  \n@return  \n\\- ESP_OK : Successfully retrieved Wi-Fi disconnect reason  \n\\- ESP_FAIL : Provisioning app not running"},"sortText":"407f2f3bwifi_prov_mgr_get_wifi_disconnect_reason","filterText":"wifi_prov_mgr_get_wifi_disconnect_reason","insertText":"wifi_prov_mgr_get_wifi_disconnect_reason(${1:wifi_prov_sta_fail_reason_t *reason})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wifi_prov_mgr_get_wifi_disconnect_reason(${1:wifi_prov_sta_fail_reason_t *reason})"}},{"label":"•wifi_prov_mgr_is_provisioned(bool *provisioned)","kind":3,"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Checks if device is provisioned  \nThis checks if Wi-Fi credentials are present on the NVS  \nThe Wi-Fi credentials are assumed to be kept in the same NVS namespace as used by esp_wifi component  \nIf one were to call esp_wifi_set_config() directly instead of going through the provisioning process, this function will still yield true (i.e. device will be found to be provisioned)  \n@note Calling wifi_prov_mgr_start_provisioning() automatically resets the provision state, irrespective of what the state was prior to making the call.  \n@param[out] provisioned True if provisioned, else false  \n@return  \n\\- ESP_OK : Retrieved provision state successfully  \n\\- ESP_FAIL : Wi-Fi not initialized  \n\\- ESP_ERR_INVALID_ARG : Null argument supplied  \n\\- ESP_ERR_INVALID_STATE : Manager not initialized"},"sortText":"407f2f3bwifi_prov_mgr_is_provisioned","filterText":"wifi_prov_mgr_is_provisioned","insertText":"wifi_prov_mgr_is_provisioned(${1:bool *provisioned})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wifi_prov_mgr_is_provisioned(${1:bool *provisioned})"}},{"label":"•WIFI_MODE_STA","kind":20,"detail":"wifi_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nWiFi station mode"},"sortText":"407fa4c5WIFI_MODE_STA","filterText":"WIFI_MODE_STA","insertText":"WIFI_MODE_STA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_MODE_STA"}},{"label":"•wifi_mode_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"407fa4c5wifi_mode_t","filterText":"wifi_mode_t","insertText":"wifi_mode_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wifi_mode_t"}},{"label":" WITH_POSIX","kind":1,"sortText":"40800000WITH_POSIX","filterText":"WITH_POSIX","insertText":"WITH_POSIX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WITH_POSIX"}},{"label":"•WIFI_ANT_ANT1","kind":20,"detail":"wifi_ant_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nWiFi antenna 1"},"sortText":"4088511fWIFI_ANT_ANT1","filterText":"WIFI_ANT_ANT1","insertText":"WIFI_ANT_ANT1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_ANT_ANT1"}},{"label":"•WIFI_ANT_MODE_AUTO","kind":20,"detail":"wifi_ant_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nEnable WiFi antenna 0 and 1, automatically select an antenna"},"sortText":"4088511fWIFI_ANT_MODE_AUTO","filterText":"WIFI_ANT_MODE_AUTO","insertText":"WIFI_ANT_MODE_AUTO","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_ANT_MODE_AUTO"}},{"label":"•WIFI_AUTH_OPEN","kind":20,"detail":"wifi_auth_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nauthenticate mode : open"},"sortText":"4088511fWIFI_AUTH_OPEN","filterText":"WIFI_AUTH_OPEN","insertText":"WIFI_AUTH_OPEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_AUTH_OPEN"}},{"label":"•WIFI_AUTH_WPA_PSK","kind":20,"detail":"wifi_auth_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nauthenticate mode : WPA_PSK"},"sortText":"4088511fWIFI_AUTH_WPA_PSK","filterText":"WIFI_AUTH_WPA_PSK","insertText":"WIFI_AUTH_WPA_PSK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_AUTH_WPA_PSK"}},{"label":"•WIFI_CIPHER_TYPE_CCMP","kind":20,"detail":"wifi_cipher_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe cipher type is CCMP"},"sortText":"4088511fWIFI_CIPHER_TYPE_CCMP","filterText":"WIFI_CIPHER_TYPE_CCMP","insertText":"WIFI_CIPHER_TYPE_CCMP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_CIPHER_TYPE_CCMP"}},{"label":"•WIFI_CIPHER_TYPE_WEP104","kind":20,"detail":"wifi_cipher_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe cipher type is WEP104"},"sortText":"4088511fWIFI_CIPHER_TYPE_WEP104","filterText":"WIFI_CIPHER_TYPE_WEP104","insertText":"WIFI_CIPHER_TYPE_WEP104","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_CIPHER_TYPE_WEP104"}},{"label":"•WIFI_CIPHER_TYPE_WEP40","kind":20,"detail":"wifi_cipher_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe cipher type is WEP40"},"sortText":"4088511fWIFI_CIPHER_TYPE_WEP40","filterText":"WIFI_CIPHER_TYPE_WEP40","insertText":"WIFI_CIPHER_TYPE_WEP40","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_CIPHER_TYPE_WEP40"}},{"label":"•WIFI_IOCTL_GET_STA_HT2040_COEX","kind":20,"detail":"wifi_ioctl_cmd_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nGet the configuration of STA's HT2040 coexist management"},"sortText":"4088511fWIFI_IOCTL_GET_STA_HT2040_COEX","filterText":"WIFI_IOCTL_GET_STA_HT2040_COEX","insertText":"WIFI_IOCTL_GET_STA_HT2040_COEX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_IOCTL_GET_STA_HT2040_COEX"}},{"label":"•WIFI_MODE_AP","kind":20,"detail":"wifi_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nWiFi soft-AP mode"},"sortText":"4088511fWIFI_MODE_AP","filterText":"WIFI_MODE_AP","insertText":"WIFI_MODE_AP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_MODE_AP"}},{"label":"•WIFI_PHY_RATE_12M","kind":20,"detail":"wifi_phy_rate_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n12 Mbps"},"sortText":"4088511fWIFI_PHY_RATE_12M","filterText":"WIFI_PHY_RATE_12M","insertText":"WIFI_PHY_RATE_12M","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_PHY_RATE_12M"}},{"label":"•WIFI_PHY_RATE_LORA_250K","kind":20,"detail":"wifi_phy_rate_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n250 Kbps"},"sortText":"4088511fWIFI_PHY_RATE_LORA_250K","filterText":"WIFI_PHY_RATE_LORA_250K","insertText":"WIFI_PHY_RATE_LORA_250K","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_PHY_RATE_LORA_250K"}},{"label":"•WIFI_PHY_RATE_MCS0_LGI","kind":20,"detail":"wifi_phy_rate_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nMCS0 with long GI, 6.5 Mbps for 20MHz, 13.5 Mbps for 40MHz"},"sortText":"4088511fWIFI_PHY_RATE_MCS0_LGI","filterText":"WIFI_PHY_RATE_MCS0_LGI","insertText":"WIFI_PHY_RATE_MCS0_LGI","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_PHY_RATE_MCS0_LGI"}},{"label":"•WIFI_PKT_CTRL","kind":20,"detail":"wifi_promiscuous_pkt_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nControl frame, indicates 'buf' argument is wifi_promiscuous_pkt_t"},"sortText":"4088511fWIFI_PKT_CTRL","filterText":"WIFI_PKT_CTRL","insertText":"WIFI_PKT_CTRL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_PKT_CTRL"}},{"label":"•WIFI_PS_MIN_MODEM","kind":20,"detail":"wifi_ps_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nMinimum modem power saving. In this mode, station wakes up to receive beacon every DTIM period"},"sortText":"4088511fWIFI_PS_MIN_MODEM","filterText":"WIFI_PS_MIN_MODEM","insertText":"WIFI_PS_MIN_MODEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_PS_MIN_MODEM"}},{"label":"•WIFI_REASON_AKMP_INVALID","kind":20,"detail":"wifi_err_reason_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"4088511fWIFI_REASON_AKMP_INVALID","filterText":"WIFI_REASON_AKMP_INVALID","insertText":"WIFI_REASON_AKMP_INVALID","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_REASON_AKMP_INVALID"}},{"label":"•WIFI_REASON_BEACON_TIMEOUT","kind":20,"detail":"wifi_err_reason_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"4088511fWIFI_REASON_BEACON_TIMEOUT","filterText":"WIFI_REASON_BEACON_TIMEOUT","insertText":"WIFI_REASON_BEACON_TIMEOUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_REASON_BEACON_TIMEOUT"}},{"label":"•WIFI_REASON_DISASSOC_SUPCHAN_BAD","kind":20,"detail":"wifi_err_reason_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"4088511fWIFI_REASON_DISASSOC_SUPCHAN_BAD","filterText":"WIFI_REASON_DISASSOC_SUPCHAN_BAD","insertText":"WIFI_REASON_DISASSOC_SUPCHAN_BAD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_REASON_DISASSOC_SUPCHAN_BAD"}},{"label":"•WIFI_REASON_GROUP_CIPHER_INVALID","kind":20,"detail":"wifi_err_reason_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"4088511fWIFI_REASON_GROUP_CIPHER_INVALID","filterText":"WIFI_REASON_GROUP_CIPHER_INVALID","insertText":"WIFI_REASON_GROUP_CIPHER_INVALID","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_REASON_GROUP_CIPHER_INVALID"}},{"label":"•WIFI_SCAN_TYPE_PASSIVE","kind":20,"detail":"wifi_scan_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \npassive scan"},"sortText":"4088511fWIFI_SCAN_TYPE_PASSIVE","filterText":"WIFI_SCAN_TYPE_PASSIVE","insertText":"WIFI_SCAN_TYPE_PASSIVE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_SCAN_TYPE_PASSIVE"}},{"label":"•WIFI_VND_IE_TYPE_ASSOC_REQ","kind":20,"detail":"wifi_vendor_ie_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"4088511fWIFI_VND_IE_TYPE_ASSOC_REQ","filterText":"WIFI_VND_IE_TYPE_ASSOC_REQ","insertText":"WIFI_VND_IE_TYPE_ASSOC_REQ","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WIFI_VND_IE_TYPE_ASSOC_REQ"}},{"label":"•WPS_FAIL_REASON_MAX","kind":20,"detail":"system_event_sta_wps_fail_reason_t","documentation":{"kind":"markdown","value":"From `\"esp_event_legacy.h\"`"},"sortText":"4088511fWPS_FAIL_REASON_MAX","filterText":"WPS_FAIL_REASON_MAX","insertText":"WPS_FAIL_REASON_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WPS_FAIL_REASON_MAX"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":8},"contentChanges":[{"range":{"start":{"line":4,"character":3},"end":{"line":4,"character":3}},"rangeLength":0,"text":"s"}]}}Content-Length: 235

{"jsonrpc":"2.0","id":151,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":4},"context":{"triggerKind":3}}}
>>>
Content-Length: 3579

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}Content-Length: 22941

{"id":151,"result":{"isIncomplete":false,"items":[{"label":" ws","kind":6,"detail":"AsyncWebSocket *","sortText":"3dacccccws","filterText":"ws","insertText":"ws","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"ws"}},{"label":" handleWebSocketMessage(void *arg, uint8_t *data, size_t len)","kind":2,"detail":"void","sortText":"3ffdffd9handleWebSocketMessage","filterText":"handleWebSocketMessage","insertText":"handleWebSocketMessage(${1:void *arg}, ${2:uint8_t *data}, ${3:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"handleWebSocketMessage(${1:void *arg}, ${2:uint8_t *data}, ${3:size_t len})"}},{"label":" initWebServer()","kind":2,"detail":"void","sortText":"4017ae13initWebServer","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"initWebServer()"}},{"label":" initWebSocket()","kind":2,"detail":"void","sortText":"4017ae13initWebSocket","filterText":"initWebSocket","insertText":"initWebSocket()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"initWebSocket()"}},{"label":"•std::ws(basic_istream\u003c_CharT, _Traits\u003e \u0026__is)","kind":3,"detail":"basic_istream\u003c_CharT, _Traits\u003e \u0026","documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \n@brief Quick and easy way to eat whitespace  \nThis manipulator extracts whitespace characters, stopping when the next character is non-whitespace, or when the input sequence is empty.  \nIf the sequence is empty, @c eofbit is set in the stream, but not  \n@c failbit.  \nThe current locale is used to distinguish whitespace characters.  \nExample:  \n@code MyClass mc;  \nstd::cin \u003e\u003e std::ws \u003e\u003e mc;  \n@endcode will skip leading whitespace before calling operator\u003e\u003e on cin and your object. Note that the same effect can be achieved by creating a std::basic_istream::sentry inside your definition of operator\u003e\u003e."},"sortText":"401f2ea4ws","filterText":"ws","insertText":"std::ws(${1:basic_istream\u003c_CharT, _Traits\u003e \u0026__is})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::ws(${1:basic_istream\u003c_CharT, _Traits\u003e \u0026__is})"}},{"label":"•WS_BINARY","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_BINARY","filterText":"WS_BINARY","insertText":"WS_BINARY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_BINARY"}},{"label":"•WS_CONNECTED","kind":20,"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_CONNECTED","filterText":"WS_CONNECTED","insertText":"WS_CONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_CONNECTED"}},{"label":"•WS_CONTINUATION","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_CONTINUATION","filterText":"WS_CONTINUATION","insertText":"WS_CONTINUATION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_CONTINUATION"}},{"label":"•WS_DISCONNECT","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_DISCONNECT","filterText":"WS_DISCONNECT","insertText":"WS_DISCONNECT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_DISCONNECT"}},{"label":"•WS_DISCONNECTED","kind":20,"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_DISCONNECTED","filterText":"WS_DISCONNECTED","insertText":"WS_DISCONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_DISCONNECTED"}},{"label":"•WS_DISCONNECTING","kind":20,"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_DISCONNECTING","filterText":"WS_DISCONNECTING","insertText":"WS_DISCONNECTING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_DISCONNECTING"}},{"label":"•WS_EVT_CONNECT","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_EVT_CONNECT","filterText":"WS_EVT_CONNECT","insertText":"WS_EVT_CONNECT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_EVT_CONNECT"}},{"label":"•WS_EVT_DATA","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_EVT_DATA","filterText":"WS_EVT_DATA","insertText":"WS_EVT_DATA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_EVT_DATA"}},{"label":"•WS_EVT_DISCONNECT","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_EVT_DISCONNECT","filterText":"WS_EVT_DISCONNECT","insertText":"WS_EVT_DISCONNECT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_EVT_DISCONNECT"}},{"label":"•WS_EVT_ERROR","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_EVT_ERROR","filterText":"WS_EVT_ERROR","insertText":"WS_EVT_ERROR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_EVT_ERROR"}},{"label":"•WS_EVT_PONG","kind":20,"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_EVT_PONG","filterText":"WS_EVT_PONG","insertText":"WS_EVT_PONG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_EVT_PONG"}},{"label":"•WS_MSG_ERROR","kind":20,"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_MSG_ERROR","filterText":"WS_MSG_ERROR","insertText":"WS_MSG_ERROR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_MSG_ERROR"}},{"label":"•WS_MSG_SENDING","kind":20,"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_MSG_SENDING","filterText":"WS_MSG_SENDING","insertText":"WS_MSG_SENDING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_MSG_SENDING"}},{"label":"•WS_MSG_SENT","kind":20,"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_MSG_SENT","filterText":"WS_MSG_SENT","insertText":"WS_MSG_SENT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_MSG_SENT"}},{"label":"•WS_PING","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_PING","filterText":"WS_PING","insertText":"WS_PING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_PING"}},{"label":"•WS_PONG","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_PONG","filterText":"WS_PONG","insertText":"WS_PONG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_PONG"}},{"label":"•WS_TEXT","kind":20,"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"4071dc9bWS_TEXT","filterText":"WS_TEXT","insertText":"WS_TEXT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_TEXT"}},{"label":"•wscanf(const wchar_t *, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40791bfcwscanf","filterText":"wscanf","insertText":"wscanf(${1:const wchar_t *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wscanf(${1:const wchar_t *, ...})"}},{"label":" AsyncWebSocket","kind":7,"sortText":"407dffd9AsyncWebSocket","filterText":"AsyncWebSocket","insertText":"AsyncWebSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"AsyncWebSocket"}},{"label":" AsyncWebServer","kind":7,"sortText":"4097ae13AsyncWebServer","filterText":"AsyncWebServer","insertText":"AsyncWebServer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"AsyncWebServer"}},{"label":" AsyncWebSocketClient","kind":7,"sortText":"4097ae13AsyncWebSocketClient","filterText":"AsyncWebSocketClient","insertText":"AsyncWebSocketClient","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"AsyncWebSocketClient"}},{"label":"•std::wstreambuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nBase class for @c wchar_t buffers."},"sortText":"409f2ea4wstreambuf","filterText":"wstreambuf","insertText":"std::wstreambuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::wstreambuf"}},{"label":"•std::wstringbuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c wchar_t memory buffers."},"sortText":"409f2ea4wstringbuf","filterText":"wstringbuf","insertText":"std::wstringbuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::wstringbuf"}},{"label":"•std::wstringstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c wchar_t mixed input and output memory streams."},"sortText":"409f2ea4wstringstream","filterText":"wstringstream","insertText":"std::wstringstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::wstringstream"}},{"label":"•std::wstreampos","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nFile position for wchar_t streams."},"sortText":"40a94eb8wstreampos","filterText":"wstreampos","insertText":"std::wstreampos","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::wstreampos"}},{"label":"•std::wstring","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \nA string of @c wchar_t"},"sortText":"40a94eb8wstring","filterText":"wstring","insertText":"std::wstring","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::wstring"}},{"label":"•WIFI_SCANNING_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"40aa889bWIFI_SCANNING_BIT","filterText":"WIFI_SCANNING_BIT","insertText":"WIFI_SCANNING_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WIFI_SCANNING_BIT"}},{"label":"•WIFI_SCAN_DONE_BIT","kind":6,"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"sortText":"40aa889bWIFI_SCAN_DONE_BIT","filterText":"WIFI_SCAN_DONE_BIT","insertText":"WIFI_SCAN_DONE_BIT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WIFI_SCAN_DONE_BIT"}},{"label":"•WL_SCAN_COMPLETED","kind":20,"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"40aa889bWL_SCAN_COMPLETED","filterText":"WL_SCAN_COMPLETED","insertText":"WL_SCAN_COMPLETED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WL_SCAN_COMPLETED"}},{"label":"•wl_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"sortText":"40aa889bwl_status_t","filterText":"wl_status_t","insertText":"wl_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wl_status_t"}},{"label":" AsyncWebServer(…)","kind":4,"detail":"[2 overloads]","sortText":"40acccccAsyncWebServer","filterText":"AsyncWebServer","insertText":"AsyncWebServer($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"AsyncWebServer($0)"}},{"label":" AsyncWebSocket(…)","kind":4,"detail":"[2 overloads]","sortText":"40acccccAsyncWebSocket","filterText":"AsyncWebSocket","insertText":"AsyncWebSocket($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"AsyncWebSocket($0)"}},{"label":" AsyncWebSocketClient(…)","kind":4,"detail":"[2 overloads]","sortText":"40acccccAsyncWebSocketClient","filterText":"AsyncWebSocketClient","insertText":"AsyncWebSocketClient($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"AsyncWebSocketClient($0)"}},{"label":"•std::wscanf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40b39ec4wscanf","filterText":"wscanf","insertText":"std::wscanf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::wscanf"}},{"label":"•WIFI_SCAN_TYPE_ACTIVE","kind":20,"detail":"wifi_scan_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nactive scan"},"sortText":"40c63cd6WIFI_SCAN_TYPE_ACTIVE","filterText":"WIFI_SCAN_TYPE_ACTIVE","insertText":"WIFI_SCAN_TYPE_ACTIVE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WIFI_SCAN_TYPE_ACTIVE"}},{"label":"•WIFI_SCAN_TYPE_PASSIVE","kind":20,"detail":"wifi_scan_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \npassive scan"},"sortText":"40c63cd6WIFI_SCAN_TYPE_PASSIVE","filterText":"WIFI_SCAN_TYPE_PASSIVE","insertText":"WIFI_SCAN_TYPE_PASSIVE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WIFI_SCAN_TYPE_PASSIVE"}},{"label":"•WIFI_SECOND_CHAN_ABOVE","kind":20,"detail":"wifi_second_chan_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe channel width is HT40 and the secondary channel is above the primary channel"},"sortText":"40c63cd6WIFI_SECOND_CHAN_ABOVE","filterText":"WIFI_SECOND_CHAN_ABOVE","insertText":"WIFI_SECOND_CHAN_ABOVE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WIFI_SECOND_CHAN_ABOVE"}},{"label":"•WIFI_SECOND_CHAN_BELOW","kind":20,"detail":"wifi_second_chan_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe channel width is HT40 and the secondary channel is below the primary channel"},"sortText":"40c63cd6WIFI_SECOND_CHAN_BELOW","filterText":"WIFI_SECOND_CHAN_BELOW","insertText":"WIFI_SECOND_CHAN_BELOW","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WIFI_SECOND_CHAN_BELOW"}},{"label":"•WIFI_SECOND_CHAN_NONE","kind":20,"detail":"wifi_second_chan_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe channel width is HT20"},"sortText":"40c63cd6WIFI_SECOND_CHAN_NONE","filterText":"WIFI_SECOND_CHAN_NONE","insertText":"WIFI_SECOND_CHAN_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WIFI_SECOND_CHAN_NONE"}},{"label":"•WIFI_STORAGE_FLASH","kind":20,"detail":"wifi_storage_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nall configuration will strore in both memory and flash"},"sortText":"40c63cd6WIFI_STORAGE_FLASH","filterText":"WIFI_STORAGE_FLASH","insertText":"WIFI_STORAGE_FLASH","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WIFI_STORAGE_FLASH"}},{"label":"•WIFI_STORAGE_RAM","kind":20,"detail":"wifi_storage_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nall configuration will only store in the memory"},"sortText":"40c63cd6WIFI_STORAGE_RAM","filterText":"WIFI_STORAGE_RAM","insertText":"WIFI_STORAGE_RAM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WIFI_STORAGE_RAM"}},{"label":"•wifi_scan_config_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Parameters for an SSID scan."},"sortText":"40c63cd6wifi_scan_config_t","filterText":"wifi_scan_config_t","insertText":"wifi_scan_config_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wifi_scan_config_t"}},{"label":"•wifi_scan_method_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"40c63cd6wifi_scan_method_t","filterText":"wifi_scan_method_t","insertText":"wifi_scan_method_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wifi_scan_method_t"}},{"label":"•wifi_scan_threshold_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"40c63cd6wifi_scan_threshold_t","filterText":"wifi_scan_threshold_t","insertText":"wifi_scan_threshold_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wifi_scan_threshold_t"}},{"label":"•wifi_scan_time_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Aggregate of active \u0026 passive scan time per channel"},"sortText":"40c63cd6wifi_scan_time_t","filterText":"wifi_scan_time_t","insertText":"wifi_scan_time_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wifi_scan_time_t"}},{"label":"•wifi_scan_type_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"40c63cd6wifi_scan_type_t","filterText":"wifi_scan_type_t","insertText":"wifi_scan_type_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wifi_scan_type_t"}},{"label":"•wifi_second_chan_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"40c63cd6wifi_second_chan_t","filterText":"wifi_second_chan_t","insertText":"wifi_second_chan_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wifi_second_chan_t"}},{"label":"•wifi_sort_method_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"40c63cd6wifi_sort_method_t","filterText":"wifi_sort_method_t","insertText":"wifi_sort_method_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wifi_sort_method_t"}},{"label":"•wifi_sta_config_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief STA configuration settings for the ESP32"},"sortText":"40c63cd6wifi_sta_config_t","filterText":"wifi_sta_config_t","insertText":"wifi_sta_config_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wifi_sta_config_t"}},{"label":"•wifi_sta_info_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Description of STA associated with AP"},"sortText":"40c63cd6wifi_sta_info_t","filterText":"wifi_sta_info_t","insertText":"wifi_sta_info_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wifi_sta_info_t"}},{"label":"•wifi_sta_list_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief List of stations associated with the ESP32 Soft-AP"},"sortText":"40c63cd6wifi_sta_list_t","filterText":"wifi_sta_list_t","insertText":"wifi_sta_list_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wifi_sta_list_t"}},{"label":"•wifi_storage_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"sortText":"40c63cd6wifi_storage_t","filterText":"wifi_storage_t","insertText":"wifi_storage_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"wifi_storage_t"}},{"label":"•WAIT_SYNC_FRM","kind":20,"detail":"RcvMsgState","documentation":{"kind":"markdown","value":"From `\"rom/uart.h\"`"},"sortText":"40cc589cWAIT_SYNC_FRM","filterText":"WAIT_SYNC_FRM","insertText":"WAIT_SYNC_FRM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WAIT_SYNC_FRM"}},{"label":"•WS_MAX_QUEUED_MESSAGES","kind":1,"documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"sortText":"40fec88dWS_MAX_QUEUED_MESSAGES","filterText":"WS_MAX_QUEUED_MESSAGES","insertText":"WS_MAX_QUEUED_MESSAGES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WS_MAX_QUEUED_MESSAGES"}},{"label":"•WSR(reg, newval)","kind":1,"documentation":{"kind":"markdown","value":"From `\"soc/cpu.h\"`"},"sortText":"412966b4WSR","filterText":"WSR","insertText":"WSR(${1:reg}, ${2:newval})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"WSR(${1:reg}, ${2:newval})"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":152,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":152,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":153,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":153,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":8}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":9},"contentChanges":[{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"rangeLength":0,"text":" "}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":10},"contentChanges":[{"range":{"start":{"line":4,"character":5},"end":{"line":4,"character":5}},"rangeLength":0,"text":"="}]}}
>>>
Content-Length: 3579

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}Content-Length: 3548

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":11},"contentChanges":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":6}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 3548

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":11}}}Content-Length: 203

{"jsonrpc":"2.0","id":154,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":45}}}
>>>
Content-Length: 276

{"id":154,"result":{"contents":{"kind":"markdown","value":"### param `server`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *server\n```"},"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":51}}},"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":155,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":45}}}
>>>
Content-Length: 124

{"id":155,"result":[{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":51}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":156,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":45}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":156,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":157,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":45}}}
>>>
Content-Length: 276

{"id":157,"result":{"contents":{"kind":"markdown","value":"### param `server`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *server\n```"},"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":51}}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":158,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":46}}}
>>>
Content-Length: 276

{"id":158,"result":{"contents":{"kind":"markdown","value":"### param `server`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *server\n```"},"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":51}}},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":12},"contentChanges":[{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":45}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 3548

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":159,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":46},"end":{"line":2,"character":46}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":159,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":46},"end":{"line":2,"character":46}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":160,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":12}}}Content-Length: 203

{"jsonrpc":"2.0","id":161,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":68}}}
>>>
Content-Length: 40

{"id":161,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":162,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":69}}}
>>>
Content-Length: 40

{"id":162,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":163,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":69}}}
>>>
Content-Length: 40

{"id":163,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":164,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":70}}}
>>>
Content-Length: 124

{"id":164,"result":[{"range":{"start":{"line":2,"character":70},"end":{"line":2,"character":72}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":13},"contentChanges":[{"range":{"start":{"line":2,"character":70},"end":{"line":2,"character":70}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 3728

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":165,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":71},"end":{"line":2,"character":71}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":165,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":13}}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":14},"contentChanges":[{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":7}},"rangeLength":0,"text":"i"}]}}Content-Length: 235

{"jsonrpc":"2.0","id":166,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":8},"context":{"triggerKind":1}}}
>>>
Content-Length: 38574

{"id":166,"result":{"isIncomplete":true,"items":[{"label":" istate","kind":6,"detail":"State *","sortText":"3dceb9faistate","filterText":"istate","insertText":"istate","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"istate"}},{"label":" iserver","kind":6,"detail":"AsyncWebServer *","sortText":"3de19999iserver","filterText":"iserver","insertText":"iserver","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"iserver"}},{"label":" iws","kind":6,"detail":"AsyncWebSocket *","sortText":"3e2ccccciws","filterText":"iws","insertText":"iws","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"iws"}},{"label":" initWebServer()","kind":2,"detail":"void","sortText":"3e97ae13initWebServer","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"initWebServer()"}},{"label":" initWebSocket()","kind":2,"detail":"void","sortText":"3e97ae13initWebSocket","filterText":"initWebSocket","insertText":"initWebSocket()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"initWebSocket()"}},{"label":" int","kind":14,"sortText":"3f000000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"int"}},{"label":" INADDR_NONE","kind":6,"detail":"const IPAddress","sortText":"3f17ae13INADDR_NONE","filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"INADDR_NONE"}},{"label":"•IPAddress","kind":7,"documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"sortText":"3f1de0ccIPAddress","filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"IPAddress"}},{"label":" IPAddress(…)","kind":4,"detail":"[5 overloads]","sortText":"3f733333IPAddress","filterText":"IPAddress","insertText":"IPAddress($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"IPAddress($0)"}},{"label":"•int8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"40161935int8_t","filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"int8_t"}},{"label":" initSDCard()","kind":3,"detail":"void","sortText":"402b59f1initSDCard","filterText":"initSDCard","insertText":"initSDCard()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"initSDCard()"}},{"label":"•i2c_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"40489899i2c_t","filterText":"i2c_t","insertText":"i2c_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"i2c_t"}},{"label":"•int32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"404bdaf3int32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"int32_t"}},{"label":"•IPv6Address","kind":7,"documentation":{"kind":"markdown","value":"From `\"IPv6Address.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"sortText":"404d2d97IPv6Address","filterText":"IPv6Address","insertText":"IPv6Address","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"IPv6Address"}},{"label":"•i2c_err_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`  \nExternal Wire.h equivalent error Codes"},"sortText":"4059ad5ci2c_err_t","filterText":"i2c_err_t","insertText":"i2c_err_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"i2c_err_t"}},{"label":"•int16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int16_t","filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"int16_t"}},{"label":"•int64_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"int64_t"}},{"label":"•int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"int_fast16_t"}},{"label":"•int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"int_fast32_t"}},{"label":"•int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"int_fast64_t"}},{"label":"•int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"int_fast8_t"}},{"label":"•int_least32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_least32_t","filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"int_least32_t"}},{"label":"•int_least64_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_least64_t","filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"int_least64_t"}},{"label":"•int_least8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_least8_t","filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"int_least8_t"}},{"label":"•intmax_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68intmax_t","filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"intmax_t"}},{"label":"•intptr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68intptr_t","filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"intptr_t"}},{"label":"•isHexadecimalDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"sortText":"405d8e68isHexadecimalDigit","filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"isHexadecimalDigit(${1:int c})"}},{"label":"•isLowerCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"sortText":"405d8e68isLowerCase","filterText":"isLowerCase","insertText":"isLowerCase(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"isLowerCase(${1:int c})"}},{"label":"•I2C_ERROR_OK","kind":20,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"405eee92I2C_ERROR_OK","filterText":"I2C_ERROR_OK","insertText":"I2C_ERROR_OK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"I2C_ERROR_OK"}},{"label":"•I2C_ERROR_DEV","kind":20,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4060f05dI2C_ERROR_DEV","filterText":"I2C_ERROR_DEV","insertText":"I2C_ERROR_DEV","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"I2C_ERROR_DEV"}},{"label":"•I2C_ERROR_BUSY","kind":20,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fI2C_ERROR_BUSY","filterText":"I2C_ERROR_BUSY","insertText":"I2C_ERROR_BUSY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"I2C_ERROR_BUSY"}},{"label":"•I2C_ERROR_MEMORY","kind":20,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fI2C_ERROR_MEMORY","filterText":"I2C_ERROR_MEMORY","insertText":"I2C_ERROR_MEMORY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"I2C_ERROR_MEMORY"}},{"label":"•InterruptArgStructure","kind":22,"documentation":{"kind":"markdown","value":"From `\"FunctionalInterrupt.h\"`"},"sortText":"4068a03fInterruptArgStructure","filterText":"InterruptArgStructure","insertText":"InterruptArgStructure","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"InterruptArgStructure"}},{"label":"•i2cAttachSCL(i2c_t *i2c, int8_t scl)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`  \nFunctions below should be used only if well understood Might be deprecated and removed in future"},"sortText":"4068a03fi2cAttachSCL","filterText":"i2cAttachSCL","insertText":"i2cAttachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"i2cAttachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})"}},{"label":"•i2cDetachSCL(i2c_t *i2c, int8_t scl)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cDetachSCL","filterText":"i2cDetachSCL","insertText":"i2cDetachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"i2cDetachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})"}},{"label":"•i2cDetachSDA(i2c_t *i2c, int8_t sda)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cDetachSDA","filterText":"i2cDetachSDA","insertText":"i2cDetachSDA(${1:i2c_t *i2c}, ${2:int8_t sda})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"i2cDetachSDA(${1:i2c_t *i2c}, ${2:int8_t sda})"}},{"label":"•i2cFlush(i2c_t *i2c)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cFlush","filterText":"i2cFlush","insertText":"i2cFlush(${1:i2c_t *i2c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"i2cFlush(${1:i2c_t *i2c})"}},{"label":"•i2cGetFrequency(i2c_t *i2c)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cGetFrequency","filterText":"i2cGetFrequency","insertText":"i2cGetFrequency(${1:i2c_t *i2c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"i2cGetFrequency(${1:i2c_t *i2c})"}},{"label":"•i2cInit(uint8_t i2c_num, int8_t sda, int8_t scl, uint32_t clk_speed)","kind":3,"detail":"i2c_t *","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cInit","filterText":"i2cInit","insertText":"i2cInit(${1:uint8_t i2c_num}, ${2:int8_t sda}, ${3:int8_t scl}, ${4:uint32_t clk_speed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"i2cInit(${1:uint8_t i2c_num}, ${2:int8_t sda}, ${3:int8_t scl}, ${4:uint32_t clk_speed})"}},{"label":"•i2cProcQueue(i2c_t *i2c, uint32_t *readCount, uint16_t timeOutMillis)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`  \nStickbreakers ISR Support"},"sortText":"4068a03fi2cProcQueue","filterText":"i2cProcQueue","insertText":"i2cProcQueue(${1:i2c_t *i2c}, ${2:uint32_t *readCount}, ${3:uint16_t timeOutMillis})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"i2cProcQueue(${1:i2c_t *i2c}, ${2:uint32_t *readCount}, ${3:uint16_t timeOutMillis})"}},{"label":"•i2cRead(i2c_t *i2c, uint16_t address, uint8_t *buff, uint16_t size, bool sendStop, uint16_t timeOutMillis, uint32_t *readCount)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cRead","filterText":"i2cRead","insertText":"i2cRead(${1:i2c_t *i2c}, ${2:uint16_t address}, ${3:uint8_t *buff}, ${4:uint16_t size}, ${5:bool sendStop}, ${6:uint16_t timeOutMillis}, ${7:uint32_t *readCount})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"i2cRead(${1:i2c_t *i2c}, ${2:uint16_t address}, ${3:uint8_t *buff}, ${4:uint16_t size}, ${5:bool sendStop}, ${6:uint16_t timeOutMillis}, ${7:uint32_t *readCount})"}},{"label":"•i2cSetFrequency(i2c_t *i2c, uint32_t clk_speed)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cSetFrequency","filterText":"i2cSetFrequency","insertText":"i2cSetFrequency(${1:i2c_t *i2c}, ${2:uint32_t clk_speed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"i2cSetFrequency(${1:i2c_t *i2c}, ${2:uint32_t clk_speed})"}},{"label":" init()","kind":3,"detail":"void","sortText":"4068a03finit","filterText":"init","insertText":"init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"init()"}},{"label":" initVariant()","kind":3,"detail":"void","sortText":"4068a03finitVariant","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"initVariant()"}},{"label":"•ilogb(double)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"4071b066ilogb","filterText":"ilogb","insertText":"ilogb(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ilogb(${1:double})"}},{"label":"•ilogbf(float)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"4071b066ilogbf","filterText":"ilogbf","insertText":"ilogbf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ilogbf(${1:float})"}},{"label":"•ilogbl(long double)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"4071b066ilogbl","filterText":"ilogbl","insertText":"ilogbl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ilogbl(${1:long double})"}},{"label":"•infinity()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`  \nNon ANSI double precision functions."},"sortText":"4071b066infinity","filterText":"infinity","insertText":"infinity()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"infinity()"}},{"label":"•ino_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"4071b066ino_t","filterText":"ino_t","insertText":"ino_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ino_t"}},{"label":"•isascii(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isascii","filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"isascii(${1:int __c})"}},{"label":"•isdigit(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isdigit","filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"isdigit(${1:int __c})"}},{"label":"•isupper(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isupper","filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"isupper(${1:int __c})"}},{"label":"•itimerspec","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"4071b066itimerspec","filterText":"itimerspec","insertText":"itimerspec","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"itimerspec"}},{"label":"•std::ilogb(long double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156ilogb","filterText":"ilogb","insertText":"std::ilogb(${1:long double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::ilogb(${1:long double __x})"}},{"label":"•std::is_bind_expression\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a function object should be treated as a subexpression when evaluating calls to function objects returned by bind(). [TR1 3.6.1]  \n@ingroup binders"},"sortText":"4078a156is_bind_expression","filterText":"is_bind_expression","insertText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_placeholder\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a placeholder in a bind() expression and, if so, which placeholder it is. [TR1 3.6.2]  \n@ingroup binders"},"sortText":"4078a156is_placeholder","filterText":"is_placeholder","insertText":"std::is_placeholder\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::is_placeholder\u003c${1:typename _Tp}\u003e"}},{"label":"•std::isgreater(double __x, double __y)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156isgreater","filterText":"isgreater","insertText":"std::isgreater(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::isgreater(${1:double __x}, ${2:double __y})"}},{"label":"•std::isless(_Tp __x, _Up __y)","kind":3,"detail":"typename __gnu_cxx::__enable_if\u003c(__is_arithmetic\u003c_Tp\u003e::__value \u0026\u0026 __is_arithmetic\u003c_Up\u003e::__value), bool\u003e::__type","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156isless","filterText":"isless","insertText":"std::isless(${1:_Tp __x}, ${2:_Up __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::isless(${1:_Tp __x}, ${2:_Up __y})"}},{"label":"•std::isnormal(double __x)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156isnormal","filterText":"isnormal","insertText":"std::isnormal(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::isnormal(${1:double __x})"}},{"label":"•i2c_dev_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"soc/i2c_struct.h\"`"},"sortText":"40791bfci2c_dev_t","filterText":"i2c_dev_t","insertText":"i2c_dev_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"i2c_dev_t"}},{"label":"•iswblank(wint_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"sortText":"40791bfciswblank","filterText":"iswblank","insertText":"iswblank(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"iswblank(${1:wint_t})"}},{"label":"•iswdigit(wint_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"sortText":"40791bfciswdigit","filterText":"iswdigit","insertText":"iswdigit(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"iswdigit(${1:wint_t})"}},{"label":"•iswspace(wint_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"sortText":"40791bfciswspace","filterText":"iswspace","insertText":"iswspace(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"iswspace(${1:wint_t})"}},{"label":"•ip_addr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \n@ingroup ipaddr A union struct for both IP version's addresses.  \nATTENTION: watch out for its size when adding IPv6 address scope!"},"sortText":"407c3a43ip_addr_t","filterText":"ip_addr_t","insertText":"ip_addr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ip_addr_t"}},{"label":" INADDR_NONE","kind":1,"sortText":"40800000INADDR_NONE","filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"INADDR_NONE"}},{"label":" IPADDR_NONE","kind":1,"sortText":"40800000IPADDR_NONE","filterText":"IPADDR_NONE","insertText":"IPADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"IPADDR_NONE"}},{"label":"•IPADDR_TYPE_V4","kind":20,"detail":"lwip_ip_addr_type","documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \nIPv4"},"sortText":"4088511fIPADDR_TYPE_V4","filterText":"IPADDR_TYPE_V4","insertText":"IPADDR_TYPE_V4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"IPADDR_TYPE_V4"}},{"label":"•IPADDR_TYPE_V6","kind":20,"detail":"lwip_ip_addr_type","documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \nIPv6"},"sortText":"4088511fIPADDR_TYPE_V6","filterText":"IPADDR_TYPE_V6","insertText":"IPADDR_TYPE_V6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"IPADDR_TYPE_V6"}},{"label":"•icmp_input(struct pbuf *p, struct netif *inp)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lwip/icmp.h\"`"},"sortText":"4088511ficmp_input","filterText":"icmp_input","insertText":"icmp_input(${1:struct pbuf *p}, ${2:struct netif *inp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"icmp_input(${1:struct pbuf *p}, ${2:struct netif *inp})"}},{"label":"•in6_addr","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/inet.h\"`"},"sortText":"4088511fin6_addr","filterText":"in6_addr","insertText":"in6_addr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"in6_addr"}},{"label":"•in_addr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"lwip/inet.h\"`"},"sortText":"4088511fin_addr_t","filterText":"in_addr_t","insertText":"in_addr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"in_addr_t"}},{"label":"•intr_handle_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_intr_alloc.h\"`"},"sortText":"4088511fintr_handle_t","filterText":"intr_handle_t","insertText":"intr_handle_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"intr_handle_t"}},{"label":"•ip4_addr2","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/ip4_addr.h\"`"},"sortText":"4088511fip4_addr2","filterText":"ip4_addr2","insertText":"ip4_addr2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ip4_addr2"}},{"label":"•ip4_input(struct pbuf *p, struct netif *inp)","kind":3,"detail":"err_t","documentation":{"kind":"markdown","value":"From `\"lwip/ip4.h\"`"},"sortText":"4088511fip4_input","filterText":"ip4_input","insertText":"ip4_input(${1:struct pbuf *p}, ${2:struct netif *inp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ip4_input(${1:struct pbuf *p}, ${2:struct netif *inp})"}},{"label":"•ip4addr_ntoa_r(const ip4_addr_t *addr, char *buf, int buflen)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"lwip/ip4_addr.h\"`"},"sortText":"4088511fip4addr_ntoa_r","filterText":"ip4addr_ntoa_r","insertText":"ip4addr_ntoa_r(${1:const ip4_addr_t *addr}, ${2:char *buf}, ${3:int buflen})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ip4addr_ntoa_r(${1:const ip4_addr_t *addr}, ${2:char *buf}, ${3:int buflen})"}},{"label":"•ip6_addr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"lwip/ip6_addr.h\"`  \nIPv6 address"},"sortText":"4088511fip6_addr_t","filterText":"ip6_addr_t","insertText":"ip6_addr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ip6_addr_t"}},{"label":"•ip6_select_source_address(struct netif *netif, const ip6_addr_t *dest)","kind":3,"detail":"const ip_addr_t *","documentation":{"kind":"markdown","value":"From `\"lwip/ip6.h\"`"},"sortText":"4088511fip6_select_source_address","filterText":"ip6_select_source_address","insertText":"ip6_select_source_address(${1:struct netif *netif}, ${2:const ip6_addr_t *dest})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ip6_select_source_address(${1:struct netif *netif}, ${2:const ip6_addr_t *dest})"}},{"label":"•ip_addr","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`"},"sortText":"4088511fip_addr","filterText":"ip_addr","insertText":"ip_addr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ip_addr"}},{"label":"•ip_globals","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/ip.h\"`  \nGlobal variables of this module, kept in a struct for efficient access using base+index."},"sortText":"4088511fip_globals","filterText":"ip_globals","insertText":"ip_globals","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ip_globals"}},{"label":"•ICMP6_DUR_PROHIBITED","kind":20,"detail":"icmp6_dur_code","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nCommunication with destination administratively prohibited"},"sortText":"40907626ICMP6_DUR_PROHIBITED","filterText":"ICMP6_DUR_PROHIBITED","insertText":"ICMP6_DUR_PROHIBITED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ICMP6_DUR_PROHIBITED"}},{"label":"•ICMP6_PP_FIELD","kind":20,"detail":"icmp6_pp_code","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nErroneous header field encountered"},"sortText":"40907626ICMP6_PP_FIELD","filterText":"ICMP6_PP_FIELD","insertText":"ICMP6_PP_FIELD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ICMP6_PP_FIELD"}},{"label":"•ICMP6_TYPE_DUR","kind":20,"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nDestination unreachable"},"sortText":"40907626ICMP6_TYPE_DUR","filterText":"ICMP6_TYPE_DUR","insertText":"ICMP6_TYPE_DUR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ICMP6_TYPE_DUR"}},{"label":"•ICMP6_TYPE_EREQ","kind":20,"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nEcho request"},"sortText":"40907626ICMP6_TYPE_EREQ","filterText":"ICMP6_TYPE_EREQ","insertText":"ICMP6_TYPE_EREQ","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ICMP6_TYPE_EREQ"}},{"label":"•ICMP6_TYPE_NA","kind":20,"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nNeighbor advertisement"},"sortText":"40907626ICMP6_TYPE_NA","filterText":"ICMP6_TYPE_NA","insertText":"ICMP6_TYPE_NA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ICMP6_TYPE_NA"}},{"label":"•ICMP6_TYPE_PE3","kind":20,"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nPrivate experimentation"},"sortText":"40907626ICMP6_TYPE_PE3","filterText":"ICMP6_TYPE_PE3","insertText":"ICMP6_TYPE_PE3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ICMP6_TYPE_PE3"}},{"label":"•icmp6_pp_code","kind":13,"documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nICMP parameter code"},"sortText":"40907626icmp6_pp_code","filterText":"icmp6_pp_code","insertText":"icmp6_pp_code","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"icmp6_pp_code"}},{"label":"•ip6_addr_packed","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/prot/ip6.h\"`"},"sortText":"40907626ip6_addr_packed","filterText":"ip6_addr_packed","insertText":"ip6_addr_packed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ip6_addr_packed"}},{"label":"•ip6_frag_hdr","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/prot/ip6.h\"`"},"sortText":"40907626ip6_frag_hdr","filterText":"ip6_frag_hdr","insertText":"ip6_frag_hdr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ip6_frag_hdr"}},{"label":"•ip_hdr","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/prot/ip4.h\"`  \nThe IPv4 header"},"sortText":"40907626ip_hdr","filterText":"ip_hdr","insertText":"ip_hdr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"ip_hdr"}},{"label":"•std::is_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_assignable"},"sortText":"4092d0aais_assignable","filterText":"is_assignable","insertText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_convertible\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_convertible"},"sortText":"4092d0aais_convertible","filterText":"is_convertible","insertText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::is_literal_type\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_literal_type"},"sortText":"4092d0aais_literal_type","filterText":"is_literal_type","insertText":"std::is_literal_type\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::is_literal_type\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_polymorphic\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_polymorphic"},"sortText":"4092d0aais_polymorphic","filterText":"is_polymorphic","insertText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_reference\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_reference"},"sortText":"4092d0aais_reference","filterText":"is_reference","insertText":"std::is_reference\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::is_reference\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_assignable"},"sortText":"4092d0aais_trivially_assignable","filterText":"is_trivially_assignable","insertText":"std::is_trivially_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::is_trivially_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_trivially_move_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_move_assignable"},"sortText":"4092d0aais_trivially_move_assignable","filterText":"is_trivially_move_assignable","insertText":"std::is_trivially_move_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::is_trivially_move_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_move_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_move_constructible"},"sortText":"4092d0aais_trivially_move_constructible","filterText":"is_trivially_move_constructible","insertText":"std::is_trivially_move_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::is_trivially_move_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_unsigned\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_unsigned"},"sortText":"4092d0aais_unsigned","filterText":"is_unsigned","insertText":"std::is_unsigned\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::is_unsigned\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_error_code_enum\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csystem_error\u003e`  \nis_error_code_enum"},"sortText":"409f2ea4is_error_code_enum","filterText":"is_error_code_enum","insertText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e"}},{"label":"•IP_ADDRESS_LEASE_TIME","kind":20,"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nDHCP Extensions"},"sortText":"40a4b801IP_ADDRESS_LEASE_TIME","filterText":"IP_ADDRESS_LEASE_TIME","insertText":"IP_ADDRESS_LEASE_TIME","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"newText":"IP_ADDRESS_LEASE_TIME"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":15},"contentChanges":[{"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":8}},"rangeLength":0,"text":"w"}]}}Content-Length: 235

{"jsonrpc":"2.0","id":167,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":9},"context":{"triggerKind":3}}}
>>>
Content-Length: 3740

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'i'"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}Content-Length: 2525

{"id":167,"result":{"isIncomplete":false,"items":[{"label":" iws","kind":6,"detail":"AsyncWebSocket *","sortText":"3e2ccccciws","filterText":"iws","insertText":"iws","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":9}},"newText":"iws"}},{"label":" initWebServer()","kind":2,"detail":"void","sortText":"3ed1c28einitWebServer","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":9}},"newText":"initWebServer()"}},{"label":" initWebSocket()","kind":2,"detail":"void","sortText":"3ed1c28einitWebSocket","filterText":"initWebSocket","insertText":"initWebSocket()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":9}},"newText":"initWebSocket()"}},{"label":"•isWhitespace(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a blank character, that is, a space or a tab."},"sortText":"408c559bisWhitespace","filterText":"isWhitespace","insertText":"isWhitespace(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":9}},"newText":"isWhitespace(${1:int c})"}},{"label":"•i2cWrite(i2c_t *i2c, uint16_t address, uint8_t *buff, uint16_t size, bool sendStop, uint16_t timeOutMillis)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"409cf05ei2cWrite","filterText":"i2cWrite","insertText":"i2cWrite(${1:i2c_t *i2c}, ${2:uint16_t address}, ${3:uint8_t *buff}, ${4:uint16_t size}, ${5:bool sendStop}, ${6:uint16_t timeOutMillis})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":9}},"newText":"i2cWrite(${1:i2c_t *i2c}, ${2:uint16_t address}, ${3:uint8_t *buff}, ${4:uint16_t size}, ${5:bool sendStop}, ${6:uint16_t timeOutMillis})"}},{"label":"•ArduinoJson6173_91::IsWriteableString\u003ctypename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Strings/IsWriteableString.hpp\"`"},"sortText":"40f8d267IsWriteableString","filterText":"IsWriteableString","insertText":"ArduinoJson6173_91::IsWriteableString\u003c${1:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":9}},"newText":"ArduinoJson6173_91::IsWriteableString\u003c${1:typename}\u003e"}}]},"jsonrpc":"2.0"}Content-Length: 3741

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'iw'"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 453

{"jsonrpc":"2.0","id":168,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":9}},"message":"Use of undeclared identifier 'iw'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":168,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":16},"contentChanges":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 3561

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":16}}}Content-Length: 276

{"jsonrpc":"2.0","id":169,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":169,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":17},"contentChanges":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 3561

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":170,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":11},"end":{"line":4,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":170,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":17}}}Content-Length: 276

{"jsonrpc":"2.0","id":171,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":11},"end":{"line":4,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":171,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":172,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":9}}}
>>>
Content-Length: 40

{"id":172,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":173,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":1}}}
>>>
Content-Length: 40

{"id":173,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":174,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":3}}}
>>>
Content-Length: 40

{"id":174,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 473

{"jsonrpc":"2.0","id":175,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"message":"Use of undeclared identifier 'ws'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":175,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":176,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":6}}}
>>>
Content-Length: 40

{"id":176,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":177,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":12}}}
>>>
Content-Length: 307

{"id":177,"result":{"contents":{"kind":"markdown","value":"### constructor `BcbAws::BcbAws`  \n\n---\n```cpp\n// In BcbAws\npublic: BcbAws::BcbAws(State *istate, AsyncWebServer *iserver, AsyncWebSocket *iws)\n```"},"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":178,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":5}}}
>>>
Content-Length: 254

{"id":178,"result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include \u003cHTTPClient.h\u003e  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":6}}},"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":179,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":7}}}
>>>
Content-Length: 254

{"id":179,"result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include \u003cHTTPClient.h\u003e  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"start":{"line":2,"character":6},"end":{"line":2,"character":8}}},"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":180,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":8}}}
>>>
Content-Length: 307

{"id":180,"result":{"contents":{"kind":"markdown","value":"### constructor `BcbAws::BcbAws`  \n\n---\n```cpp\n// In BcbAws\npublic: BcbAws::BcbAws(State *istate, AsyncWebServer *iserver, AsyncWebSocket *iws)\n```"},"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 709

{"jsonrpc":"2.0","id":181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","severity":1,"code":"member_decl_does_not_match","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":181,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":182,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":7}}}
>>>
Content-Length: 254

{"id":182,"result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include \u003cHTTPClient.h\u003e  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"start":{"line":2,"character":6},"end":{"line":2,"character":8}}},"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":183,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":8}}}
>>>
Content-Length: 123

{"id":183,"result":[{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 688

{"jsonrpc":"2.0","id":184,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","severity":1,"code":"member_decl_does_not_match","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":184,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 688

{"jsonrpc":"2.0","id":185,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","severity":1,"code":"member_decl_does_not_match","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":185,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":186,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":0}}}
>>>
Content-Length: 254

{"id":186,"result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include \u003cHTTPClient.h\u003e  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":6}}},"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":187,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":3,"character":2}}}
>>>
Content-Length: 913

{"id":187,"result":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":7}},"kind":3},{"range":{"start":{"line":67,"character":4},"end":{"line":67,"character":9}},"kind":2},{"range":{"start":{"line":67,"character":18},"end":{"line":67,"character":23}},"kind":2},{"range":{"start":{"line":68,"character":19},"end":{"line":68,"character":24}},"kind":2},{"range":{"start":{"line":74,"character":4},"end":{"line":74,"character":9}},"kind":2},{"range":{"start":{"line":79,"character":30},"end":{"line":79,"character":35}},"kind":2},{"range":{"start":{"line":80,"character":43},"end":{"line":80,"character":48}},"kind":2},{"range":{"start":{"line":81,"character":4},"end":{"line":81,"character":9}},"kind":2},{"range":{"start":{"line":90,"character":4},"end":{"line":90,"character":9}},"kind":2},{"range":{"start":{"line":92,"character":4},"end":{"line":92,"character":9}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":188,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":188,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":18},"contentChanges":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":2}},"rangeLength":0,"text":"BcbAws::"}]}}
>>>
Content-Length: 3561

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":189,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":189,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":190,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":3,"character":1}}}
>>>
Content-Length: 40

{"id":190,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":18}}}Content-Length: 202

{"jsonrpc":"2.0","id":191,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":1}}}
>>>
Content-Length: 40

{"id":191,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":192,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":2}}}
>>>
Content-Length: 38

{"id":192,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 453

{"jsonrpc":"2.0","id":193,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"message":"Use of undeclared identifier 'ws'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":193,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":19},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"rangeLength":0,"text":"BcbAws::"}]}}
>>>
Content-Length: 3553

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":40,"character":2},"end":{"line":40,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"jsonrpc":"2.0","id":194,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"message":"No member named 'ws' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":194,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"jsonrpc":"2.0","id":195,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"message":"No member named 'ws' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":195,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":19}}}Content-Length: 203

{"jsonrpc":"2.0","id":196,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":19}}}
>>>
Content-Length: 40

{"id":196,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":197,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":19},"end":{"line":4,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":197,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":20},"contentChanges":[{"range":{"start":{"line":4,"character":19},"end":{"line":4,"character":19}},"rangeLength":0,"text":"\n  "}]}}
>>>
Content-Length: 3553

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":20}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":21},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":2}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 3553

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":22},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":0}},"rangeLength":0,"text":"  "}]}}
>>>
Content-Length: 3553

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":22}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":23},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":6,"character":0}},"rangeLength":3,"text":"    \n"}]}}
>>>
Content-Length: 3553

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":24},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"rangeLength":0,"text":"BcbAws::"}]}}
>>>
Content-Length: 3728

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":198,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":198,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":24}}}Content-Length: 202

{"jsonrpc":"2.0","id":199,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":1}}}
>>>
Content-Length: 40

{"id":199,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":200,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":2}}}
>>>
Content-Length: 40

{"id":200,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":201,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":2}}}
>>>
Content-Length: 40

{"id":201,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":202,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":3}}}
>>>
Content-Length: 38

{"id":202,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":203,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":203,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":25},"contentChanges":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 3728

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":204,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":204,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":205,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":205,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":25}}}Content-Length: 202

{"jsonrpc":"2.0","id":206,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":9}}}
>>>
Content-Length: 40

{"id":206,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":207,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":9}}}
>>>
Content-Length: 40

{"id":207,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":208,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":208,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":26},"contentChanges":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"rangeLength":0,"text":"s"}]}}Content-Length: 236

{"jsonrpc":"2.0","id":209,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":11},"context":{"triggerKind":1}}}
>>>
Content-Length: 1356

{"id":209,"result":{"isIncomplete":false,"items":[{"label":" state","kind":5,"detail":"State *","sortText":"3e8dbab2state","filterText":"state","insertText":"state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":11}},"newText":"state"}},{"label":" handleWebSocketMessage(void *arg, uint8_t *data, size_t len)","kind":2,"detail":"void","sortText":"80000000handleWebSocketMessage","filterText":"handleWebSocketMessage","insertText":"handleWebSocketMessage(${1:void *arg}, ${2:uint8_t *data}, ${3:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":11}},"newText":"handleWebSocketMessage(${1:void *arg}, ${2:uint8_t *data}, ${3:size_t len})"}},{"label":" initWebServer()","kind":2,"detail":"void","sortText":"80000000initWebServer","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":11}},"newText":"initWebServer()"}},{"label":" initWebSocket()","kind":2,"detail":"void","sortText":"80000000initWebSocket","filterText":"initWebSocket","insertText":"initWebSocket()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":11}},"newText":"initWebSocket()"}}]},"jsonrpc":"2.0"}Content-Length: 3922

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":11}},"severity":1,"code":"no_member","source":"clang","message":"No member named 's' in 'BcbAws'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 446

{"jsonrpc":"2.0","id":210,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":11}},"message":"No member named 's' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":210,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":27},"contentChanges":[{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 3923

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'se' in 'BcbAws'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":28},"contentChanges":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":12}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 3924

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":13}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ser' in 'BcbAws'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 448

{"jsonrpc":"2.0","id":211,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":13},"end":{"line":5,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":13}},"message":"No member named 'ser' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":211,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":29},"contentChanges":[{"range":{"start":{"line":5,"character":13},"end":{"line":5,"character":13}},"rangeLength":0,"text":"v"}]}}
>>>
Content-Length: 3925

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":14}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'serv' in 'BcbAws'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":30},"contentChanges":[{"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 3926

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":15}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'serve' in 'BcbAws'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":31},"contentChanges":[{"range":{"start":{"line":5,"character":15},"end":{"line":5,"character":15}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 4240

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":212,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":212,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":31}}}Content-Length: 276

{"jsonrpc":"2.0","id":213,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":213,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":32},"contentChanges":[{"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":16}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 4240

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":32}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":33},"contentChanges":[{"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":17}},"rangeLength":0,"text":"="}]}}
>>>
Content-Length: 4209

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":34},"contentChanges":[{"range":{"start":{"line":5,"character":18},"end":{"line":5,"character":18}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 4209

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":34}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":35},"contentChanges":[{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":19}},"rangeLength":0,"text":"i"}]}}Content-Length: 236

{"jsonrpc":"2.0","id":214,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":20},"context":{"triggerKind":1}}}
>>>
Content-Length: 38774

{"id":214,"result":{"isIncomplete":true,"items":[{"label":" istate","kind":6,"detail":"State *","sortText":"3dceb9faistate","filterText":"istate","insertText":"istate","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"istate"}},{"label":" iserver","kind":6,"detail":"AsyncWebServer *","sortText":"3de19999iserver","filterText":"iserver","insertText":"iserver","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"iserver"}},{"label":" iws","kind":6,"detail":"AsyncWebSocket *","sortText":"3e13a2a3iws","filterText":"iws","insertText":"iws","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"iws"}},{"label":" initWebServer()","kind":2,"detail":"void","sortText":"3e97ae13initWebServer","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"initWebServer()"}},{"label":" initWebSocket()","kind":2,"detail":"void","sortText":"3ee51eb8initWebSocket","filterText":"initWebSocket","insertText":"initWebSocket()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"initWebSocket()"}},{"label":" int","kind":14,"sortText":"3f000000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"int"}},{"label":" INADDR_NONE","kind":6,"detail":"const IPAddress","sortText":"3f17ae13INADDR_NONE","filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"INADDR_NONE"}},{"label":"•IPAddress","kind":7,"documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"sortText":"3f1de0ccIPAddress","filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"IPAddress"}},{"label":" IPAddress(…)","kind":4,"detail":"[5 overloads]","sortText":"3f733333IPAddress","filterText":"IPAddress","insertText":"IPAddress($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"IPAddress($0)"}},{"label":"•int8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"40161935int8_t","filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"int8_t"}},{"label":" initSDCard()","kind":3,"detail":"void","sortText":"402b59f1initSDCard","filterText":"initSDCard","insertText":"initSDCard()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"initSDCard()"}},{"label":"•i2c_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"40489899i2c_t","filterText":"i2c_t","insertText":"i2c_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"i2c_t"}},{"label":"•int32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"404bdaf3int32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"int32_t"}},{"label":"•IPv6Address","kind":7,"documentation":{"kind":"markdown","value":"From `\"IPv6Address.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"sortText":"404d2d97IPv6Address","filterText":"IPv6Address","insertText":"IPv6Address","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"IPv6Address"}},{"label":"•i2c_err_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`  \nExternal Wire.h equivalent error Codes"},"sortText":"4059ad5ci2c_err_t","filterText":"i2c_err_t","insertText":"i2c_err_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"i2c_err_t"}},{"label":"•int16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int16_t","filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"int16_t"}},{"label":"•int64_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"int64_t"}},{"label":"•int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"int_fast16_t"}},{"label":"•int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"int_fast32_t"}},{"label":"•int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"int_fast64_t"}},{"label":"•int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"int_fast8_t"}},{"label":"•int_least32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_least32_t","filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"int_least32_t"}},{"label":"•int_least64_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_least64_t","filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"int_least64_t"}},{"label":"•int_least8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68int_least8_t","filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"int_least8_t"}},{"label":"•intmax_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68intmax_t","filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"intmax_t"}},{"label":"•intptr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"sortText":"405d8e68intptr_t","filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"intptr_t"}},{"label":"•isHexadecimalDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"sortText":"405d8e68isHexadecimalDigit","filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"isHexadecimalDigit(${1:int c})"}},{"label":"•isLowerCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"sortText":"405d8e68isLowerCase","filterText":"isLowerCase","insertText":"isLowerCase(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"isLowerCase(${1:int c})"}},{"label":"•I2C_ERROR_OK","kind":20,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"405eee92I2C_ERROR_OK","filterText":"I2C_ERROR_OK","insertText":"I2C_ERROR_OK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"I2C_ERROR_OK"}},{"label":"•I2C_ERROR_DEV","kind":20,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4060f05dI2C_ERROR_DEV","filterText":"I2C_ERROR_DEV","insertText":"I2C_ERROR_DEV","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"I2C_ERROR_DEV"}},{"label":"•I2C_ERROR_BUSY","kind":20,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fI2C_ERROR_BUSY","filterText":"I2C_ERROR_BUSY","insertText":"I2C_ERROR_BUSY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"I2C_ERROR_BUSY"}},{"label":"•I2C_ERROR_MEMORY","kind":20,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fI2C_ERROR_MEMORY","filterText":"I2C_ERROR_MEMORY","insertText":"I2C_ERROR_MEMORY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"I2C_ERROR_MEMORY"}},{"label":"•InterruptArgStructure","kind":22,"documentation":{"kind":"markdown","value":"From `\"FunctionalInterrupt.h\"`"},"sortText":"4068a03fInterruptArgStructure","filterText":"InterruptArgStructure","insertText":"InterruptArgStructure","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"InterruptArgStructure"}},{"label":"•i2cAttachSCL(i2c_t *i2c, int8_t scl)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`  \nFunctions below should be used only if well understood Might be deprecated and removed in future"},"sortText":"4068a03fi2cAttachSCL","filterText":"i2cAttachSCL","insertText":"i2cAttachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"i2cAttachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})"}},{"label":"•i2cDetachSCL(i2c_t *i2c, int8_t scl)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cDetachSCL","filterText":"i2cDetachSCL","insertText":"i2cDetachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"i2cDetachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})"}},{"label":"•i2cDetachSDA(i2c_t *i2c, int8_t sda)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cDetachSDA","filterText":"i2cDetachSDA","insertText":"i2cDetachSDA(${1:i2c_t *i2c}, ${2:int8_t sda})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"i2cDetachSDA(${1:i2c_t *i2c}, ${2:int8_t sda})"}},{"label":"•i2cFlush(i2c_t *i2c)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cFlush","filterText":"i2cFlush","insertText":"i2cFlush(${1:i2c_t *i2c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"i2cFlush(${1:i2c_t *i2c})"}},{"label":"•i2cGetFrequency(i2c_t *i2c)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cGetFrequency","filterText":"i2cGetFrequency","insertText":"i2cGetFrequency(${1:i2c_t *i2c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"i2cGetFrequency(${1:i2c_t *i2c})"}},{"label":"•i2cInit(uint8_t i2c_num, int8_t sda, int8_t scl, uint32_t clk_speed)","kind":3,"detail":"i2c_t *","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cInit","filterText":"i2cInit","insertText":"i2cInit(${1:uint8_t i2c_num}, ${2:int8_t sda}, ${3:int8_t scl}, ${4:uint32_t clk_speed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"i2cInit(${1:uint8_t i2c_num}, ${2:int8_t sda}, ${3:int8_t scl}, ${4:uint32_t clk_speed})"}},{"label":"•i2cProcQueue(i2c_t *i2c, uint32_t *readCount, uint16_t timeOutMillis)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`  \nStickbreakers ISR Support"},"sortText":"4068a03fi2cProcQueue","filterText":"i2cProcQueue","insertText":"i2cProcQueue(${1:i2c_t *i2c}, ${2:uint32_t *readCount}, ${3:uint16_t timeOutMillis})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"i2cProcQueue(${1:i2c_t *i2c}, ${2:uint32_t *readCount}, ${3:uint16_t timeOutMillis})"}},{"label":"•i2cRead(i2c_t *i2c, uint16_t address, uint8_t *buff, uint16_t size, bool sendStop, uint16_t timeOutMillis, uint32_t *readCount)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cRead","filterText":"i2cRead","insertText":"i2cRead(${1:i2c_t *i2c}, ${2:uint16_t address}, ${3:uint8_t *buff}, ${4:uint16_t size}, ${5:bool sendStop}, ${6:uint16_t timeOutMillis}, ${7:uint32_t *readCount})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"i2cRead(${1:i2c_t *i2c}, ${2:uint16_t address}, ${3:uint8_t *buff}, ${4:uint16_t size}, ${5:bool sendStop}, ${6:uint16_t timeOutMillis}, ${7:uint32_t *readCount})"}},{"label":"•i2cSetFrequency(i2c_t *i2c, uint32_t clk_speed)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4068a03fi2cSetFrequency","filterText":"i2cSetFrequency","insertText":"i2cSetFrequency(${1:i2c_t *i2c}, ${2:uint32_t clk_speed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"i2cSetFrequency(${1:i2c_t *i2c}, ${2:uint32_t clk_speed})"}},{"label":" init()","kind":3,"detail":"void","sortText":"4068a03finit","filterText":"init","insertText":"init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"init()"}},{"label":" initVariant()","kind":3,"detail":"void","sortText":"4068a03finitVariant","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"initVariant()"}},{"label":"•ilogb(double)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"4071b066ilogb","filterText":"ilogb","insertText":"ilogb(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ilogb(${1:double})"}},{"label":"•ilogbf(float)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"4071b066ilogbf","filterText":"ilogbf","insertText":"ilogbf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ilogbf(${1:float})"}},{"label":"•ilogbl(long double)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"sortText":"4071b066ilogbl","filterText":"ilogbl","insertText":"ilogbl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ilogbl(${1:long double})"}},{"label":"•infinity()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`  \nNon ANSI double precision functions."},"sortText":"4071b066infinity","filterText":"infinity","insertText":"infinity()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"infinity()"}},{"label":"•ino_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"4071b066ino_t","filterText":"ino_t","insertText":"ino_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ino_t"}},{"label":"•isascii(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isascii","filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"isascii(${1:int __c})"}},{"label":"•isdigit(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isdigit","filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"isdigit(${1:int __c})"}},{"label":"•isupper(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isupper","filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"isupper(${1:int __c})"}},{"label":"•itimerspec","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"4071b066itimerspec","filterText":"itimerspec","insertText":"itimerspec","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"itimerspec"}},{"label":"•std::ilogb(long double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156ilogb","filterText":"ilogb","insertText":"std::ilogb(${1:long double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::ilogb(${1:long double __x})"}},{"label":"•std::is_bind_expression\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a function object should be treated as a subexpression when evaluating calls to function objects returned by bind(). [TR1 3.6.1]  \n@ingroup binders"},"sortText":"4078a156is_bind_expression","filterText":"is_bind_expression","insertText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_placeholder\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a placeholder in a bind() expression and, if so, which placeholder it is. [TR1 3.6.2]  \n@ingroup binders"},"sortText":"4078a156is_placeholder","filterText":"is_placeholder","insertText":"std::is_placeholder\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::is_placeholder\u003c${1:typename _Tp}\u003e"}},{"label":"•std::isgreater(double __x, double __y)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156isgreater","filterText":"isgreater","insertText":"std::isgreater(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::isgreater(${1:double __x}, ${2:double __y})"}},{"label":"•std::isless(_Tp __x, _Up __y)","kind":3,"detail":"typename __gnu_cxx::__enable_if\u003c(__is_arithmetic\u003c_Tp\u003e::__value \u0026\u0026 __is_arithmetic\u003c_Up\u003e::__value), bool\u003e::__type","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156isless","filterText":"isless","insertText":"std::isless(${1:_Tp __x}, ${2:_Up __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::isless(${1:_Tp __x}, ${2:_Up __y})"}},{"label":"•std::isnormal(double __x)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156isnormal","filterText":"isnormal","insertText":"std::isnormal(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::isnormal(${1:double __x})"}},{"label":"•i2c_dev_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"soc/i2c_struct.h\"`"},"sortText":"40791bfci2c_dev_t","filterText":"i2c_dev_t","insertText":"i2c_dev_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"i2c_dev_t"}},{"label":"•iswblank(wint_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"sortText":"40791bfciswblank","filterText":"iswblank","insertText":"iswblank(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"iswblank(${1:wint_t})"}},{"label":"•iswdigit(wint_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"sortText":"40791bfciswdigit","filterText":"iswdigit","insertText":"iswdigit(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"iswdigit(${1:wint_t})"}},{"label":"•iswspace(wint_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"sortText":"40791bfciswspace","filterText":"iswspace","insertText":"iswspace(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"iswspace(${1:wint_t})"}},{"label":"•ip_addr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \n@ingroup ipaddr A union struct for both IP version's addresses.  \nATTENTION: watch out for its size when adding IPv6 address scope!"},"sortText":"407c3a43ip_addr_t","filterText":"ip_addr_t","insertText":"ip_addr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ip_addr_t"}},{"label":" INADDR_NONE","kind":1,"sortText":"40800000INADDR_NONE","filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"INADDR_NONE"}},{"label":" IPADDR_NONE","kind":1,"sortText":"40800000IPADDR_NONE","filterText":"IPADDR_NONE","insertText":"IPADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"IPADDR_NONE"}},{"label":"•IPADDR_TYPE_V4","kind":20,"detail":"lwip_ip_addr_type","documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \nIPv4"},"sortText":"4088511fIPADDR_TYPE_V4","filterText":"IPADDR_TYPE_V4","insertText":"IPADDR_TYPE_V4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"IPADDR_TYPE_V4"}},{"label":"•IPADDR_TYPE_V6","kind":20,"detail":"lwip_ip_addr_type","documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \nIPv6"},"sortText":"4088511fIPADDR_TYPE_V6","filterText":"IPADDR_TYPE_V6","insertText":"IPADDR_TYPE_V6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"IPADDR_TYPE_V6"}},{"label":"•icmp_input(struct pbuf *p, struct netif *inp)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lwip/icmp.h\"`"},"sortText":"4088511ficmp_input","filterText":"icmp_input","insertText":"icmp_input(${1:struct pbuf *p}, ${2:struct netif *inp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"icmp_input(${1:struct pbuf *p}, ${2:struct netif *inp})"}},{"label":"•in6_addr","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/inet.h\"`"},"sortText":"4088511fin6_addr","filterText":"in6_addr","insertText":"in6_addr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"in6_addr"}},{"label":"•in_addr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"lwip/inet.h\"`"},"sortText":"4088511fin_addr_t","filterText":"in_addr_t","insertText":"in_addr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"in_addr_t"}},{"label":"•intr_handle_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_intr_alloc.h\"`"},"sortText":"4088511fintr_handle_t","filterText":"intr_handle_t","insertText":"intr_handle_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"intr_handle_t"}},{"label":"•ip4_addr2","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/ip4_addr.h\"`"},"sortText":"4088511fip4_addr2","filterText":"ip4_addr2","insertText":"ip4_addr2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ip4_addr2"}},{"label":"•ip4_input(struct pbuf *p, struct netif *inp)","kind":3,"detail":"err_t","documentation":{"kind":"markdown","value":"From `\"lwip/ip4.h\"`"},"sortText":"4088511fip4_input","filterText":"ip4_input","insertText":"ip4_input(${1:struct pbuf *p}, ${2:struct netif *inp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ip4_input(${1:struct pbuf *p}, ${2:struct netif *inp})"}},{"label":"•ip4addr_ntoa_r(const ip4_addr_t *addr, char *buf, int buflen)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"lwip/ip4_addr.h\"`"},"sortText":"4088511fip4addr_ntoa_r","filterText":"ip4addr_ntoa_r","insertText":"ip4addr_ntoa_r(${1:const ip4_addr_t *addr}, ${2:char *buf}, ${3:int buflen})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ip4addr_ntoa_r(${1:const ip4_addr_t *addr}, ${2:char *buf}, ${3:int buflen})"}},{"label":"•ip6_addr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"lwip/ip6_addr.h\"`  \nIPv6 address"},"sortText":"4088511fip6_addr_t","filterText":"ip6_addr_t","insertText":"ip6_addr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ip6_addr_t"}},{"label":"•ip6_select_source_address(struct netif *netif, const ip6_addr_t *dest)","kind":3,"detail":"const ip_addr_t *","documentation":{"kind":"markdown","value":"From `\"lwip/ip6.h\"`"},"sortText":"4088511fip6_select_source_address","filterText":"ip6_select_source_address","insertText":"ip6_select_source_address(${1:struct netif *netif}, ${2:const ip6_addr_t *dest})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ip6_select_source_address(${1:struct netif *netif}, ${2:const ip6_addr_t *dest})"}},{"label":"•ip_addr","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`"},"sortText":"4088511fip_addr","filterText":"ip_addr","insertText":"ip_addr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ip_addr"}},{"label":"•ip_globals","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/ip.h\"`  \nGlobal variables of this module, kept in a struct for efficient access using base+index."},"sortText":"4088511fip_globals","filterText":"ip_globals","insertText":"ip_globals","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ip_globals"}},{"label":"•ICMP6_DUR_PROHIBITED","kind":20,"detail":"icmp6_dur_code","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nCommunication with destination administratively prohibited"},"sortText":"40907626ICMP6_DUR_PROHIBITED","filterText":"ICMP6_DUR_PROHIBITED","insertText":"ICMP6_DUR_PROHIBITED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ICMP6_DUR_PROHIBITED"}},{"label":"•ICMP6_PP_FIELD","kind":20,"detail":"icmp6_pp_code","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nErroneous header field encountered"},"sortText":"40907626ICMP6_PP_FIELD","filterText":"ICMP6_PP_FIELD","insertText":"ICMP6_PP_FIELD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ICMP6_PP_FIELD"}},{"label":"•ICMP6_TYPE_DUR","kind":20,"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nDestination unreachable"},"sortText":"40907626ICMP6_TYPE_DUR","filterText":"ICMP6_TYPE_DUR","insertText":"ICMP6_TYPE_DUR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ICMP6_TYPE_DUR"}},{"label":"•ICMP6_TYPE_EREQ","kind":20,"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nEcho request"},"sortText":"40907626ICMP6_TYPE_EREQ","filterText":"ICMP6_TYPE_EREQ","insertText":"ICMP6_TYPE_EREQ","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ICMP6_TYPE_EREQ"}},{"label":"•ICMP6_TYPE_NA","kind":20,"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nNeighbor advertisement"},"sortText":"40907626ICMP6_TYPE_NA","filterText":"ICMP6_TYPE_NA","insertText":"ICMP6_TYPE_NA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ICMP6_TYPE_NA"}},{"label":"•ICMP6_TYPE_PE3","kind":20,"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nPrivate experimentation"},"sortText":"40907626ICMP6_TYPE_PE3","filterText":"ICMP6_TYPE_PE3","insertText":"ICMP6_TYPE_PE3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ICMP6_TYPE_PE3"}},{"label":"•icmp6_pp_code","kind":13,"documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nICMP parameter code"},"sortText":"40907626icmp6_pp_code","filterText":"icmp6_pp_code","insertText":"icmp6_pp_code","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"icmp6_pp_code"}},{"label":"•ip6_addr_packed","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/prot/ip6.h\"`"},"sortText":"40907626ip6_addr_packed","filterText":"ip6_addr_packed","insertText":"ip6_addr_packed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ip6_addr_packed"}},{"label":"•ip6_frag_hdr","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/prot/ip6.h\"`"},"sortText":"40907626ip6_frag_hdr","filterText":"ip6_frag_hdr","insertText":"ip6_frag_hdr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ip6_frag_hdr"}},{"label":"•ip_hdr","kind":22,"documentation":{"kind":"markdown","value":"From `\"lwip/prot/ip4.h\"`  \nThe IPv4 header"},"sortText":"40907626ip_hdr","filterText":"ip_hdr","insertText":"ip_hdr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"ip_hdr"}},{"label":"•std::is_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_assignable"},"sortText":"4092d0aais_assignable","filterText":"is_assignable","insertText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_convertible\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_convertible"},"sortText":"4092d0aais_convertible","filterText":"is_convertible","insertText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::is_literal_type\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_literal_type"},"sortText":"4092d0aais_literal_type","filterText":"is_literal_type","insertText":"std::is_literal_type\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::is_literal_type\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_polymorphic\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_polymorphic"},"sortText":"4092d0aais_polymorphic","filterText":"is_polymorphic","insertText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_reference\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_reference"},"sortText":"4092d0aais_reference","filterText":"is_reference","insertText":"std::is_reference\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::is_reference\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_assignable"},"sortText":"4092d0aais_trivially_assignable","filterText":"is_trivially_assignable","insertText":"std::is_trivially_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::is_trivially_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_trivially_move_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_move_assignable"},"sortText":"4092d0aais_trivially_move_assignable","filterText":"is_trivially_move_assignable","insertText":"std::is_trivially_move_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::is_trivially_move_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_move_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_move_constructible"},"sortText":"4092d0aais_trivially_move_constructible","filterText":"is_trivially_move_constructible","insertText":"std::is_trivially_move_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::is_trivially_move_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_unsigned\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_unsigned"},"sortText":"4092d0aais_unsigned","filterText":"is_unsigned","insertText":"std::is_unsigned\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::is_unsigned\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_error_code_enum\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csystem_error\u003e`  \nis_error_code_enum"},"sortText":"409f2ea4is_error_code_enum","filterText":"is_error_code_enum","insertText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e"}},{"label":"•IP_ADDRESS_LEASE_TIME","kind":20,"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nDHCP Extensions"},"sortText":"40a4b801IP_ADDRESS_LEASE_TIME","filterText":"IP_ADDRESS_LEASE_TIME","insertText":"IP_ADDRESS_LEASE_TIME","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"newText":"IP_ADDRESS_LEASE_TIME"}}]},"jsonrpc":"2.0"}Content-Length: 4108

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'i'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":36},"contentChanges":[{"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"rangeLength":0,"text":"s"}]}}Content-Length: 236

{"jsonrpc":"2.0","id":215,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":21},"context":{"triggerKind":3}}}
>>>
Content-Length: 44570

{"id":215,"result":{"isIncomplete":true,"items":[{"label":" istate","kind":6,"detail":"State *","sortText":"3dceb9faistate","filterText":"istate","insertText":"istate","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"istate"}},{"label":" iserver","kind":6,"detail":"AsyncWebServer *","sortText":"3de19999iserver","filterText":"iserver","insertText":"iserver","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"iserver"}},{"label":" initWebServer()","kind":2,"detail":"void","sortText":"3eeecccdinitWebServer","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"initWebServer()"}},{"label":" initWebSocket()","kind":2,"detail":"void","sortText":"3f3e6666initWebSocket","filterText":"initWebSocket","insertText":"initWebSocket()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"initWebSocket()"}},{"label":"•isAlphaNumeric(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nWCharacter.h prototypes"},"sortText":"405d8e68isAlphaNumeric","filterText":"isAlphaNumeric","insertText":"isAlphaNumeric(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isAlphaNumeric(${1:int c})"}},{"label":"•isGraph(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"sortText":"405d8e68isGraph","filterText":"isGraph","insertText":"isGraph(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isGraph(${1:int c})"}},{"label":"•isHexadecimalDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"sortText":"405d8e68isHexadecimalDigit","filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isHexadecimalDigit(${1:int c})"}},{"label":"•isLowerCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"sortText":"405d8e68isLowerCase","filterText":"isLowerCase","insertText":"isLowerCase(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isLowerCase(${1:int c})"}},{"label":"•isPunct(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"sortText":"405d8e68isPunct","filterText":"isPunct","insertText":"isPunct(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isPunct(${1:int c})"}},{"label":"•isUpperCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"sortText":"405d8e68isUpperCase","filterText":"isUpperCase","insertText":"isUpperCase(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isUpperCase(${1:int c})"}},{"label":" initSDCard()","kind":3,"detail":"void","sortText":"40608374initSDCard","filterText":"initSDCard","insertText":"initSDCard()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"initSDCard()"}},{"label":"•isalnum(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isalnum","filterText":"isalnum","insertText":"isalnum(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isalnum(${1:int __c})"}},{"label":"•isalpha(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isalpha","filterText":"isalpha","insertText":"isalpha(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isalpha(${1:int __c})"}},{"label":"•isascii(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isascii","filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isascii(${1:int __c})"}},{"label":"•isblank(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isblank","filterText":"isblank","insertText":"isblank(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isblank(${1:int __c})"}},{"label":"•iscntrl(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066iscntrl","filterText":"iscntrl","insertText":"iscntrl(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"iscntrl(${1:int __c})"}},{"label":"•isdigit(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isdigit","filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isdigit(${1:int __c})"}},{"label":"•isgraph(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isgraph","filterText":"isgraph","insertText":"isgraph(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isgraph(${1:int __c})"}},{"label":"•islower(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066islower","filterText":"islower","insertText":"islower(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"islower(${1:int __c})"}},{"label":"•isprint(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isprint","filterText":"isprint","insertText":"isprint(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isprint(${1:int __c})"}},{"label":"•ispunct(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066ispunct","filterText":"ispunct","insertText":"ispunct(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"ispunct(${1:int __c})"}},{"label":"•isspace(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isspace","filterText":"isspace","insertText":"isspace(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isspace(${1:int __c})"}},{"label":"•isupper(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isupper","filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isupper(${1:int __c})"}},{"label":"•isxdigit(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"sortText":"4071b066isxdigit","filterText":"isxdigit","insertText":"isxdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"isxdigit(${1:int __c})"}},{"label":"•std::is_bind_expression\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a function object should be treated as a subexpression when evaluating calls to function objects returned by bind(). [TR1 3.6.1]  \n@ingroup binders"},"sortText":"4078a156is_bind_expression","filterText":"is_bind_expression","insertText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_placeholder\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a placeholder in a bind() expression and, if so, which placeholder it is. [TR1 3.6.2]  \n@ingroup binders"},"sortText":"4078a156is_placeholder","filterText":"is_placeholder","insertText":"std::is_placeholder\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_placeholder\u003c${1:typename _Tp}\u003e"}},{"label":"•std::isfinite(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156isfinite","filterText":"isfinite","insertText":"std::isfinite($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::isfinite($0)"}},{"label":"•std::isgreater(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156isgreater","filterText":"isgreater","insertText":"std::isgreater($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::isgreater($0)"}},{"label":"•std::isgreaterequal(_Tp __x, _Up __y)","kind":3,"detail":"typename __gnu_cxx::__enable_if\u003c(__is_arithmetic\u003c_Tp\u003e::__value \u0026\u0026 __is_arithmetic\u003c_Up\u003e::__value), bool\u003e::__type","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156isgreaterequal","filterText":"isgreaterequal","insertText":"std::isgreaterequal(${1:_Tp __x}, ${2:_Up __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::isgreaterequal(${1:_Tp __x}, ${2:_Up __y})"}},{"label":"•std::isless(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156isless","filterText":"isless","insertText":"std::isless($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::isless($0)"}},{"label":"•std::islessequal(_Tp __x, _Up __y)","kind":3,"detail":"typename __gnu_cxx::__enable_if\u003c(__is_arithmetic\u003c_Tp\u003e::__value \u0026\u0026 __is_arithmetic\u003c_Up\u003e::__value), bool\u003e::__type","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156islessequal","filterText":"islessequal","insertText":"std::islessequal(${1:_Tp __x}, ${2:_Up __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::islessequal(${1:_Tp __x}, ${2:_Up __y})"}},{"label":"•std::islessgreater(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156islessgreater","filterText":"islessgreater","insertText":"std::islessgreater($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::islessgreater($0)"}},{"label":"•std::isnormal(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156isnormal","filterText":"isnormal","insertText":"std::isnormal($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::isnormal($0)"}},{"label":"•std::isunordered(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4078a156isunordered","filterText":"isunordered","insertText":"std::isunordered($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::isunordered($0)"}},{"label":"•iswalnum(wint_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"sortText":"40791bfciswalnum","filterText":"iswalnum","insertText":"iswalnum(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"iswalnum(${1:wint_t})"}},{"label":"•iswblank(wint_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"sortText":"40791bfciswblank","filterText":"iswblank","insertText":"iswblank(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"iswblank(${1:wint_t})"}},{"label":"•iswcntrl(wint_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"sortText":"40791bfciswcntrl","filterText":"iswcntrl","insertText":"iswcntrl(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"iswcntrl(${1:wint_t})"}},{"label":"•iswdigit(wint_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"sortText":"40791bfciswdigit","filterText":"iswdigit","insertText":"iswdigit(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"iswdigit(${1:wint_t})"}},{"label":"•iswspace(wint_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"sortText":"40791bfciswspace","filterText":"iswspace","insertText":"iswspace(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"iswspace(${1:wint_t})"}},{"label":"•std::is_abstract\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_abstract"},"sortText":"4092d0aais_abstract","filterText":"is_abstract","insertText":"std::is_abstract\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_abstract\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_arithmetic\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_arithmetic"},"sortText":"4092d0aais_arithmetic","filterText":"is_arithmetic","insertText":"std::is_arithmetic\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_arithmetic\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_array\u003ctypename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_array"},"sortText":"4092d0aais_array","filterText":"is_array","insertText":"std::is_array\u003c${1:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_array\u003c${1:typename}\u003e"}},{"label":"•std::is_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_assignable"},"sortText":"4092d0aais_assignable","filterText":"is_assignable","insertText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_base_of\u003ctypename, typename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_base_of"},"sortText":"4092d0aais_base_of","filterText":"is_base_of","insertText":"std::is_base_of\u003c${1:typename}, ${2:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_base_of\u003c${1:typename}, ${2:typename}\u003e"}},{"label":"•std::is_class\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_class"},"sortText":"4092d0aais_class","filterText":"is_class","insertText":"std::is_class\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_class\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_compound\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_compound"},"sortText":"4092d0aais_compound","filterText":"is_compound","insertText":"std::is_compound\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_compound\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_const\u003ctypename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_const"},"sortText":"4092d0aais_const","filterText":"is_const","insertText":"std::is_const\u003c${1:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_const\u003c${1:typename}\u003e"}},{"label":"•std::is_constructible\u003ctypename _Tp, typename _Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_constructible"},"sortText":"4092d0aais_constructible","filterText":"is_constructible","insertText":"std::is_constructible\u003c${1:typename _Tp}, ${2:typename _Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_constructible\u003c${1:typename _Tp}, ${2:typename _Args}\u003e"}},{"label":"•std::is_convertible\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_convertible"},"sortText":"4092d0aais_convertible","filterText":"is_convertible","insertText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::is_copy_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_copy_assignable"},"sortText":"4092d0aais_copy_assignable","filterText":"is_copy_assignable","insertText":"std::is_copy_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_copy_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_copy_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_copy_constructible"},"sortText":"4092d0aais_copy_constructible","filterText":"is_copy_constructible","insertText":"std::is_copy_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_copy_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_default_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_default_constructible"},"sortText":"4092d0aais_default_constructible","filterText":"is_default_constructible","insertText":"std::is_default_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_default_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_destructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_destructible"},"sortText":"4092d0aais_destructible","filterText":"is_destructible","insertText":"std::is_destructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_destructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_empty\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_empty"},"sortText":"4092d0aais_empty","filterText":"is_empty","insertText":"std::is_empty\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_empty\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_enum\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_enum"},"sortText":"4092d0aais_enum","filterText":"is_enum","insertText":"std::is_enum\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_enum\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_floating_point\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_floating_point"},"sortText":"4092d0aais_floating_point","filterText":"is_floating_point","insertText":"std::is_floating_point\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_floating_point\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_function\u003ctypename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_function"},"sortText":"4092d0aais_function","filterText":"is_function","insertText":"std::is_function\u003c${1:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_function\u003c${1:typename}\u003e"}},{"label":"•std::is_fundamental\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_fundamental"},"sortText":"4092d0aais_fundamental","filterText":"is_fundamental","insertText":"std::is_fundamental\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_fundamental\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_integral\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_integral"},"sortText":"4092d0aais_integral","filterText":"is_integral","insertText":"std::is_integral\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_integral\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_literal_type\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_literal_type"},"sortText":"4092d0aais_literal_type","filterText":"is_literal_type","insertText":"std::is_literal_type\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_literal_type\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_lvalue_reference\u003ctypename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_lvalue_reference"},"sortText":"4092d0aais_lvalue_reference","filterText":"is_lvalue_reference","insertText":"std::is_lvalue_reference\u003c${1:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_lvalue_reference\u003c${1:typename}\u003e"}},{"label":"•std::is_member_function_pointer\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_member_function_pointer"},"sortText":"4092d0aais_member_function_pointer","filterText":"is_member_function_pointer","insertText":"std::is_member_function_pointer\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_member_function_pointer\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_member_object_pointer\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_member_object_pointer"},"sortText":"4092d0aais_member_object_pointer","filterText":"is_member_object_pointer","insertText":"std::is_member_object_pointer\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_member_object_pointer\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_member_pointer\u003ctypename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_member_pointer"},"sortText":"4092d0aais_member_pointer","filterText":"is_member_pointer","insertText":"std::is_member_pointer\u003c${1:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_member_pointer\u003c${1:typename}\u003e"}},{"label":"•std::is_move_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_move_assignable"},"sortText":"4092d0aais_move_assignable","filterText":"is_move_assignable","insertText":"std::is_move_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_move_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_assignable"},"sortText":"4092d0aais_nothrow_assignable","filterText":"is_nothrow_assignable","insertText":"std::is_nothrow_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_nothrow_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_nothrow_constructible\u003ctypename _Tp, typename _Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_constructible"},"sortText":"4092d0aais_nothrow_constructible","filterText":"is_nothrow_constructible","insertText":"std::is_nothrow_constructible\u003c${1:typename _Tp}, ${2:typename _Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_nothrow_constructible\u003c${1:typename _Tp}, ${2:typename _Args}\u003e"}},{"label":"•std::is_nothrow_copy_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_copy_assignable"},"sortText":"4092d0aais_nothrow_copy_assignable","filterText":"is_nothrow_copy_assignable","insertText":"std::is_nothrow_copy_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_nothrow_copy_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_copy_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_copy_constructible"},"sortText":"4092d0aais_nothrow_copy_constructible","filterText":"is_nothrow_copy_constructible","insertText":"std::is_nothrow_copy_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_nothrow_copy_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_destructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_destructible"},"sortText":"4092d0aais_nothrow_destructible","filterText":"is_nothrow_destructible","insertText":"std::is_nothrow_destructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_nothrow_destructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_move_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_move_assignable"},"sortText":"4092d0aais_nothrow_move_assignable","filterText":"is_nothrow_move_assignable","insertText":"std::is_nothrow_move_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_nothrow_move_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_move_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_move_constructible"},"sortText":"4092d0aais_nothrow_move_constructible","filterText":"is_nothrow_move_constructible","insertText":"std::is_nothrow_move_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_nothrow_move_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_null_pointer\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_null_pointer (LWG 2247)."},"sortText":"4092d0aais_null_pointer","filterText":"is_null_pointer","insertText":"std::is_null_pointer\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_null_pointer\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_object\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_object"},"sortText":"4092d0aais_object","filterText":"is_object","insertText":"std::is_object\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_object\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_pod\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_pod Could use is_standard_layout \u0026\u0026 is_trivial instead of the builtin."},"sortText":"4092d0aais_pod","filterText":"is_pod","insertText":"std::is_pod\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_pod\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_pointer\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_pointer"},"sortText":"4092d0aais_pointer","filterText":"is_pointer","insertText":"std::is_pointer\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_pointer\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_polymorphic\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_polymorphic"},"sortText":"4092d0aais_polymorphic","filterText":"is_polymorphic","insertText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_reference\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_reference"},"sortText":"4092d0aais_reference","filterText":"is_reference","insertText":"std::is_reference\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_reference\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_rvalue_reference\u003ctypename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_rvalue_reference"},"sortText":"4092d0aais_rvalue_reference","filterText":"is_rvalue_reference","insertText":"std::is_rvalue_reference\u003c${1:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_rvalue_reference\u003c${1:typename}\u003e"}},{"label":"•std::is_same\u003ctypename, typename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_same"},"sortText":"4092d0aais_same","filterText":"is_same","insertText":"std::is_same\u003c${1:typename}, ${2:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_same\u003c${1:typename}, ${2:typename}\u003e"}},{"label":"•std::is_scalar\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_scalar"},"sortText":"4092d0aais_scalar","filterText":"is_scalar","insertText":"std::is_scalar\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_scalar\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_signed\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_signed"},"sortText":"4092d0aais_signed","filterText":"is_signed","insertText":"std::is_signed\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_signed\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_standard_layout\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_standard_layout"},"sortText":"4092d0aais_standard_layout","filterText":"is_standard_layout","insertText":"std::is_standard_layout\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_standard_layout\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivial\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivial"},"sortText":"4092d0aais_trivial","filterText":"is_trivial","insertText":"std::is_trivial\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_trivial\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_assignable"},"sortText":"4092d0aais_trivially_assignable","filterText":"is_trivially_assignable","insertText":"std::is_trivially_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_trivially_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_trivially_constructible\u003ctypename _Tp, typename _Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_constructible"},"sortText":"4092d0aais_trivially_constructible","filterText":"is_trivially_constructible","insertText":"std::is_trivially_constructible\u003c${1:typename _Tp}, ${2:typename _Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_trivially_constructible\u003c${1:typename _Tp}, ${2:typename _Args}\u003e"}},{"label":"•std::is_trivially_copy_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_copy_assignable"},"sortText":"4092d0aais_trivially_copy_assignable","filterText":"is_trivially_copy_assignable","insertText":"std::is_trivially_copy_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_trivially_copy_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_copy_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_copy_constructible"},"sortText":"4092d0aais_trivially_copy_constructible","filterText":"is_trivially_copy_constructible","insertText":"std::is_trivially_copy_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_trivially_copy_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_copyable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_copyable"},"sortText":"4092d0aais_trivially_copyable","filterText":"is_trivially_copyable","insertText":"std::is_trivially_copyable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_trivially_copyable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_default_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_default_constructible"},"sortText":"4092d0aais_trivially_default_constructible","filterText":"is_trivially_default_constructible","insertText":"std::is_trivially_default_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_trivially_default_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_destructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_destructible"},"sortText":"4092d0aais_trivially_destructible","filterText":"is_trivially_destructible","insertText":"std::is_trivially_destructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_trivially_destructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_move_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_move_assignable"},"sortText":"4092d0aais_trivially_move_assignable","filterText":"is_trivially_move_assignable","insertText":"std::is_trivially_move_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_trivially_move_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_move_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_move_constructible"},"sortText":"4092d0aais_trivially_move_constructible","filterText":"is_trivially_move_constructible","insertText":"std::is_trivially_move_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_trivially_move_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_union\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_union"},"sortText":"4092d0aais_union","filterText":"is_union","insertText":"std::is_union\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_union\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_unsigned\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_unsigned"},"sortText":"4092d0aais_unsigned","filterText":"is_unsigned","insertText":"std::is_unsigned\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_unsigned\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_void\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_void"},"sortText":"4092d0aais_void","filterText":"is_void","insertText":"std::is_void\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_void\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_volatile\u003ctypename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_volatile"},"sortText":"4092d0aais_volatile","filterText":"is_volatile","insertText":"std::is_volatile\u003c${1:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_volatile\u003c${1:typename}\u003e"}},{"label":"•std::is_error_code_enum\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csystem_error\u003e`  \nis_error_code_enum"},"sortText":"409f2ea4is_error_code_enum","filterText":"is_error_code_enum","insertText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_error_condition_enum\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csystem_error\u003e`  \nis_error_condition_enum"},"sortText":"409f2ea4is_error_condition_enum","filterText":"is_error_condition_enum","insertText":"std::is_error_condition_enum\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::is_error_condition_enum\u003c${1:typename _Tp}\u003e"}},{"label":"•std::istream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \nBase class for @c char input streams."},"sortText":"409f2ea4istream","filterText":"istream","insertText":"std::istream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"newText":"std::istream"}}]},"jsonrpc":"2.0"}Content-Length: 4109

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'is'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":37},"contentChanges":[{"range":{"start":{"line":5,"character":21},"end":{"line":5,"character":21}},"rangeLength":0,"text":"e"}]}}Content-Length: 236

{"jsonrpc":"2.0","id":216,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":22},"context":{"triggerKind":3}}}
>>>
Content-Length: 19717

{"id":216,"result":{"isIncomplete":false,"items":[{"label":" iserver","kind":6,"detail":"AsyncWebServer *","sortText":"3de19999iserver","filterText":"iserver","insertText":"iserver","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"iserver"}},{"label":" initWebServer()","kind":2,"detail":"void","sortText":"3ed1c28einitWebServer","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"initWebServer()"}},{"label":"•i2cSetFrequency(i2c_t *i2c, uint32_t clk_speed)","kind":3,"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"sortText":"4083b5bdi2cSetFrequency","filterText":"i2cSetFrequency","insertText":"i2cSetFrequency(${1:i2c_t *i2c}, ${2:uint32_t clk_speed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"i2cSetFrequency(${1:i2c_t *i2c}, ${2:uint32_t clk_speed})"}},{"label":"•IMPRESS_SERVER","kind":20,"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nRFC 1497 Vendor Extensions"},"sortText":"40894f01IMPRESS_SERVER","filterText":"IMPRESS_SERVER","insertText":"IMPRESS_SERVER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"IMPRESS_SERVER"}},{"label":"•ip4_set_default_multicast_netif(struct netif *default_multicast_netif)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lwip/ip4.h\"`"},"sortText":"40b198efip4_set_default_multicast_netif","filterText":"ip4_set_default_multicast_netif","insertText":"ip4_set_default_multicast_netif(${1:struct netif *default_multicast_netif})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"ip4_set_default_multicast_netif(${1:struct netif *default_multicast_netif})"}},{"label":"•ip6_select_source_address(struct netif *netif, const ip6_addr_t *dest)","kind":3,"detail":"const ip_addr_t *","documentation":{"kind":"markdown","value":"From `\"lwip/ip6.h\"`"},"sortText":"40b198efip6_select_source_address","filterText":"ip6_select_source_address","insertText":"ip6_select_source_address(${1:struct netif *netif}, ${2:const ip6_addr_t *dest})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"ip6_select_source_address(${1:struct netif *netif}, ${2:const ip6_addr_t *dest})"}},{"label":"•std::is_empty\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_empty"},"sortText":"40ba588fis_empty","filterText":"is_empty","insertText":"std::is_empty\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"std::is_empty\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_enum\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_enum"},"sortText":"40ba588fis_enum","filterText":"is_enum","insertText":"std::is_enum\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"std::is_enum\u003c${1:typename _Tp}\u003e"}},{"label":"•intr_matrix_set(int cpu_no, uint32_t model_num, uint32_t intr_num)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"rom/ets_sys.h\"`  \n@brief Attach an CPU interrupt to a hardware source.  \nWe have 4 steps to use an interrupt:  \n1.Attach hardware interrupt source to CPU. intr_matrix_set(0, ETS_WIFI_MAC_INTR_SOURCE, ETS_WMAC_INUM);  \n2.Set interrupt handler. xt_set_interrupt_handler(ETS_WMAC_INUM, func, NULL);  \n3.Enable interrupt for CPU. xt_ints_on(1 \u003c\u003c ETS_WMAC_INUM);  \n4.Enable interrupt in the module.  \n@param int cpu_no : The CPU which the interrupt number belongs.  \n@param uint32_t model_num : The interrupt hardware source number, please see the interrupt hardware source table.  \n@param uint32_t intr_num : The interrupt number CPU, please see the interrupt cpu using table.  \n@return None"},"sortText":"40bec6d9intr_matrix_set","filterText":"intr_matrix_set","insertText":"intr_matrix_set(${1:int cpu_no}, ${2:uint32_t model_num}, ${3:uint32_t intr_num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"intr_matrix_set(${1:int cpu_no}, ${2:uint32_t model_num}, ${3:uint32_t intr_num})"}},{"label":"•std::is_error_code_enum\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csystem_error\u003e`  \nis_error_code_enum"},"sortText":"40c4a6ddis_error_code_enum","filterText":"is_error_code_enum","insertText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_error_condition_enum\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csystem_error\u003e`  \nis_error_condition_enum"},"sortText":"40c4a6ddis_error_condition_enum","filterText":"is_error_condition_enum","insertText":"std::is_error_condition_enum\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"std::is_error_condition_enum\u003c${1:typename _Tp}\u003e"}},{"label":"•ArduinoJson6173_91::is_enum\u003ctypename T\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Polyfills/type_traits/is_enum.hpp\"`"},"sortText":"40eb8170is_enum","filterText":"is_enum","insertText":"ArduinoJson6173_91::is_enum\u003c${1:typename T}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"ArduinoJson6173_91::is_enum\u003c${1:typename T}\u003e"}},{"label":"•DEFAULT_IRC_SERVER","kind":20,"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nApplication and Service Parameters"},"sortText":"4124b800DEFAULT_IRC_SERVER","filterText":"DEFAULT_IRC_SERVER","insertText":"DEFAULT_IRC_SERVER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"DEFAULT_IRC_SERVER"}},{"label":"•NETWORK_INFORMATION_SERVERS","kind":20,"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nApplication and Service Parameters"},"sortText":"4124b800NETWORK_INFORMATION_SERVERS","filterText":"NETWORK_INFORMATION_SERVERS","insertText":"NETWORK_INFORMATION_SERVERS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"NETWORK_INFORMATION_SERVERS"}},{"label":"•NETWORK_INFORMATION_SERVICE_PLUS_SERVERS","kind":20,"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nApplication and Service Parameters"},"sortText":"4124b800NETWORK_INFORMATION_SERVICE_PLUS_SERVERS","filterText":"NETWORK_INFORMATION_SERVICE_PLUS_SERVERS","insertText":"NETWORK_INFORMATION_SERVICE_PLUS_SERVERS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"NETWORK_INFORMATION_SERVICE_PLUS_SERVERS"}},{"label":"•esp_intr_set_in_iram(intr_handle_t handle, bool is_in_iram)","kind":3,"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"esp_intr_alloc.h\"`  \n@brief Set the \"in IRAM\" status of the handler.  \n@note Does not work on shared interrupts.  \n@param handle The handle, as obtained by esp_intr_alloc or esp_intr_alloc_intrstatus  \n@param is_in_iram Whether the handler associated with this handle resides in IRAM.  \nHandlers residing in IRAM can be called when cache is disabled.  \n@return ESP_ERR_INVALID_ARG if the combination of arguments is invalid.  \nESP_OK otherwise"},"sortText":"413198efesp_intr_set_in_iram","filterText":"esp_intr_set_in_iram","insertText":"esp_intr_set_in_iram(${1:intr_handle_t handle}, ${2:bool is_in_iram})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"esp_intr_set_in_iram(${1:intr_handle_t handle}, ${2:bool is_in_iram})"}},{"label":"•Xthal_icache_setwidth","kind":6,"detail":"const unsigned char","documentation":{"kind":"markdown","value":"From `\"xtensa/hal.h\"`  \nnumber of cache sets in log2(lines per way)"},"sortText":"41386273Xthal_icache_setwidth","filterText":"Xthal_icache_setwidth","insertText":"Xthal_icache_setwidth","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"Xthal_icache_setwidth"}},{"label":"•xthal_icache_set_ways(unsigned int ways)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"xtensa/hal.h\"`  \nset number of icache ways enabled"},"sortText":"41386273xthal_icache_set_ways","filterText":"xthal_icache_set_ways","insertText":"xthal_icache_set_ways(${1:unsigned int ways})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"xthal_icache_set_ways(${1:unsigned int ways})"}},{"label":"•esp_image_segment_header_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_image_format.h\"`  \nHeader of binary image segment"},"sortText":"414f7afeesp_image_segment_header_t","filterText":"esp_image_segment_header_t","insertText":"esp_image_segment_header_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"esp_image_segment_header_t"}},{"label":"•esp_crosscore_int_send_freq_switch(int core_id)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"esp_crosscore_int.h\"`  \nSend an interrupt to a CPU indicating it should update its CCOMPARE1 value due to a frequency switch.  \nThis is used internally when dynamic frequency switching is enabled, and should not be called from application code.  \n@param core_id Core that should update its CCOMPARE1 value"},"sortText":"41543ef9esp_crosscore_int_send_freq_switch","filterText":"esp_crosscore_int_send_freq_switch","insertText":"esp_crosscore_int_send_freq_switch(${1:int core_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"esp_crosscore_int_send_freq_switch(${1:int core_id})"}},{"label":"•esp_crosscore_int_send_yield(int core_id)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"esp_crosscore_int.h\"`  \nSend an interrupt to a CPU indicating it should yield its currently running task in favour of a higher-priority task that presumably just woke up.  \nThis is used internally by FreeRTOS in multicore mode and should not be called by the user.  \n@param core_id Core that should do the yielding"},"sortText":"41543ef9esp_crosscore_int_send_yield","filterText":"esp_crosscore_int_send_yield","insertText":"esp_crosscore_int_send_yield(${1:int core_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"esp_crosscore_int_send_yield(${1:int core_id})"}},{"label":"•gpio_install_isr_service(int intr_alloc_flags)","kind":3,"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"driver/gpio.h\"`  \n@brief Install the driver's GPIO ISR handler service, which allows per-pin GPIO interrupt handlers.  \nThis function is incompatible with gpio_isr_register() - if that function is used, a single global ISR is registered for all GPIO interrupts. If this function is used, the ISR service provides a global GPIO ISR and individual pin handlers are registered via the gpio_isr_handler_add() function.  \n@param intr_alloc_flags Flags used to allocate the interrupt. One or multiple (ORred) ESP_INTR_FLAG\\_\\* values. See esp_intr_alloc.h for more info.  \n@return  \n\\- ESP_OK Success  \n\\- ESP_ERR_NO_MEM No memory to install this service  \n\\- ESP_ERR_INVALID_STATE ISR service already installed.  \n\\- ESP_ERR_NOT_FOUND No free interrupt found with the specified flags  \n\\- ESP_ERR_INVALID_ARG GPIO error"},"sortText":"41543ef9gpio_install_isr_service","filterText":"gpio_install_isr_service","insertText":"gpio_install_isr_service(${1:int intr_alloc_flags})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"gpio_install_isr_service(${1:int intr_alloc_flags})"}},{"label":"•gpio_uninstall_isr_service()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"driver/gpio.h\"`  \n@brief Uninstall the driver's GPIO ISR service, freeing related resources."},"sortText":"41543ef9gpio_uninstall_isr_service","filterText":"gpio_uninstall_isr_service","insertText":"gpio_uninstall_isr_service()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"gpio_uninstall_isr_service()"}},{"label":"•WIFI_IOCTL_SET_STA_HT2040_COEX","kind":20,"detail":"wifi_ioctl_cmd_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nSet the configuration of STA's HT2040 coexist management"},"sortText":"415ae0beWIFI_IOCTL_SET_STA_HT2040_COEX","filterText":"WIFI_IOCTL_SET_STA_HT2040_COEX","insertText":"WIFI_IOCTL_SET_STA_HT2040_COEX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"WIFI_IOCTL_SET_STA_HT2040_COEX"}},{"label":"•esp_wps_is_selected_pbc_registrar_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_crypto_types.h\"`  \n@brief Check whether WPS IE indicates active PBC  \n@msg: WPS IE contents from Beacon or Probe Response frame Returns: 1 if PBC Registrar is active, 0 if not"},"sortText":"415ae0beesp_wps_is_selected_pbc_registrar_t","filterText":"esp_wps_is_selected_pbc_registrar_t","insertText":"esp_wps_is_selected_pbc_registrar_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"esp_wps_is_selected_pbc_registrar_t"}},{"label":"•esp_wps_is_selected_pin_registrar_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_wifi_crypto_types.h\"`  \n@brief Check whether WPS IE indicates active PIN  \n@msg: WPS IE contents from Beacon or Probe Response frame Returns: 1 if PIN Registrar is active, 0 if not"},"sortText":"415ae0beesp_wps_is_selected_pin_registrar_t","filterText":"esp_wps_is_selected_pin_registrar_t","insertText":"esp_wps_is_selected_pin_registrar_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"esp_wps_is_selected_pin_registrar_t"}},{"label":"•NETWORK_INFORMATION_SERVICE_DOMAIN","kind":20,"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nApplication and Service Parameters"},"sortText":"416dd000NETWORK_INFORMATION_SERVICE_DOMAIN","filterText":"NETWORK_INFORMATION_SERVICE_DOMAIN","insertText":"NETWORK_INFORMATION_SERVICE_DOMAIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"NETWORK_INFORMATION_SERVICE_DOMAIN"}},{"label":"•NETWORK_INFORMATION_SERVICE_PLUS_DOMAIN","kind":20,"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nApplication and Service Parameters"},"sortText":"416dd000NETWORK_INFORMATION_SERVICE_PLUS_DOMAIN","filterText":"NETWORK_INFORMATION_SERVICE_PLUS_DOMAIN","insertText":"NETWORK_INFORMATION_SERVICE_PLUS_DOMAIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"NETWORK_INFORMATION_SERVICE_PLUS_DOMAIN"}},{"label":"•mdns_service_txt_item_set(const char *service_type, const char *proto, const char *key, const char *value)","kind":3,"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"mdns.h\"`  \n@brief Set/Add TXT item for service TXT record  \n@param service_type service type (\\_http, \\_ftp, etc)  \n@param proto service protocol (\\_tcp, \\_udp)  \n@param key the key that you want to add/update  \n@param value the new value of the key  \n@return  \n\\- ESP_OK success  \n\\- ESP_ERR_INVALID_ARG Parameter error  \n\\- ESP_ERR_NOT_FOUND Service not found  \n\\- ESP_ERR_NO_MEM memory error"},"sortText":"41ac2d33mdns_service_txt_item_set","filterText":"mdns_service_txt_item_set","insertText":"mdns_service_txt_item_set(${1:const char *service_type}, ${2:const char *proto}, ${3:const char *key}, ${4:const char *value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"mdns_service_txt_item_set(${1:const char *service_type}, ${2:const char *proto}, ${3:const char *key}, ${4:const char *value})"}},{"label":"•std::__is_empty_non_tuple\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctuple\u003e`"},"sortText":"42e1e072__is_empty_non_tuple","filterText":"__is_empty_non_tuple","insertText":"std::__is_empty_non_tuple\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"std::__is_empty_non_tuple\u003c${1:typename _Tp}\u003e"}},{"label":"•std::_Ios_Seekdir","kind":13,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`"},"sortText":"42f0df24_Ios_Seekdir","filterText":"_Ios_Seekdir","insertText":"std::_Ios_Seekdir","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"std::_Ios_Seekdir"}},{"label":"•std::_S_ios_seekdir_end","kind":20,"detail":"std::_Ios_Seekdir","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`"},"sortText":"431afea1_S_ios_seekdir_end","filterText":"_S_ios_seekdir_end","insertText":"std::_S_ios_seekdir_end","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"std::_S_ios_seekdir_end"}},{"label":"•NETBIOS_OVER_TCP_IP_DATAGRAM_DISTRIBUTION_SERVER","kind":20,"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nApplication and Service Parameters"},"sortText":"80000000NETBIOS_OVER_TCP_IP_DATAGRAM_DISTRIBUTION_SERVER","filterText":"NETBIOS_OVER_TCP_IP_DATAGRAM_DISTRIBUTION_SERVER","insertText":"NETBIOS_OVER_TCP_IP_DATAGRAM_DISTRIBUTION_SERVER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"NETBIOS_OVER_TCP_IP_DATAGRAM_DISTRIBUTION_SERVER"}},{"label":"•WIFI_AUTH_WPA2_ENTERPRISE","kind":20,"detail":"wifi_auth_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nauthenticate mode : WPA2_ENTERPRISE"},"sortText":"80000000WIFI_AUTH_WPA2_ENTERPRISE","filterText":"WIFI_AUTH_WPA2_ENTERPRISE","insertText":"WIFI_AUTH_WPA2_ENTERPRISE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"newText":"WIFI_AUTH_WPA2_ENTERPRISE"}}]},"jsonrpc":"2.0"}Content-Length: 4110

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ise'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":38},"contentChanges":[{"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":22}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 4111

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'iser'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 459

{"jsonrpc":"2.0","id":217,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":23},"end":{"line":5,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":23}},"message":"Use of undeclared identifier 'iser'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":217,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":39},"contentChanges":[{"range":{"start":{"line":5,"character":23},"end":{"line":5,"character":23}},"rangeLength":0,"text":"v"}]}}
>>>
Content-Length: 4112

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'iserv'"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":40},"contentChanges":[{"range":{"start":{"line":5,"character":24},"end":{"line":5,"character":24}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 4742

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":25}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'iserve'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:20: error: use of undeclared identifier 'iserve'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":41},"contentChanges":[{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 4240

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":26},"end":{"line":5,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":218,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":41}}}Content-Length: 276

{"jsonrpc":"2.0","id":219,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":26},"end":{"line":5,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":219,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":42},"contentChanges":[{"range":{"start":{"line":5,"character":26},"end":{"line":5,"character":26}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 4042

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":220,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":27},"end":{"line":5,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":220,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":221,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":27},"end":{"line":5,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":221,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":42}}}Content-Length: 203

{"jsonrpc":"2.0","id":222,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":2,"character":50}}}
>>>
Content-Length: 278

{"id":222,"result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}}},"jsonrpc":"2.0"}
<<<
Content-Length: 510

{"jsonrpc":"2.0","id":223,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","severity":3}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":223,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":224,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":6,"character":1},"end":{"line":6,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":224,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":225,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":18}}}
>>>
Content-Length: 215

{"id":225,"result":[{"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":21}},"kind":1},{"range":{"start":{"line":16,"character":18},"end":{"line":16,"character":24}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":226,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":18},"end":{"line":16,"character":18}},"context":{"diagnostics":[]}}}Content-Length: 204

{"jsonrpc":"2.0","id":227,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":19,"character":27}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":227}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":225}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":14},"contentChanges":[{"range":{"start":{"line":16,"character":18},"end":{"line":16,"character":18}},"rangeLength":0,"text":"&"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":226}}Content-Length: 278

{"jsonrpc":"2.0","id":228,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":19},"end":{"line":16,"character":19}},"context":{"diagnostics":[]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":14}}}Content-Length: 216

{"jsonrpc":"2.0","id":229,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":20}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":229}}Content-Length: 216

{"jsonrpc":"2.0","id":230,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":26}}}Content-Length: 278

{"jsonrpc":"2.0","id":231,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":228}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":230}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":15},"contentChanges":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"rangeLength":0,"text":"&"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":231}}Content-Length: 278

{"jsonrpc":"2.0","id":232,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":27},"end":{"line":16,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":226,"result":[],"jsonrpc":"2.0"}Content-Length: 40

{"id":227,"result":null,"jsonrpc":"2.0"}Content-Length: 38

{"id":228,"result":[],"jsonrpc":"2.0"}Content-Length: 215

{"id":229,"result":[{"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":21}},"kind":1},{"range":{"start":{"line":16,"character":19},"end":{"line":16,"character":25}},"kind":1}],"jsonrpc":"2.0"}Content-Length: 480

{"id":230,"result":[{"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":17}},"kind":1},{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":28}},"kind":1},{"range":{"start":{"line":98,"character":4},"end":{"line":98,"character":6}},"kind":1},{"range":{"start":{"line":101,"character":4},"end":{"line":101,"character":6}},"kind":1},{"range":{"start":{"line":104,"character":4},"end":{"line":104,"character":6}},"kind":1}],"jsonrpc":"2.0"}Content-Length: 38

{"id":231,"result":[],"jsonrpc":"2.0"}Content-Length: 1180

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":10}},"severity":1,"code":"ovl_no_viable_function_in_init","source":"clang","message":"No matching constructor for initialization of 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 3 were provided"}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":232,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":15}}}
>>>
Content-Length: 1180

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":10}},"severity":1,"code":"ovl_no_viable_function_in_init","source":"clang","message":"No matching constructor for initialization of 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 3 were provided"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":233,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":5,"character":16}}}
>>>
Content-Length: 40

{"id":233,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":234,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":27},"end":{"line":16,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":234,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":235,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":4,"character":16}}}
>>>
Content-Length: 40

{"id":235,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":236,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":16,"character":8}}}
>>>
Content-Length: 306

{"id":236,"result":{"contents":{"kind":"markdown","value":"### variable `aws`  \n\n---\nType: `class BcbAws`  \n\n---\n```cpp\nBcbAws aws = \u003crecovery - expr\u003e(\u0026state, \u0026server, \u0026ws)\n```"},"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 866

{"jsonrpc":"2.0","id":237,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":10}},"message":"No matching constructor for initialization of 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 3 were provided","severity":1,"code":"ovl_no_viable_function_in_init","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":237,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":238,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":29,"character":23}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":238}}Content-Length: 204

{"jsonrpc":"2.0","id":239,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":29,"character":21}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":239}}
>>>
Content-Length: 272

{"id":238,"result":{"contents":{"kind":"markdown","value":"### variable `timeinfo`  \n\n---\nType: `struct tm`  \n\n---\n```cpp\n// In printLocalTime\nstruct tm timeinfo\n```"},"range":{"start":{"line":39,"character":21},"end":{"line":39,"character":29}}},"jsonrpc":"2.0"}Content-Length: 272

{"id":239,"result":{"contents":{"kind":"markdown","value":"### variable `timeinfo`  \n\n---\nType: `struct tm`  \n\n---\n```cpp\n// In printLocalTime\nstruct tm timeinfo\n```"},"range":{"start":{"line":39,"character":21},"end":{"line":39,"character":29}}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":240,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":2}}}
>>>
Content-Length: 40

{"id":240,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 481

{"jsonrpc":"2.0","id":241,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"message":"Use of undeclared identifier 'server'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":241,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":242,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":5}}}
>>>
Content-Length: 38

{"id":242,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":243,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":243,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":43},"contentChanges":[{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":44},"contentChanges":[{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":4}},"rangeLength":0,"text":"-"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":45},"contentChanges":[{"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":5}},"rangeLength":0,"text":">"}]}}Content-Length: 259

{"jsonrpc":"2.0","id":244,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":6},"context":{"triggerKind":2,"triggerCharacter":">"}}}
>>>
Content-Length: 69

{"id":244,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":245,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":41,"character":6},"end":{"line":41,"character":6}},"context":{"diagnostics":[]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":45}}}Content-Length: 203

{"jsonrpc":"2.0","id":246,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":9}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":246}}Content-Length: 203

{"jsonrpc":"2.0","id":247,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":8}}}Content-Length: 215

{"jsonrpc":"2.0","id":248,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":9}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":244}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":247}}Content-Length: 276

{"jsonrpc":"2.0","id":249,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":9},"end":{"line":42,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":245}}
>>>
Content-Length: 38

{"id":245,"result":[],"jsonrpc":"2.0"}Content-Length: 40

{"id":246,"result":null,"jsonrpc":"2.0"}Content-Length: 40

{"id":247,"result":null,"jsonrpc":"2.0"}Content-Length: 38

{"id":248,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":249,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":46},"contentChanges":[{"range":{"start":{"line":42,"character":8},"end":{"line":42,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":248}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":249}}
>>>
Content-Length: 4042

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 461

{"jsonrpc":"2.0","id":250,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":8},"end":{"line":42,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"message":"Use of undeclared identifier 'server'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":250,"result":[],"jsonrpc":"2.0"}Content-Length: 3856

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":20},"end":{"line":42,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":251,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":8},"end":{"line":42,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":251,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":46}}}Content-Length: 276

{"jsonrpc":"2.0","id":252,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":8},"end":{"line":42,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":252,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":47},"contentChanges":[{"range":{"start":{"line":42,"character":8},"end":{"line":42,"character":8}},"rangeLength":0,"text":"-"}]}}
>>>
Content-Length: 4042

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":253,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":9},"end":{"line":42,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":253,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":47}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":48},"contentChanges":[{"range":{"start":{"line":42,"character":9},"end":{"line":42,"character":9}},"rangeLength":0,"text":">"}]}}Content-Length: 260

{"jsonrpc":"2.0","id":254,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":10},"context":{"triggerKind":2,"triggerCharacter":">"}}}
>>>
Content-Length: 69

{"id":254,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 4042

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":255,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":255,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":48}}}Content-Length: 204

{"jsonrpc":"2.0","id":256,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":21}}}
>>>
Content-Length: 40

{"id":256,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":257,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":22}}}
>>>
Content-Length: 40

{"id":257,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 481

{"jsonrpc":"2.0","id":258,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":24}},"message":"Use of undeclared identifier 'ws'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":258,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":259,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":21}}}
>>>
Content-Length: 40

{"id":259,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":260,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":22}}}
>>>
Content-Length: 38

{"id":260,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 461

{"jsonrpc":"2.0","id":261,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":24}},"message":"Use of undeclared identifier 'ws'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":261,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":49},"contentChanges":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":22}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 4042

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 461

{"jsonrpc":"2.0","id":262,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"message":"Use of undeclared identifier 'ws'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":262,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":49}}}Content-Length: 461

{"jsonrpc":"2.0","id":263,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"message":"Use of undeclared identifier 'ws'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":263,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":264,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":25},"end":{"line":42,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":264,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":265,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":47,"character":32}}}
>>>
Content-Length: 40

{"id":265,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":266,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":50,"character":8}}}
>>>
Content-Length: 40

{"id":266,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":267,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":49,"character":9}}}
>>>
Content-Length: 40

{"id":267,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":268,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":49,"character":9}}}
>>>
Content-Length: 40

{"id":268,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":269,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":49,"character":9}}}
>>>
Content-Length: 38

{"id":269,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":270,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":49,"character":9},"end":{"line":49,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":270,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":50},"contentChanges":[{"range":{"start":{"line":49,"character":8},"end":{"line":49,"character":9}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 4045

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'serveron'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":51},"contentChanges":[{"range":{"start":{"line":49,"character":8},"end":{"line":49,"character":8}},"rangeLength":0,"text":"-"}]}}
>>>
Content-Length: 4225

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":49,"character":9},"end":{"line":49,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'on'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 458

{"jsonrpc":"2.0","id":271,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":49,"character":9},"end":{"line":49,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":49,"character":9},"end":{"line":49,"character":11}},"message":"Use of undeclared identifier 'on'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":271,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":52},"contentChanges":[{"range":{"start":{"line":49,"character":9},"end":{"line":49,"character":9}},"rangeLength":0,"text":">"}]}}Content-Length: 260

{"jsonrpc":"2.0","id":272,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":49,"character":10},"context":{"triggerKind":2,"triggerCharacter":">"}}}
>>>
Content-Length: 69

{"id":272,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 4042

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":273,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":49,"character":10},"end":{"line":49,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":273,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":274,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":49,"character":10},"end":{"line":49,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":274,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":275,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":49,"character":10},"end":{"line":49,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":275,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":52}}}Content-Length: 204

{"jsonrpc":"2.0","id":276,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":50,"character":16}}}
>>>
Content-Length: 40

{"id":276,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":277,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":53,"character":9}}}
>>>
Content-Length: 40

{"id":277,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":278,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":53,"character":9}}}
>>>
Content-Length: 38

{"id":278,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":279,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":279,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":53},"contentChanges":[{"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":9}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 4045

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'serveron'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":54},"contentChanges":[{"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":8}},"rangeLength":0,"text":"-"}]}}
>>>
Content-Length: 4225

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'on'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 458

{"jsonrpc":"2.0","id":280,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":11}},"message":"Use of undeclared identifier 'on'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":280,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":55},"contentChanges":[{"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":9}},"rangeLength":0,"text":">"}]}}Content-Length: 260

{"jsonrpc":"2.0","id":281,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":53,"character":10},"context":{"triggerKind":2,"triggerCharacter":">"}}}
>>>
Content-Length: 69

{"id":281,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 4042

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":282,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":53,"character":10},"end":{"line":53,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":282,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":283,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":53,"character":10},"end":{"line":53,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":283,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":55}}}Content-Length: 204

{"jsonrpc":"2.0","id":284,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":47,"character":21}}}
>>>
Content-Length: 40

{"id":284,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":285,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":57,"character":8}}}
>>>
Content-Length: 40

{"id":285,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":286,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":57,"character":8}}}
>>>
Content-Length: 40

{"id":286,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":287,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":57,"character":9}}}
>>>
Content-Length: 38

{"id":287,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":288,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":57,"character":9},"end":{"line":57,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":288,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":56},"contentChanges":[{"range":{"start":{"line":57,"character":8},"end":{"line":57,"character":9}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 4045

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'serveron'"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 464

{"jsonrpc":"2.0","id":289,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":57,"character":8},"end":{"line":57,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":10}},"message":"Use of undeclared identifier 'serveron'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":289,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":57},"contentChanges":[{"range":{"start":{"line":57,"character":8},"end":{"line":57,"character":8}},"rangeLength":0,"text":"-"}]}}
>>>
Content-Length: 4225

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":57,"character":9},"end":{"line":57,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'on'"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 458

{"jsonrpc":"2.0","id":290,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":57,"character":9},"end":{"line":57,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":57,"character":9},"end":{"line":57,"character":11}},"message":"Use of undeclared identifier 'on'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":290,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":58},"contentChanges":[{"range":{"start":{"line":57,"character":9},"end":{"line":57,"character":9}},"rangeLength":0,"text":">"}]}}Content-Length: 260

{"jsonrpc":"2.0","id":291,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":57,"character":10},"context":{"triggerKind":2,"triggerCharacter":">"}}}
>>>
Content-Length: 69

{"id":291,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 4042

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":292,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":57,"character":10},"end":{"line":57,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":292,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":58}}}Content-Length: 203

{"jsonrpc":"2.0","id":293,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":61,"character":8}}}
>>>
Content-Length: 40

{"id":293,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":294,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":61,"character":9}}}
>>>
Content-Length: 38

{"id":294,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":295,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":295,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":59},"contentChanges":[{"range":{"start":{"line":61,"character":8},"end":{"line":61,"character":9}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 4048

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'serverbegin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 467

{"jsonrpc":"2.0","id":296,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":61,"character":8},"end":{"line":61,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":13}},"message":"Use of undeclared identifier 'serverbegin'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":296,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 467

{"jsonrpc":"2.0","id":297,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":61,"character":8},"end":{"line":61,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":13}},"message":"Use of undeclared identifier 'serverbegin'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":297,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":59}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":60},"contentChanges":[{"range":{"start":{"line":61,"character":8},"end":{"line":61,"character":8}},"rangeLength":0,"text":"-"}]}}
>>>
Content-Length: 4228

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'begin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 461

{"jsonrpc":"2.0","id":298,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":14}},"message":"Use of undeclared identifier 'begin'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":298,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 461

{"jsonrpc":"2.0","id":299,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":14}},"message":"Use of undeclared identifier 'begin'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":299,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":60}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":61},"contentChanges":[{"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":9}},"rangeLength":0,"text":">"}]}}Content-Length: 260

{"jsonrpc":"2.0","id":300,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":61,"character":10},"context":{"triggerKind":2,"triggerCharacter":">"}}}
>>>
Content-Length: 69

{"id":300,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 4042

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":301,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":61,"character":10},"end":{"line":61,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":301,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":302,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":61,"character":10},"end":{"line":61,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":302,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":61}}}Content-Length: 204

{"jsonrpc":"2.0","id":303,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":61,"character":15}}}
>>>
Content-Length: 40

{"id":303,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":304,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":61,"character":15}}}
>>>
Content-Length: 40

{"id":304,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":305,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":60,"character":17}}}
>>>
Content-Length: 40

{"id":305,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":306,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":47,"character":25}}}
>>>
Content-Length: 40

{"id":306,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":307,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":50,"character":30}}}
>>>
Content-Length: 40

{"id":307,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":308,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":50,"character":30}}}
>>>
Content-Length: 40

{"id":308,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":309,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":54,"character":25}}}
>>>
Content-Length: 40

{"id":309,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":310,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":53,"character":36}}}
>>>
Content-Length: 40

{"id":310,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":310}}Content-Length: 202

{"jsonrpc":"2.0","id":311,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":9,"character":6}}}
>>>
Content-Length: 40

{"id":311,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":312,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":9,"character":5}}}
>>>
Content-Length: 40

{"id":312,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":313,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":9,"character":5}}}
>>>
Content-Length: 40

{"id":313,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":314,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":9,"character":5}}}
>>>
Content-Length: 38

{"id":314,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":314}}Content-Length: 202

{"jsonrpc":"2.0","id":315,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":9,"character":6}}}
>>>
Content-Length: 40

{"id":315,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":316,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":9,"character":5},"end":{"line":10,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":316,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":317,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":9,"character":6}}}
>>>
Content-Length: 40

{"id":317,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":318,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":9,"character":6}}}
>>>
Content-Length: 40

{"id":318,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":319,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":9,"character":5}}}
>>>
Content-Length: 40

{"id":319,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":320,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":9,"character":5}}}
>>>
Content-Length: 40

{"id":320,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":321,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":321,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":322,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":12,"character":4}}}
>>>
Content-Length: 40

{"id":322,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":62},"contentChanges":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":63},"contentChanges":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},"rangeLength":0,"text":"-"}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":64},"contentChanges":[{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":5}},"rangeLength":0,"text":">"}]}}Content-Length: 258

{"jsonrpc":"2.0","id":323,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":9,"character":6},"context":{"triggerKind":2,"triggerCharacter":">"}}}
>>>
Content-Length: 69

{"id":323,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":324,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":6}},"context":{"diagnostics":[]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":64}}}
>>>
Content-Length: 38

{"id":324,"result":[],"jsonrpc":"2.0"}Content-Length: 4042

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":325,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":325,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":326,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":12,"character":58}}}
>>>
Content-Length: 276

{"id":326,"result":{"contents":{"kind":"markdown","value":"### param `data`  \n\n---\nType: `uint8_t *`  \n\n---\n```cpp\n// In BcbAws::handleWebSocketMessage\nuint8_t *data\n```"},"range":{"start":{"line":12,"character":56},"end":{"line":12,"character":60}}},"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":326}}Content-Length: 203

{"jsonrpc":"2.0","id":327,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":10}}}
>>>
Content-Length: 40

{"id":327,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 467

{"jsonrpc":"2.0","id":328,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"message":"No member named 'ws' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 383

{"id":328,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","selection":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":329,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":3,"character":10}}}
>>>
Content-Length: 257

{"id":329,"result":{"contents":{"kind":"markdown","value":"### field `state`  \n\n---\nType: `State *`  \n\n---\n```cpp\n// In BcbAws\nprivate: State *state\n```"},"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":330,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":9}}}
>>>
Content-Length: 40

{"id":330,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":331,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":7}}}
>>>
Content-Length: 40

{"id":331,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 568

{"jsonrpc":"2.0","id":332,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","severity":1,"code":"no_member_suggest","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 190

{"id":332,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":333,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":20}}}
>>>
Content-Length: 278

{"id":333,"result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":334,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":8,"character":23}}}
>>>
Content-Length: 293

{"id":334,"result":{"contents":{"kind":"markdown","value":"### instance-method `BcbAws::notifyClients`  \n\n---\n→ `void`  \n\n---\n```cpp\n// In BcbAws\npublic: void BcbAws::notifyClients()\n```"},"range":{"start":{"line":8,"character":13},"end":{"line":8,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":335,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":14}}}
>>>
Content-Length: 40

{"id":335,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":336,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":14}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":335}}Content-Length: 278

{"jsonrpc":"2.0","id":337,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 204

{"jsonrpc":"2.0","id":338,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":14}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":338}}Content-Length: 204

{"jsonrpc":"2.0","id":339,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":40,"character":12}}}
>>>
Content-Length: 38

{"id":336,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":337,"result":[],"jsonrpc":"2.0"}Content-Length: 40

{"id":338,"result":null,"jsonrpc":"2.0"}Content-Length: 258

{"id":339,"result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include \u003cHTTPClient.h\u003e  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"start":{"line":40,"character":11},"end":{"line":40,"character":13}}},"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":340,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":40,"character":13}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":339}}
>>>
Content-Length: 126

{"id":340,"result":[{"range":{"start":{"line":40,"character":13},"end":{"line":40,"character":26}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":341,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":40,"character":13},"end":{"line":40,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 382

{"id":341,"result":[{"title":"Move function body to declaration","kind":"refactor","command":{"title":"Move function body to declaration","command":"clangd.applyTweak","arguments":[{"tweakID":"DefineInline","file":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","selection":{"start":{"line":40,"character":13},"end":{"line":40,"character":13}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":342,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":40,"character":6},"end":{"line":40,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":342,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":343,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":40,"character":5},"end":{"line":40,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":343,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":344,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":40,"character":5}}}
>>>
Content-Length: 257

{"id":344,"result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include \u003cHTTPClient.h\u003e  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"start":{"line":40,"character":5},"end":{"line":40,"character":11}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":345,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":14}}}
>>>
Content-Length: 40

{"id":345,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":346,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":13}}}
>>>
Content-Length: 40

{"id":346,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":347,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":14}}}
>>>
Content-Length: 38

{"id":347,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":348,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":348,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":65},"contentChanges":[{"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"rangeLength":0,"text":"BcbAws::"}]}}Content-Length: 278

{"jsonrpc":"2.0","id":349,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":349,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":65}}}Content-Length: 204

{"jsonrpc":"2.0","id":350,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":20}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":350}}Content-Length: 204

{"jsonrpc":"2.0","id":351,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":21}}}Content-Length: 481

{"jsonrpc":"2.0","id":352,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"message":"Use of undeclared identifier 'ws'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}Content-Length: 216

{"jsonrpc":"2.0","id":353,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":21}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":351}}Content-Length: 461

{"jsonrpc":"2.0","id":354,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"message":"Use of undeclared identifier 'ws'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":349}}
>>>
Content-Length: 40

{"id":350,"result":null,"jsonrpc":"2.0"}Content-Length: 40

{"id":351,"result":null,"jsonrpc":"2.0"}Content-Length: 38

{"id":352,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":353,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":354,"result":[],"jsonrpc":"2.0"}Content-Length: 4042

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 461

{"jsonrpc":"2.0","id":355,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"message":"Use of undeclared identifier 'ws'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":355,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":66},"contentChanges":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"rangeLength":0,"text":"BcbAws::"}]}}
>>>
Content-Length: 4032

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":31}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 451

{"jsonrpc":"2.0","id":356,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":31}},"message":"No member named 'ws' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":356,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":357,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":21}}}
>>>
Content-Length: 40

{"id":357,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":66}}}Content-Length: 451

{"jsonrpc":"2.0","id":358,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":31}},"message":"No member named 'ws' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":358,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":359,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":0}}}
>>>
Content-Length: 40

{"id":359,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":360,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":1}}}
>>>
Content-Length: 40

{"id":360,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":361,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":2}}}
>>>
Content-Length: 40

{"id":361,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 477

{"jsonrpc":"2.0","id":362,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"message":"Use of undeclared identifier 'ws'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":362,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":363,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":2}}}
>>>
Content-Length: 38

{"id":363,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 457

{"jsonrpc":"2.0","id":364,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"message":"Use of undeclared identifier 'ws'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":364,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":365,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":2}}}
>>>
Content-Length: 40

{"id":365,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 477

{"jsonrpc":"2.0","id":366,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"message":"Use of undeclared identifier 'ws'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":366,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":67},"contentChanges":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":2}},"rangeLength":0,"text":"BcbAws::"}]}}
>>>
Content-Length: 4232

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":37}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":31}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 451

{"jsonrpc":"2.0","id":367,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":12}},"message":"No member named 'ws' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":367,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 451

{"jsonrpc":"2.0","id":368,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":12}},"message":"No member named 'ws' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":368,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":67}}}Content-Length: 203

{"jsonrpc":"2.0","id":369,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":2}}}
>>>
Content-Length: 40

{"id":369,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 481

{"jsonrpc":"2.0","id":370,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"message":"Use of undeclared identifier 'server'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":370,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":371,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":2}}}
>>>
Content-Length: 40

{"id":371,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":372,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":2}}}
>>>
Content-Length: 38

{"id":372,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 461

{"jsonrpc":"2.0","id":373,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"message":"Use of undeclared identifier 'server'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":373,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":374,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":2}}}
>>>
Content-Length: 40

{"id":374,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 481

{"jsonrpc":"2.0","id":375,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"message":"Use of undeclared identifier 'server'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":375,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":68},"contentChanges":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":2}},"rangeLength":0,"text":"BcbAws::"}]}}
>>>
Content-Length: 4224

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":37}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":42,"character":37},"end":{"line":42,"character":39}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 455

{"jsonrpc":"2.0","id":376,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":16}},"message":"No member named 'server' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":376,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":68}}}Content-Length: 455

{"jsonrpc":"2.0","id":377,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":16}},"message":"No member named 'server' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":377,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":378,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":40}}}
>>>
Content-Length: 40

{"id":378,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":379,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":42,"character":40}}}
>>>
Content-Length: 40

{"id":379,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":380,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":50,"character":36}}}
>>>
Content-Length: 40

{"id":380,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":380}}Content-Length: 204

{"jsonrpc":"2.0","id":381,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":58,"character":47}}}
>>>
Content-Length: 40

{"id":381,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":381}}Content-Length: 204

{"jsonrpc":"2.0","id":382,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":58,"character":49}}}
>>>
Content-Length: 40

{"id":382,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":383,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":58,"character":50}}}
>>>
Content-Length: 40

{"id":383,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":384,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":58,"character":49}}}
>>>
Content-Length: 40

{"id":384,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":385,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":58,"character":48}}}
>>>
Content-Length: 40

{"id":385,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 751

{"jsonrpc":"2.0","id":386,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"message":"'this' cannot be implicitly captured in this context","severity":1,"code":"this_capture","source":"clang"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","severity":1,"code":"typecheck_member_reference_suggestion","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 190

{"id":386,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":387,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":58,"character":49}}}
>>>
Content-Length: 38

{"id":387,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 534

{"jsonrpc":"2.0","id":388,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":58,"character":49},"end":{"line":58,"character":49}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","severity":1,"code":"typecheck_member_reference_suggestion","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":388,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":69},"contentChanges":[{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"rangeLength":1,"text":""}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":70},"contentChanges":[{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":48}},"rangeLength":0,"text":"-"}]}}Content-Length: 534

{"jsonrpc":"2.0","id":389,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":58,"character":49},"end":{"line":58,"character":49}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","severity":1,"code":"typecheck_member_reference_suggestion","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":389,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":71},"contentChanges":[{"range":{"start":{"line":58,"character":49},"end":{"line":58,"character":49}},"rangeLength":0,"text":">"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":389}}Content-Length: 260

{"jsonrpc":"2.0","id":390,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":58,"character":50},"context":{"triggerKind":2,"triggerCharacter":">"}}}Content-Length: 278

{"jsonrpc":"2.0","id":391,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":58,"character":50},"end":{"line":58,"character":50}},"context":{"diagnostics":[]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":71}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":390}}Content-Length: 278

{"jsonrpc":"2.0","id":392,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":58,"character":61},"end":{"line":58,"character":61}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":391}}
>>>
Content-Length: 4151

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":37}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":42,"character":37},"end":{"line":42,"character":39}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":49},"end":{"line":58,"character":56}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getJSON'"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}Content-Length: 2240

{"id":390,"result":{"isIncomplete":false,"items":[{"label":" getJSON()","kind":2,"detail":"String","sortText":"3d6ecccdgetJSON","filterText":"getJSON","insertText":"getJSON()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":50},"end":{"line":58,"character":50}},"newText":"getJSON()"}},{"label":" filename(…)","kind":2,"detail":"[2 overloads]","sortText":"3da75515filename","filterText":"filename","insertText":"filename($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":50},"end":{"line":58,"character":50}},"newText":"filename($0)"}},{"label":" relay(…)","kind":2,"detail":"[2 overloads]","sortText":"3ed2aa78relay","filterText":"relay","insertText":"relay($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":50},"end":{"line":58,"character":50}},"newText":"relay($0)"}},{"label":" reload(…)","kind":2,"detail":"[2 overloads]","sortText":"3ed2aa78reload","filterText":"reload","insertText":"reload($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":50},"end":{"line":58,"character":50}},"newText":"reload($0)"}},{"label":" getOta()","kind":2,"detail":"bool","sortText":"3ee51eb8getOta","filterText":"getOta","insertText":"getOta()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":50},"end":{"line":58,"character":50}},"newText":"getOta()"}},{"label":" moisture()","kind":2,"detail":"int","sortText":"3ee51eb8moisture","filterText":"moisture","insertText":"moisture()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":50},"end":{"line":58,"character":50}},"newText":"moisture()"}},{"label":" setOta(bool value)","kind":2,"detail":"bool","sortText":"3ee51eb8setOta","filterText":"setOta","insertText":"setOta(${1:bool value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":50},"end":{"line":58,"character":50}},"newText":"setOta(${1:bool value})"}},{"label":" threshold(…)","kind":2,"detail":"[2 overloads]","sortText":"3ee51eb8threshold","filterText":"threshold","insertText":"threshold($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":50},"end":{"line":58,"character":50}},"newText":"threshold($0)"}}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":391,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":392,"result":[],"jsonrpc":"2.0"}Content-Length: 3962

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":37}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":42,"character":37},"end":{"line":42,"character":39}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":393,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":58,"character":61},"end":{"line":58,"character":61}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":393,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":394,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":53,"character":29}}}
>>>
Content-Length: 40

{"id":394,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":395,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":48,"character":54}}}
>>>
Content-Length: 40

{"id":395,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":396,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":41,"character":1}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":396}}
>>>
Content-Length: 40

{"id":396,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":397,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":31,"character":21}}}
>>>
Content-Length: 415

{"id":397,"result":{"contents":{"kind":"markdown","value":"### instance-method `BcbAws::handleWebSocketMessage`  \n\n---\n→ `void`  \nParameters:  \n- `void * arg`\n- `uint8_t * data`\n- `size_t len`\n\n---\n```cpp\n// In BcbAws\npublic: void BcbAws::handleWebSocketMessage(void *arg, uint8_t *data, size_t len)\n```"},"range":{"start":{"line":31,"character":6},"end":{"line":31,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":397}}Content-Length: 203

{"jsonrpc":"2.0","id":398,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":25}}}
>>>
Content-Length: 278

{"id":398,"result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":398}}Content-Length: 202

{"jsonrpc":"2.0","id":399,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":3}}}
>>>
Content-Length: 40

{"id":399,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":400,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":8}}}
>>>
Content-Length: 40

{"id":400,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":401,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":9}}}
>>>
Content-Length: 40

{"id":401,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":402,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":10}}}
>>>
Content-Length: 38

{"id":402,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":402}}Content-Length: 446

{"jsonrpc":"2.0","id":403,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"message":"No member named 'ws' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":403,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":72},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":10}},"rangeLength":8,"text":""}]}}Content-Length: 274

{"jsonrpc":"2.0","id":404,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":404,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":405,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":10}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":72}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":405}}Content-Length: 203

{"jsonrpc":"2.0","id":406,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":10}}}Content-Length: 215

{"jsonrpc":"2.0","id":407,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":10}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":406}}Content-Length: 549

{"jsonrpc":"2.0","id":408,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","severity":1,"code":"no_member_suggest","source":"clang"}]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":404}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":407}}Content-Length: 548

{"jsonrpc":"2.0","id":409,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","severity":1,"code":"no_member_suggest","source":"clang"}]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":408}}Content-Length: 548

{"jsonrpc":"2.0","id":410,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","severity":1,"code":"no_member_suggest","source":"clang"}]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":409}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":73},"contentChanges":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"rangeLength":8,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":410}}Content-Length: 202

{"jsonrpc":"2.0","id":411,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":2}}}Content-Length: 568

{"jsonrpc":"2.0","id":412,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":
>>>
Content-Length: 278

{"id":405,"result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":16}}},"jsonrpc":"2.0"}Content-Length: 3970

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":37}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":42,"character":37},"end":{"line":42,"character":39}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}Content-Length: 278

{"id":406,"result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":16}}},"jsonrpc":"2.0"}Content-Length: 298

{"id":407,"result":[{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"kind":1},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":16}},"kind":3},{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":26}},"kind":2}],"jsonrpc":"2.0"}Content-Length: 190

{"id":408,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}Content-Length: 190

{"id":409,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}Content-Length: 190

{"id":410,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}Content-Length: 276

{"id":411,"result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":8}}},"jsonrpc":"2.0"}
<<<
5,"character":10}},"message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","severity":1,"code":"no_member_suggest","source":"clang"}],"only":["quickfix"]}}}Content-Length: 547

{"jsonrpc":"2.0","id":413,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","severity":1,"code":"no_member_suggest","source":"clang"}]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":411}}Content-Length: 202

{"jsonrpc":"2.0","id":414,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":5}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":414}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":73}}}Content-Length: 203

{"jsonrpc":"2.0","id":415,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":18}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":415}}
>>>
Content-Length: 38

{"id":412,"result":[],"jsonrpc":"2.0"}Content-Length: 3980

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: use of undeclared identifier 'server'; did you mean 'iserver'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":37}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":42,"character":37},"end":{"line":42,"character":39}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":413,"result":[],"jsonrpc":"2.0"}Content-Length: 276

{"id":414,"result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":8}}},"jsonrpc":"2.0"}Content-Length: 278

{"id":415,"result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"jsonrpc":"2.0"}
<<<
Content-Length: 556

{"jsonrpc":"2.0","id":416,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":8}},"message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":416,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":74},"contentChanges":[{"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"rangeLength":0,"text":"\n  "}]}}
>>>
Content-Length: 3982

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: use of undeclared identifier 'server'; did you mean 'iserver'?"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":37}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":43,"character":37},"end":{"line":43,"character":39}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":54,"character":2},"end":{"line":54,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":2},"end":{"line":58,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":59,"character":43},"end":{"line":59,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":62,"character":2},"end":{"line":62,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":74}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":75},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":2}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 3982

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: use of undeclared identifier 'server'; did you mean 'iserver'?"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":37}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":43,"character":37},"end":{"line":43,"character":39}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":54,"character":2},"end":{"line":54,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":2},"end":{"line":58,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":59,"character":43},"end":{"line":59,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":62,"character":2},"end":{"line":62,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":417,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":34,"character":20}}}
>>>
Content-Length: 40

{"id":417,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":418,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":43,"character":39}}}
>>>
Content-Length: 40

{"id":418,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":418}}Content-Length: 278

{"jsonrpc":"2.0","id":419,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":43,"character":41},"end":{"line":43,"character":41}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":419,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":420,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":62,"character":18},"end":{"line":62,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":420,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 1217

{"jsonrpc":"2.0","id":421,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":50,"character":0},"end":{"line":62,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":8}},"message":"Use of undeclared identifier 'server'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":54,"character":2},"end":{"line":54,"character":8}},"message":"Use of undeclared identifier 'server'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":58,"character":2},"end":{"line":58,"character":8}},"message":"Use of undeclared identifier 'server'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":59,"character":43},"end":{"line":59,"character":48}},"message":"'this' cannot be implicitly captured in this context","severity":1,"code":"this_capture","source":"clang"},{"range":{"start":{"line":62,"character":2},"end":{"line":62,"character":8}},"message":"Use of undeclared identifier 'server'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":421,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":76},"contentChanges":[{"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":76}}}Content-Length: 401

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":77},"contentChanges":[{"range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}},"rangeLength":1,"text":"  \n"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 706

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":78},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":0}},"rangeLength":0,"text":"    request->send(SPIFFS, \"/index.htm\", \"text/html\");\n  });    \n  \n  server->on(\"/config\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request->send(SPIFFS, \"/config.htm\", \"text/html\");\n  }); \n  \n  server->on(\"/json\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request->send(200, \"application/json\", state->getJSON());\n  });\n  // start the web server\n  server->begin();"}]}}Content-Length: 278

{"jsonrpc":"2.0","id":422,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":18}},"context":{"diagnostics":[]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":78}}}
>>>
Content-Length: 38

{"id":422,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":423,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":17,"character":2}}}Content-Length: 215

{"jsonrpc":"2.0","id":424,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":17,"character":2}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":423}}Content-Length: 276

{"jsonrpc":"2.0","id":425,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":2}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":422}}
>>>
Content-Length: 40

{"id":423,"result":null,"jsonrpc":"2.0"}Content-Length: 38

{"id":424,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":425,"result":[],"jsonrpc":"2.0"}Content-Length: 5693

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: use of undeclared identifier 'server'; did you mean 'iserver'?"},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'request'"},{"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":4}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":8}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'server'; did you mean 'Server'? (fix available)\n\n/home/brian/Arduino/hardware/espressif/esp32/cores/esp32/Server.h:25:7:\nnote: 'Server' declared here"},{"range":{"start":{"line":9,"character":8},"end":{"line":9,"character":10}},"severity":1,"code":"invalid_operator_on_type","source":"clang","message":"Cannot use arrow operator on a type"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":8}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'server'; did you mean 'Server'? (fix available)\n\n/home/brian/Arduino/hardware/espressif/esp32/cores/esp32/Server.h:25:7:\nnote: 'Server' declared here"},{"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":10}},"severity":1,"code":"invalid_operator_on_type","source":"clang","message":"Cannot use arrow operator on a type"},{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":8}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'server'; did you mean 'Server'? (fix available)\n\n/home/brian/Arduino/hardware/espressif/esp32/cores/esp32/Server.h:25:7:\nnote: 'Server' declared here"},{"range":{"start":{"line":17,"character":8},"end":{"line":17,"character":10}},"severity":1,"code":"invalid_operator_on_type","source":"clang","message":"Cannot use arrow operator on a type"},{"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":1}},"severity":1,"code":"extraneous_closing_brace","source":"clang","message":"Extraneous closing brace ('}')"},{"range":{"start":{"line":22,"character":2},"end":{"line":22,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":54,"character":22},"end":{"line":54,"character":37}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":54,"character":10},"end":{"line":54,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":55,"character":10},"end":{"line":55,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":55,"character":37},"end":{"line":55,"character":39}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":62,"character":2},"end":{"line":62,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":66,"character":2},"end":{"line":66,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"fatal_too_many_errors","source":"clang","message":"Too many errors emitted, stopping now"}]},"jsonrpc":"2.0"}Content-Length: 3982

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"},{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: use of undeclared identifier 'server'; did you mean 'iserver'?"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"},{"range":{"start":{"line":43,"character":22},"end":{"line":43,"character":37}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":44,"character":10},"end":{"line":44,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"},{"range":{"start":{"line":44,"character":37},"end":{"line":44,"character":39}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"},{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":55,"character":2},"end":{"line":55,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":60,"character":43},"end":{"line":60,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":426,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":426,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":427,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":19}}}
>>>
Content-Length: 40

{"id":427,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":428,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":16,"character":20}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":428}}
>>>
Content-Length: 40

{"id":428,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":429,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":16,"character":19}}}
>>>
Content-Length: 40

{"id":429,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":430,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":21,"character":0},"end":{"line":22,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":430,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":17},"contentChanges":[{"range":{"start":{"line":21,"character":0},"end":{"line":22,"character":10}},"rangeLength":11,"text":""}]}}
>>>
Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":431,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":24,"character":15},"end":{"line":24,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":431,"result":[],"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3075

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":6524,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"/home/brian/Arduino/projects/garden/esp32/garden/garden","rootUri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden","name":"garden"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 5336

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","languageId":"cpp","version":1,"text":"#include <Arduino.h>\n#include \"State.h\"\n#include \"bcbaws.h\"\n#include \"bcbsdcard.h\"\n#include \"time.h\"\n#include \"WiFiCred1.h\"\n#include <ArduinoJson.h>\n#include <ArduinoOTA.h>\n#include <ESPmDNS.h>\n#include <WiFi.h>\n#include <WiFiUdp.h>\n\n#define ARDUINO_RUNNING_CORE 1\nAsyncWebServer server(80);\nAsyncWebSocket ws(\"/ws\");\nState state;\nBcbAws aws(&state,&server,&ws);\n\n// internal rtc variables\nconst char *ntpServer = \"pool.ntp.org\";\nconst long gmtOffset_sec = -18000;\nconst int daylightOffset_sec = 3600;\n\n\nbool wifiavail = false;\n\n// localtime from internal rtc\nString printLocalTime() {\n  struct tm timeinfo;\n  if (!getLocalTime(&timeinfo)) {\n    return (\"\");\n  }\n  return (asctime(&timeinfo));\n}\n\nString printLocalHour() {\n  struct tm timeinfo;\n  if (!getLocalTime(&timeinfo)) {\n    return (\"\");\n  }\n  return (String(asctime(&timeinfo)).substring(11, 16) + \" \");\n}\n\n// define functions\nvoid UpdateClients(void *pvParameters); // maintains the websocket display\n//void UpdateDatabase(void *pvParameters); // maintains the websocket display\nvoid initWiFi();\nvoid initTime();\n\n\nvoid setup() {\n  // start the serial interface\n  Serial.begin(115200);\n  delay(500);\n  initWiFi();\n  initTime();\n  aws.initWebServer();\n  aws.initWebSocket();\n  initSDCard();\n  checkForIndex();\n  digitalWrite(2, LOW);\n  pinMode(2, OUTPUT);\n  state.relay(false);\n  \n  xTaskCreatePinnedToCore(UpdateClients, // function name \n                          \"updateClients\" // A name just for humans\n                          ,\n                          4096 // This stack size can be checked & adjusted by\n                          // reading the Stack Highwater\n                          ,\n                          NULL,// task input parameter\n                          2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n                          // being the highest, and 0 being the lowest.\n                          ,\n                          NULL, // task handle\n                          ARDUINO_RUNNING_CORE);\n//\n//  xTaskCreatePinnedToCore(UpdateDatabase, \"updateDatabase\" // A name just for humans\n//                          ,\n//                          4096 // This stack size can be checked & adjusted by\n//                          // reading the Stack Highwater\n//                          ,\n//                          NULL, 2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n//                          // being the highest, and 0 being the lowest.\n//                          ,\n//                          NULL, ARDUINO_RUNNING_CORE);\n\n  ArduinoOTA\n  .onStart([]() {\n    String type;\n    if (ArduinoOTA.getCommand() == U_FLASH)\n      type = \"sketch\";\n    else // U_SPIFFS\n      type = \"filesystem\";\n\n    // NOTE: if updating SPIFFS this would be the place to unmount SPIFFS\n    SPIFFS.end();\n // Disable client connections    \n    ws.enable(false);\n\n    // Advertise connected clients what's going on\n    ws.textAll(\"OTA Update Started\");\n\n    // Close them\n    ws.closeAll();\n    state.setOta(true);\n\n    \n    Serial.println(\"Start updating \" + type);\n  })\n  .onEnd([]() {\n    Serial.println(\"\\nEnd\");\n  })\n  .onProgress([](unsigned int progress, unsigned int total) {\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\n  })\n  .onError([](ota_error_t error) {\n    Serial.printf(\"Error[%u]: \", error);\n    if (error == OTA_AUTH_ERROR)\n      Serial.println(\"Auth Failed\");\n    else if (error == OTA_BEGIN_ERROR)\n      Serial.println(\"Begin Failed\");\n    else if (error == OTA_CONNECT_ERROR)\n      Serial.println(\"Connect Failed\");\n    else if (error == OTA_RECEIVE_ERROR)\n      Serial.println(\"Receive Failed\");\n    else if (error == OTA_END_ERROR)\n      Serial.println(\"End Failed\");\n  });\n  ArduinoOTA.begin();\n}\n\nvoid loop() {\n  ArduinoOTA.handle(); // check if an update is available\n  if (WiFi.status() != WL_CONNECTED) // check if wifi is still connected, if not, reconnect\n    initWiFi();\n  vTaskDelay(60);\n}\n\nvoid UpdateClients(void *pvParameters) { // handle websocket and oled displays\n  (void)pvParameters;\n  for (;;) {\n    if(!state.getOta()) {aws.notifyClients();} // send state to the client as a json string\n    vTaskDelay(10000);\n  }\n}\n\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() > 3400 && state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}\n\n\n\n\nvoid initWiFi() {\n  Serial.println(\"connecting to wifi\");\n  // connect to wifi\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  if (WiFi.waitForConnectResult() != WL_CONNECTED) {\n  Serial.println(\"connecting to wifi failed\");\n  delay(500);\n  initWiFi();\n  }\n  Serial.println(\"wifi connected\");\n  wifiavail = true;\n}\n\nvoid initTime() {\n  // set the clock from ntp server\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n  printLocalTime();\n}\n"}}}Content-Length: 272

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/67","percentage":8.955223880597014,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/67","percentage":10.447761194029852,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/67","percentage":11.940298507462687,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/67","percentage":11.940298507462687,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/67","percentage":13.432835820895523,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/67","percentage":14.925373134328359,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/67","percentage":14.925373134328359,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/67","percentage":16.417910447761194,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/67","percentage":17.91044776119403,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/67","percentage":17.91044776119403,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/67","percentage":19.402985074626866,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/67","percentage":20.895522388059703,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/67","percentage":20.895522388059703,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/67","percentage":22.388059701492537,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/67","percentage":22.388059701492537,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/67","percentage":23.880597014925375,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/67","percentage":25.37313432835821,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/67","percentage":25.37313432835821,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/67","percentage":26.865671641791046,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/67","percentage":26.865671641791046,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/67","percentage":28.35820895522388,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/67","percentage":29.850746268656717,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/67","percentage":29.850746268656717,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/67","percentage":31.34328358208955,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/67","percentage":31.34328358208955,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/67","percentage":32.83582089552239,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/67","percentage":32.83582089552239,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/67","percentage":34.32835820895522,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/67","percentage":34.32835820895522,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/67","percentage":35.82089552238806,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/67","percentage":35.82089552238806,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/67","percentage":37.3134328358209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/67","percentage":38.80597014925373,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/67","percentage":38.80597014925373,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/67","percentage":40.298507462686565,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/67","percentage":41.791044776119406,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/67","percentage":41.791044776119406,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/67","percentage":43.28358208955224,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/67","percentage":43.28358208955224,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/67","percentage":44.776119402985074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/67","percentage":44.776119402985074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/67","percentage":46.26865671641791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/67","percentage":46.26865671641791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/67","percentage":47.76119402985075,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/67","percentage":49.25373134328358,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/67","percentage":49.25373134328358,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/67","percentage":50.74626865671642,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/67","percentage":50.74626865671642,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/67","percentage":52.23880597014925,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/67","percentage":53.73134328358209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/67","percentage":53.73134328358209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/67","percentage":55.223880597014926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/67","percentage":55.223880597014926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"38/67","percentage":56.71641791044776,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"38/67","percentage":56.71641791044776,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"39/67","percentage":58.208955223880594,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"39/67","percentage":58.208955223880594,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"40/67","percentage":59.701492537313435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"40/67","percentage":59.701492537313435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"41/67","percentage":61.19402985074627,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"41/67","percentage":61.19402985074627,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"42/67","percentage":62.6865671641791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"42/67","percentage":62.6865671641791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"43/67","percentage":64.17910447761194,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"43/67","percentage":64.17910447761194,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"44/67","percentage":65.67164179104478,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"45/67","percentage":67.16417910447761,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"45/67","percentage":67.16417910447761,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"46/67","percentage":68.65671641791045,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"46/67","percentage":68.65671641791045,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"47/67","percentage":70.14925373134328,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"47/67","percentage":70.14925373134328,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"48/67","percentage":71.64179104477611,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"48/67","percentage":71.64179104477611,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"49/67","percentage":73.13432835820896,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"49/67","percentage":73.13432835820896,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"50/67","percentage":74.6268656716418,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"50/67","percentage":74.6268656716418,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"51/67","percentage":76.11940298507463,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"51/67","percentage":76.11940298507463,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"52/67","percentage":77.61194029850746,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"52/67","percentage":77.61194029850746,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"53/67","percentage":79.1044776119403,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"53/67","percentage":79.1044776119403,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"54/67","percentage":80.59701492537313,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"55/67","percentage":82.08955223880596,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"55/67","percentage":82.08955223880596,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"56/67","percentage":83.58208955223881,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"56/67","percentage":83.58208955223881,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"57/67","percentage":85.07462686567165,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"58/67","percentage":86.56716417910448,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"58/67","percentage":86.56716417910448,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"59/67","percentage":88.05970149253731,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"59/67","percentage":88.05970149253731,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"60/67","percentage":89.55223880597015,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"60/67","percentage":89.55223880597015,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"61/67","percentage":91.04477611940298,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"61/67","percentage":91.04477611940298,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"62/67","percentage":92.53731343283582,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"63/67","percentage":94.02985074626865,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"64/67","percentage":95.5223880597015,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"65/67","percentage":97.01492537313433,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"66/67","percentage":98.50746268656717,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 1909

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp","languageId":"cpp","version":1,"text":"#include\"State.h\"\n\nint State::moisture() {\n      int avg = 0;\n      for (int num = 0; num <= 9; num++) {\n        avg += analogRead(32);\n      }\n      jsonMap[\"moisture\"] = String(avg / 10);\n      return avg / 10;\n    }\n\n\n    int State::threshold() {\n      return jsonMap[\"threshold\"].toInt();\n    };\n    \n    int State::threshold(int value) {\n      jsonMap[\"threshold\"] = String(value);\n      return jsonMap[\"threshold\"].toInt();\n    };\n    \n\n    String State::filename() {\n      return jsonMap[\"filename\"];\n    };\n    \n    String State::filename(String value) {\n      jsonMap[\"filename\"] = value;\n      return jsonMap[\"filename\"];\n    };\n\n\n    bool State::setOta (bool value) {\n      ota = value;\n      return ota;\n    };\n    \n    bool State::getOta () {\n      return ota;\n    };\n\n\n    bool State::reload() {\n      return (jsonMap[\"reload\"] == \"true\");\n    };\n    \n    bool State::reload(bool value) {\n      jsonMap[\"reload\"] = value ? \"true\" : \"false\";\n      return (jsonMap[\"reload\"] == \"true\");\n    };\n\n\n    bool State::relay() {\n      return (jsonMap[\"relay\"] == \"true\");\n    };\n    \n    bool State::relay(bool value) {\n      jsonMap[\"relay\"] = value ? \"true\" : \"false\";\n      return (jsonMap[\"relay\"] == \"true\");\n    };\n\n\n    String State::getJSON() {\n      moisture();\n      String json = \"{\";\n      String quote = \"\\\"\";\n      for (auto const x : jsonMap) {\n        if (json.length() > 3) json += \",\";\n        json += quote + x.first + quote + \":\" + quote + x.second + quote;\n      };\n      json += \"}\";\n      Serial.println(json);\n      return json;\n    }\n\nState state;\n"}}}Content-Length: 271

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 1030

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":3,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 729

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h","languageId":"cpp","version":1,"text":"#ifndef STATE\n#define STATE\n#include<Arduino.h>\n#include<map>\n//set initial state\n\nclass State {\n  public:\n\n    int moisture();\n\n    int threshold();\n    int threshold(int value);\n\n\n    String filename();\n    String filename(String value);\n\n\n    bool setOta (bool value);\n    bool getOta ();\n\n    bool reload();\n    bool reload(bool value);\n\n    bool relay();\n    bool relay(bool value);\n\n    String getJSON();\n\n  private:\n    std::map<String, String> jsonMap;\n    bool ota = false;\n\n};\n\n#endif\n"}}}Content-Length: 269

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 352

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred.h","languageId":"cpp","version":1,"text":"\n//wifi connection credentials\nconst char* ssid     = \"Espnet\";\n//const char* ssid     = \"Frontier4848\";\nconst char* password = \"*********\";\n"}}}Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h","languageId":"cpp","version":1,"text":"// wifi connection credentials\nconst char *ssid = \"Espnet\";\nconst char *password = \"8141695320\";\n"}}}Content-Length: 273

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":4,"result":[],"jsonrpc":"2.0"}Content-Length: 1027

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":9}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 1131

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":1,"character":12},"end":{"line":1,"character":16}},"severity":2,"code":"misc-definitions-in-headers","source":"clang-tidy","message":"Variable 'ssid' defined in a header file; variable definitions in header files can lead to ODR violations"},{"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":20}},"severity":2,"code":"misc-definitions-in-headers","source":"clang-tidy","message":"Variable 'password' defined in a header file; variable definitions in header files can lead to ODR violations"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":5,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 3334

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","languageId":"cpp","version":1,"text":"#include\"bcbaws.h\"\n\nBcbAws::BcbAws(State* istate,AsyncWebServer* iserver, AsyncWebSocket* iws){\n  BcbAws::state=istate;\n  ws = iws;\n  server = iserver; \n    request->send(SPIFFS, \"/index.htm\", \"text/html\");\n  });    \n  \n  server->on(\"/config\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request->send(SPIFFS, \"/config.htm\", \"text/html\");\n  }); \n  \n  server->on(\"/json\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request->send(200, \"application/json\", state->getJSON());\n  });\n  // start the web server\n  server->begin();  \n  \n}\n\nvoid BcbAws::notifyClients() {\n  ws->textAll(state->getJSON());  // send non-slider updating data\n}\n\nvoid BcbAws::handleWebSocketMessage(void *arg, uint8_t *data, size_t len) { // receive the comm from the client and convert it into a string\n  AwsFrameInfo *info = (AwsFrameInfo *)arg;\n  if (info->final && info->index == 0 && info->len == len &&\n      info->opcode == WS_TEXT) {\n    data[len] = 0;\n    parseCommand((char *)data);\n  }\n}\n\nvoid BcbAws::onEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,\n             AwsEventType type, void *arg, uint8_t *data, size_t len) {\n  switch (type) {\n    case WS_EVT_CONNECT:\n      notifyClients();\n      break;\n    case WS_EVT_DISCONNECT:\n      Serial.printf(\"WebSocket client #%u disconnected\\n\", client->id());\n      break;\n    case WS_EVT_DATA:\n      handleWebSocketMessage(arg, data, len);\n      break;\n    case WS_EVT_PONG:\n    case WS_EVT_ERROR:\n      break;\n  }\n}\n\n\nvoid BcbAws::initWebSocket() {\n  BcbAws::ws->onEvent(BcbAws::onEvent);\n  BcbAws::server->addHandler(BcbAws::ws);\n}\n\n\nvoid BcbAws::initWebServer() {\n  // Route for root / web page served from spiffs\n  // TODO add routines for dynamically updating index.htm\n  server->on(\"/\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request->send(SPIFFS, \"/index.htm\", \"text/html\");\n  });    \n  \n  server->on(\"/config\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request->send(SPIFFS, \"/config.htm\", \"text/html\");\n  }); \n  \n  server->on(\"/json\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request->send(200, \"application/json\", state->getJSON());\n  });\n  // start the web server\n  server->begin();\n}\n\n\nvoid BcbAws::parseCommand(String command) {\n  \n  if (command == \"relay\") {\n    state->relay(!state->relay());\n    digitalWrite(2,state->relay());\n    notifyClients();\n  }\n  // file upload handler\n\n  if (command.substring(0, 4) == \"upld\") {\n    state->filename(command.substring(5));\n    deleteFile(SPIFFS, \"/temp.txt\");\n  }\n\n  if (command.substring(0, 4) == \"comp\") {\n    deleteFile(SPIFFS, (\"/\" + state->filename()).c_str());\n    renameFile(SPIFFS, \"/temp.txt\", (\"/\" + state->filename()).c_str());\n    state->filename(\"\");\n  }\n\n  if (command.substring(0, 4) == \"file\") {\n    String message = command.substring(5);\n    appendFile(SPIFFS, \"/temp.txt\", message.c_str());\n  }\n\n  if (command == \"reload\") {\n    state->reload(true);\n    notifyClients();\n    state->reload(false);\n  }\n}\n"}}}Content-Length: 272

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 691

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code
>>>
Content-Length: 1130

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":16}},"severity":2,"code":"misc-definitions-in-headers","source":"clang-tidy","message":"Variable 'ssid' defined in a header file; variable definitions in header files can lead to ODR violations"},{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":20}},"severity":2,"code":"misc-definitions-in-headers","source":"clang-tidy","message":"Variable 'password' defined in a header file; variable definitions in header files can lead to ODR violations"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":6,"result":[],"jsonrpc":"2.0"}
<<<
":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 5609

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","languageId":"cpp","version":1,"text":"#ifndef BCBAWS\n#define BCBAWS\n#include <Arduino.h>\n#include <ESPAsyncWebServer.h>\n#include \"bcbsdcard.h\"\n#include <SPIFFS.h>\n#include \"State.h\"\n//#include <HTTPClient.h>\n\n\n\nclass BcbAws{\n  public:\nBcbAws(State*istate, AsyncWebServer* server, AsyncWebSocket* ws);\nvoid parseCommand(String command);\nvoid notifyClients();\nvoid handleWebSocketMessage(void *arg, uint8_t *data, size_t len);\nvoid initWebSocket();\nvoid initWebServer();\nvoid onEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,\n             AwsEventType type, void *arg, uint8_t *data, size_t len);\n\n  private:\n  AsyncWebServer* server;\n  AsyncWebSocket* ws;\n  State* state;\n};\n// define functions\n//void parseCommand(String command);\n//void notifyClients();\n//void handleWebSocketMessage(void *arg, uint8_t *data, size_t len);\n//void initWebSocket();\n//void initWebServer();\n//void updateDB();\n\n// web server variables\n//AsyncWebServer server(80);\n//AsyncWebSocket ws(\"/ws\");\n// web client\n//HTTPClient http;\n//char req[450];\n\n//void notifyClients() {\n//  ws.textAll(state.getJSON());  // send non-slider updating data\n//}\n\n//void handleWebSocketMessage(void *arg, uint8_t *data, size_t len) { // receive the comm from the client and convert it into a string\n//  AwsFrameInfo *info = (AwsFrameInfo *)arg;\n//  if (info->final && info->index == 0 && info->len == len &&\n//      info->opcode == WS_TEXT) {\n//    data[len] = 0;\n//    parseCommand((char *)data);\n//  }\n//}\n\n\n// handle websocket connections\n//void onEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,\n//             AwsEventType type, void *arg, uint8_t *data, size_t len) {\n//  switch (type) {\n//    case WS_EVT_CONNECT:\n//      notifyClients();\n//      break;\n//    case WS_EVT_DISCONNECT:\n//      Serial.printf(\"WebSocket client #%u disconnected\\n\", client->id());\n//      break;\n//    case WS_EVT_DATA:\n//      handleWebSocketMessage(arg, data, len);\n//      break;\n//    case WS_EVT_PONG:\n//    case WS_EVT_ERROR:\n//      break;\n//  }\n//}\n\n// init websockets\n//void initWebSocket() {\n//  ws.onEvent(onEvent);\n//  server.addHandler(&ws);\n//}\n\n// init webserver\n//void initWebServer() {\n//  // Route for root / web page served from spiffs\n//  // TODO add routines for dynamically updating index.htm\n//  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest * request) {\n//    request->send(SPIFFS, \"/index.htm\", \"text/html\");\n//  });    \n//  \n//  server.on(\"/config\", HTTP_GET, [](AsyncWebServerRequest * request) {\n//    request->send(SPIFFS, \"/config.htm\", \"text/html\");\n//  }); \n//  \n//  server.on(\"/json\", HTTP_GET, [](AsyncWebServerRequest * request) {\n//    request->send(200, \"application/json\", state.getJSON());\n//  });\n//  // start the web server\n//  server.begin();\n//}\n\n\n\n//// convert state to json\n//String getJson(bool b) {\n//\n//  String response = \"{\\\"moisture\\\":\"+String(state.moisture())+\",\\\"relay\\\":\"+(state.relay()?\"\\\"on\\\"\":\"\\\"off\\\"\")+\",\\\"initial\\\": \\\"true\\\"}\";\n//\n//  return response;\n//}\n\n//parse the command coming from the client(s)\n//void parseCommand(String command) {\n//  Serial.println(command);\n//\n//  \n//  \n//  if (command == \"relay\") {\n//    state.relay(!state.relay());\n//    digitalWrite(2,state.relay());\n//    notifyClients();\n//  }\n//  // file upload handler\n//\n//  if (command.substring(0, 4) == \"upld\") {\n//    state.filename(command.substring(5));\n//    deleteFile(SPIFFS, \"/temp.txt\");\n//  }\n//\n//  if (command.substring(0, 4) == \"com
>>>
Content-Length: 3529

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'request'"},{"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":4}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":8}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'server'; did you mean 'Server'? (fix available)\n\n/home/brian/Arduino/hardware/espressif/esp32/cores/esp32/Server.h:25:7:\nnote: 'Server' declared here"},{"range":{"start":{"line":9,"character":8},"end":{"line":9,"character":10}},"severity":1,"code":"invalid_operator_on_type","source":"clang","message":"Cannot use arrow operator on a type"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":8}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'server'; did you mean 'Server'? (fix available)\n\n/home/brian/Arduino/hardware/espressif/esp32/cores/esp32/Server.h:25:7:\nnote: 'Server' declared here"},{"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":10}},"severity":1,"code":"invalid_operator_on_type","source":"clang","message":"Cannot use arrow operator on a type"},{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":8}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'server'; did you mean 'Server'? (fix available)\n\n/home/brian/Arduino/hardware/espressif/esp32/cores/esp32/Server.h:25:7:\nnote: 'Server' declared here"},{"range":{"start":{"line":17,"character":8},"end":{"line":17,"character":10}},"severity":1,"code":"invalid_operator_on_type","source":"clang","message":"Cannot use arrow operator on a type"},{"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":1}},"severity":1,"code":"extraneous_closing_brace","source":"clang","message":"Extraneous closing brace ('}')"},{"range":{"start":{"line":54,"character":22},"end":{"line":54,"character":37}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"},{"range":{"start":{"line":71,"character":43},"end":{"line":71,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":7,"result":[],"jsonrpc":"2.0"}
<<<
p\") {\n//    deleteFile(SPIFFS, (\"/\" + state.filename()).c_str());\n//    renameFile(SPIFFS, \"/temp.txt\", (\"/\" + state.filename()).c_str());\n//    state.filename(\"\");\n//  }\n//\n//  if (command.substring(0, 4) == \"file\") {\n//    String message = command.substring(5);\n//    appendFile(SPIFFS, \"/temp.txt\", message.c_str());\n//  }\n//\n//  if (command == \"reload\") {\n//    state.reload(true);\n//    notifyClients();\n//    state.reload(false);\n//  }\n//}\n\n//void updateDB(){\n//      Serial.println(\"[HTTP] begin...\\n\");\n//      strcpy(req, (\"http://192.168.1.177/~brian/esp32/mysql-data-logger/garden.php?temp=\" + String(state.temp()) + \"&press=\" + String(state.pressure()) + \"&p64=\" + String(state.pressure64()) + \"&humid=\" + String(state.humidity())).c_str());\n//      Serial.println(String(state.temp()));\n//      Serial.println(String(state.pressure()));\n//      Serial.println(String(state.pressure64()));\n//      Serial.println(String(state.humidity()));\n//      Serial.println(String(req));\n//      http.begin(req); //HTTP\n//\n//      Serial.print(\"[HTTP] GET...\\n\");\n//      // start connection and send HTTP header\n//      int httpCode = http.GET();\n//\n//      // httpCode will be negative on error\n//      if (httpCode > 0) {\n//        // HTTP header has been send and Server response header has been handled\n//        Serial.printf(\"[HTTP] GET... code: %d\\n\", httpCode);\n//\n//        // file found at server\n//        if (httpCode == HTTP_CODE_OK) {\n//          String payload = http.getString();\n//          Serial.println(payload);\n//        }\n//      } else {\n//        Serial.printf(\"[HTTP] GET... failed, error: %s\\n\", http.errorToString(httpCode).c_str());\n//      }\n//\n//      http.end();\n//    }\n\n\n\n\n#endif\n"}}}Content-Length: 270

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 2481

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h","languageId":"cpp","version":1,"text":"#include \"FS.h\"\n#include \"SPIFFS.h\"\n#include \"State.h\"\n\n#ifndef BCBSD\n#define BCBSD\n#include \"defaulthtml.h\"\n\n\n// variables\nxSemaphoreHandle semFile = xSemaphoreCreateMutex(); // file operation lock\nvoid initSDCard() {\n  Serial.print(\"Initializing SD card...\");\n\n  if (!SPIFFS.begin(true)) {\n    Serial.println(\"initialization failed!\");\n    while (1);\n  }\n  Serial.println(\"initialization done.\");\n\n}\n\nvoid appendFile(fs::FS &fs, const char * path, const char * message) {\n\n  if (xSemaphoreTake(semFile, 500)) {\n    File file = fs.open(path, FILE_APPEND);\n\n    if (!file) {\n      return;\n    }\n    file.print(message);\n    file.close();\n\n    xSemaphoreGive(semFile);\n  }\n}\n\nvoid writeFile(fs::FS &fs, const char * path, const char * message) {\n\n  if (xSemaphoreTake(semFile, 500)) {\n    File file = fs.open(path, FILE_WRITE);\n\n    if (!file) {\n      return;\n    }\n    file.print(message);\n    file.close();\n\n    xSemaphoreGive(semFile);\n  }\n}\nString readFile(fs::FS &fs, const char * path){\n    Serial.printf(\"Reading file: %s\\r\\n\", path);\n\n    File file = fs.open(path);\n    if(!file || file.isDirectory()){\n        Serial.println(\"- failed to open file for reading\");\n        return \"\";\n    }\n    String result;\n    Serial.println(\"- read from file:\");\n    while(file.available()){\n        result += String(char(file.read()));\n    }\n    file.close();\n    return result;\n}\n\nvoid renameFile(fs::FS &fs, const char * path1, const char * path2) {\n  if (xSemaphoreTake(semFile, 500)) {\n    fs.rename(path1, path2);\n    xSemaphoreGive(semFile);\n  }\n}\n\nvoid deleteFile(fs::FS &fs, const char * path) {\n  if (xSemaphoreTake(semFile, 500)) {\n    fs.remove(path);\n    xSemaphoreG
>>>
Content-Length: 36

{"id":8,"result":[],"jsonrpc":"2.0"}
<<<
ive(semFile);\n  }\n}\n\n// write the default index.htm to SPIFFS\n//  check if index exists and only update if it doesn't\nvoid checkForIndex(){\n//  if(SPIFFS.exists(\"/data.json\")) {\n//    state.json(readFile(SPIFFS, \"/data.json\"));\n//    Serial.println(state.json());\n//  }\n  if(SPIFFS.exists(\"/index.htm\")) return; // \n  deleteFile(SPIFFS,\"/index.htm\");\n  delay(500);\n  File file = SPIFFS.open(\"/index.htm\", FILE_WRITE);\n    file.print(htmlCode);\n    file.close();\n    }\n\n#endif\n"}}}Content-Length: 273

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 3516

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h","languageId":"cpp","version":1,"text":"//default html page if not in SPIFFS\n\n// beginning of default web page\nconst char htmlCode[]PROGMEM = R\"rawliteral(\n <!DOCTYPE HTML>\n<html>\n\n<head>\n  <! define meta data>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <! define the style CSS of your page>\n     \n</head>\n\n<body>\n\n\n\n    <input type='file' name='upload' id='upload' value=''><span id=\"percent\"></span>\n  </div>\n  <script>\n    var gateway = `ws://${window.location.hostname}/ws`;\n    var websocket;\n    var state = {};\n    var json = {};\n\n    window.addEventListener('load', onLoad);\n\n    function initWebSocket() {\n      console.log('Trying to open a WebSocket connection...');\n      websocket = new WebSocket(gateway);\n      websocket.onopen = onOpen;\n      websocket.onclose = onClose;\n      websocket.onmessage = onMessage;\n    }\n\n    function onOpen(event) {\n      console.log('Connection opened');\n    }\n\n    function onClose(event) {\n      console.log('Connection closed');\n      setTimeout(initWebSocket, 2000);\n    }\n\n    function toFixed(num, fixed) {\n      var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\n      return num.toString().match(re)[0];\n    }\n\n    function onMessage(event) {\n\n    }\n\n    // on page load\n    function onLoad(event) {\n      initWebSocket();\n      document.getElementById(\"upload\").addEventListener(\"change\", (e) => processFile(e));\n    }\n\n    function processFile(e) {\n      const reader = new FileReader();\n      reader.readAsText(e.path[0].files[0]);\n      var myfilename = e.path[0].files[0].name;\n\n      reader.onload = (e) => {\n        var myfile = e.target.result;\n        var myarray = myfile.split('');\n        var mylength = myfile.length;\n        i = 0;\n        k = 1;\n        var sendArray = [];\n        sendArray[0] = (\"upld:\" + myfilename);\n\n        function getChunk() {\n          var sendstring = '';\n          for (var j = 0; j < 512; j++) {\n            if (i < mylength) {\n              sendstring += myarray[i];\n            }\n            i++\n          }\n          return sendstring;\n        }\n\n        function loopThroughSplittedText(splittedText) {\n          splittedText.forEach(function (text, i) {\n            setTimeout(function () {\n              sendMessage(text, i);\n            }, i * 500)\n          })\n        }\n\n        while (i < mylength) {\n\n          sendArray[k] = (\"file:\" + getChunk());\n          k++;\n        }\n        sendArray[k] = (\"comp\");\n        sendstring = '';\n        loopThroughSplittedText(sendArray);\n      };\n    }\n\n    function sendMessage(data, index) {\n      if (index) var percent = index / k * 100;\n      if (data.substring(0, 4) == 'file') document.getElementById('percent').innerHTML = percent + ' %';\n      if (data.substring(0, 4) == 'comp') {\n        document.getElementById('percent').innerHTML = \"completed\";\n        setTimeout(() => {\n          sendMessage(\"reload\");\n        }, 2000);\n      }\n      websocket.send(da
>>>
Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":9,"result":[],"jsonrpc":"2.0"}
<<<
ta);\n    }\n      function doTime() {\n        document.getElementById('time').innerHTML = new Date().toLocaleString();\n      }\n      setInterval(doTime, 1000);\n\n  </script>\n</body>\n\n</html>\n)rawliteral\";\n\n// end of default web page\n"}}}Content-Length: 276

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 690

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 694

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 693

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 691

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}
>>>
Content-Length: 1032

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":15}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}Content-Length: 1072

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":3,"character":11},"end":{"line":3,"character":19}},"severity":1,"code":"typecheck_incomplete_array_needs_initializer","source":"clang","message":"Definition of variable with array type needs an explicit size or an initializer"},{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":28}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 37

{"id":11,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":12,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":13,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":14,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 694

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":15,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 696

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":2,"character":19},"end":{"line":2,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":17,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":18,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":78,"character":36}}}
>>>
Content-Length: 272

{"id":18,"result":{"contents":{"kind":"markdown","value":"### param `command`  \n\n---\nType: `class String`  \n\n---\n```cpp\n// In BcbAws::parseCommand\nString command\n```"},"range":{"start":{"line":78,"character":33},"end":{"line":78,"character":40}}},"jsonrpc":"2.0"}
<<<
Content-Length: 59

{"jsonrpc":"2.0","id":19,"method":"shutdown","params":null}
>>>
Content-Length: 39

{"id":19,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3076

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":54631,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"/home/brian/Arduino/projects/garden/esp32/garden/garden","rootUri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden","name":"garden"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3516

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h","languageId":"cpp","version":1,"text":"//default html page if not in SPIFFS\n\n// beginning of default web page\nconst char htmlCode[]PROGMEM = R\"rawliteral(\n <!DOCTYPE HTML>\n<html>\n\n<head>\n  <! define meta data>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <! define the style CSS of your page>\n     \n</head>\n\n<body>\n\n\n\n    <input type='file' name='upload' id='upload' value=''><span id=\"percent\"></span>\n  </div>\n  <script>\n    var gateway = `ws://${window.location.hostname}/ws`;\n    var websocket;\n    var state = {};\n    var json = {};\n\n    window.addEventListener('load', onLoad);\n\n    function initWebSocket() {\n      console.log('Trying to open a WebSocket connection...');\n      websocket = new WebSocket(gateway);\n      websocket.onopen = onOpen;\n      websocket.onclose = onClose;\n      websocket.onmessage = onMessage;\n    }\n\n    function onOpen(event) {\n      console.log('Connection opened');\n    }\n\n    function onClose(event) {\n      console.log('Connection closed');\n      setTimeout(initWebSocket, 2000);\n    }\n\n    function toFixed(num, fixed) {\n      var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\n      return num.toString().match(re)[0];\n    }\n\n    function onMessage(event) {\n\n    }\n\n    // on page load\n    function onLoad(event) {\n      initWebSocket();\n      document.getElementById(\"upload\").addEventListener(\"change\", (e) => processFile(e));\n    }\n\n    function processFile(e) {\n      const reader = new FileReader();\n      reader.readAsText(e.path[0].files[0]);\n      var myfilename = e.path[0].files[0].name;\n\n      reader.onload = (e) => {\n        var myfile = e.target.result;\n        var myarray = myfile.split('');\n        var mylength = myfile.length;\n        i = 0;\n        k = 1;\n        var sendArray = [];\n        sendArray[0] = (\"upld:\" + myfilename);\n\n        function getChunk() {\n          var sendstring = '';\n          for (var j = 0; j < 512; j++) {\n            if (i < mylength) {\n              sendstring += myarray[i];\n            }\n            i++\n          }\n          return sendstring;\n        }\n\n        function loopThroughSplittedText(splittedText) {\n          splittedText.forEach(function (text, i) {\n            setTimeout(function () {\n              sendMessage(text, i);\n            }, i * 500)\n          })\n        }\n\n        while (i < mylength) {\n\n          sendArray[k] = (\"file:\" + getChunk());\n          k++;\n        }\n        sendArray[k] = (\"comp\");\n        sendstring = '';\n        loopThroughSplittedText(sendArray);\n      };\n    }\n\n    function sendMessage(data, index) {\n      if (index) var percent = index / k * 100;\n      if (data.substring(0, 4) == 'file') document.getElementById('percent').innerHTML = percent + ' %';\n      if (data.substring(0, 4) == 'comp') {\n        document.getElementById('percent').innerHTML = \"completed\";\n        setTimeout(() => {\n          sendMessage(\"reload\");\n        }, 2000);\n      }\n      websocket.send(data);\n    }\n      function doTime() {\n        document.getElementById('time').innerHTML = new Date().toLocaleString();\n      }\n      setInterval(doTime, 1000);\n\n  </script>\n</body>\n\n</html>\n)rawliteral\";\n\n// end of default web page\n"}}}Content-Length: 2505

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h","languageId":"cpp","version":1,"text":"#include \"FS.h\"\n#include \"SPIFFS.h\"\n#include \"State.h\"\n\n#ifndef BCBSD\n#define BCBSD\n#include \"defaulthtml.h\"\n\n\n// variables\nxSemaphoreHandle semFile = xSemaphoreCreateMutex(); // file operation lock\nvoid initSDCard() {\n  Serial.print(\"Initializing SD card...\");\n\n  if (!SPIFFS.begin(true)) {\n    Serial.println(\"initialization failed!\");\n    while (1);\n  }\n  Serial.println(\"initialization done.\");\n\n}\n\nvoid appendFile(fs::FS &fs, const char * path, const char * message) {\n\n  if (xSemaphoreTake(semFile, 500)) {\n    File file = fs.open(path, FILE_APPEND);\n\n    if (!file) {\n      return;\n    }\n    file.print(message);\n    file.close();\n\n    xSemaphoreGive(semFile);\n  }\n}\n\nvoid writeFile(fs::FS &fs, const char * path, const char * message) {\n\n  if (xSemaphoreTake(semFile, 500)) {\n    File file = fs.open(path, FILE_WRITE);\n\n    if (!file) {\n      return;\n    }\n    file.print(message);\n    file.close();\n\n    xSemaphoreGive(semFile);\n  }\n}\nString readFile(fs::FS &fs, const char * path){\n    Serial.printf(\"Reading file: %s\\r\\n\", path);\n\n    File file = fs.open(path);\n    if(!file || file.isDirectory()){\n        Serial.println(\"- failed to open file for reading\");\n        return \"\";\n    }\n    String result;\n    Serial.println(\"- read from file:\");\n    while(file.available()){\n        result += String(char(file.read()));\n    }\n    file.close();\n    return result;\n}\n\nvoid renameFile(fs::FS &fs, const char * path1, const char * path2) {\n  if (xSemaphoreTake(semFile, 500)) {\n    fs.rename(path1, path2);\n    xSemaphoreGive(semFile);\n  }\n}\n\nvoid deleteFile(fs::FS &fs, const char * path) {\n  if (xSemaphoreTake(semFile, 500)) {\n    fs.remove(path);\n    xSemaphoreGive(semFile);\n  }\n}\n\n// write the default index.htm to SPIFFS\n//  check if index exists and only update if it doesn't\n//void checkForIndex(){\n////  if(SPIFFS.exists(\"/data.json\")) {\n////    state.json(readFile(SPIFFS, \"/data.json\"));\n////    Serial.println(state.json());\n////  }\n//  if(SPIFFS.exists(\"/index.htm\")) return; // \n//  deleteFile(SPIFFS,\"/index.htm\");\n//  delay(500);\n//  File file = SPIFFS.open(\"/index.htm\", FILE_WRITE);\n//    file.print(htmlCode);\n//    file.close();\n//    }\n\n#endif\n"}}}Content-Length: 998

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","languageId":"cpp","version":1,"text":"#ifndef BCBAWS\n#define BCBAWS\n#include <Arduino.h>\n#include <ESPAsyncWebServer.h>\n#include <SPIFFS.h>\n#include \"State.h\"\n//#include <HTTPClient.h>\n\n\n\nclass BcbAws{\n  public:\nBcbAws();  \nBcbAwsInit(State*istate);\nAsyncWebServer server = AsyncWebServer(80);\nAsyncWebSocket ws = AsyncWebSocket(\"/ws\");\n\nvoid parseCommand(String command);\nvoid notifyClients();\nvoid handleWebSocketMessage(void *arg, uint8_t *data, size_t len);\nvoid deleteFile(fs::FS &fs, const char * path);\nvoid renameFile(fs::FS &fs, const char * path1, const char * path2);\nString readFile(fs::FS &fs, const char * path);\nvoid writeFile(fs::FS &fs, const char * path, const char * message);\nvoid appendFile(fs::FS &fs, const char * path, const char * message);\n\n  private:\n  State* state;\n};\n#endif\n"}}}Content-Length: 3739

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","languageId":"cpp","version":1,"text":"#include\"bcbaws.h\"\n#include<FS.h>\n#include<SPIFFS.h>\nBcbAws::BcbAws() {}\nBcbAws::BcbAwsInit(State* istate) {\n  state = istate;\n  SPIFFS.begin(true);\n  server.on(\"/\", HTTP_GET, [ = ](AsyncWebServerRequest * request) {\n    request->send(SPIFFS, \"/index.htm\", \"text/html\");\n  });\n\n  server.on(\"/config\", HTTP_GET, [ = ](AsyncWebServerRequest * request) {\n    request->send(SPIFFS, \"/config.htm\", \"text/html\");\n  });\n\n  server.on(\"/json\", HTTP_GET, [ = ](AsyncWebServerRequest * request) {\n    request->send(200, \"application/json\", state->getJSON());\n  });\n  // start the web server\n  server.begin();\n  ws.onEvent([ = ](AsyncWebSocket * server, AsyncWebSocketClient * client,\n  AwsEventType type, void *arg, uint8_t *data, size_t len) {\n    switch (type) {\n      case WS_EVT_CONNECT:\n        notifyClients();\n        break;\n      case WS_EVT_DISCONNECT:\n        Serial.printf(\"WebSocket client #%u disconnected\\n\", client->id());\n        break;\n      case WS_EVT_DATA:\n        handleWebSocketMessage(arg, data, len);\n        break;\n      case WS_EVT_PONG:\n      case WS_EVT_ERROR:\n        break;\n    }\n  });\n  server.addHandler(&ws);\n}\n\nvoid BcbAws::notifyClients() {\n  ws.textAll(state->getJSON());  // send non-slider updating data\n}\n\nvoid BcbAws::handleWebSocketMessage(void *arg, uint8_t *data, size_t len) { // receive the comm from the client and convert it into a string\n  AwsFrameInfo *info = (AwsFrameInfo *)arg;\n  if (info->final && info->index == 0 && info->len == len &&\n      info->opcode == WS_TEXT) {\n    data[len] = 0;\n    parseCommand((char *)data);\n  }\n}\n\n\nvoid BcbAws::parseCommand(String command) {\n\n  if (command == \"relay\") {\n    state->relay(!state->relay());\n    digitalWrite(2, state->relay());\n    notifyClients();\n  }\n  // file upload handler\n\n  if (command.substring(0, 4) == \"upld\") {\n    state->filename(command.substring(5));\n    deleteFile(SPIFFS, \"/temp.txt\");\n  }\n\n  if (command.substring(0, 4) == \"comp\") {\n    deleteFile(SPIFFS, (\"/\" + state->filename()).c_str());\n    renameFile(SPIFFS, \"/temp.txt\", (\"/\" + state->filename()).c_str());\n    state->filename(\"\");\n  }\n\n  if (command.substring(0, 4) == \"file\") {\n    String message = command.substring(5);\n    appendFile(SPIFFS, \"/temp.txt\", message.c_str());\n  }\n\n  if (command == \"reload\") {\n    state->reload(true);\n    notifyClients();\n    state->reload(false);\n  }\n}\n\nvoid BcbAws::appendFile(fs::FS &fs, const char * path, const char * message) {\n\n  File file = fs.open(path, FILE_APPEND);\n\n  if (!file) {\n    return;\n  }\n  file.print(message);\n  file.close();\n\n\n}\n\nvoid BcbAws::writeFile(fs::FS &fs, const char * path, const char * message) {\n\n  File file = fs.open(path, FILE_WRITE);\n\n  if (!file) {\n    return;\n  }\n  file.print(message);\n  file.close();\n\n\n}\nString BcbAws::readFile(fs::FS &fs, const char * path) {\n  Serial.printf(\"Reading file: %s\\r\\n\", path);\n\n  File file = fs.open(path);\n  if (!file || file.isDirectory()) {\n    Serial.println(\"- failed to open file for reading\");\n    return \"\";\n  }\n  String result;\n  Serial.println(\"- read from file:\");\n  while (file.available()) {\n    result += String(char(file.read()));\n  }\n  file.close();\n  return result;\n}\n\nvoid BcbAws::renameFile(fs::FS &fs, const char * path1, const char * path2) {\n\n  fs.rename(path1, path2);\n}\n\nvoid BcbAws::deleteFile(fs::FS &fs, const char * path) {\n\n  fs.remove(path);\n\n}\n"}}}Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h","languageId":"cpp","version":1,"text":"// wifi connection credentials\nconst char *ssid = \"Espnet\";\nconst char *password = \"8141695320\";\n"}}}Content-Length: 352

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred.h","languageId":"cpp","version":1,"text":"\n//wifi connection credentials\nconst char* ssid     = \"Espnet\";\n//const char* ssid     = \"Frontier4848\";\nconst char* password = \"*********\";\n"}}}Content-Length: 729

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h","languageId":"cpp","version":1,"text":"#ifndef STATE\n#define STATE\n#include<Arduino.h>\n#include<map>\n//set initial state\n\nclass State {\n  public:\n\n    int moisture();\n\n    int threshold();\n    int threshold(int value);\n\n\n    String filename();\n    String filename(String value);\n\n\n    bool setOta (bool value);\n    bool getOta ();\n\n    bool reload();\n    bool reload(bool value);\n\n    bool relay();\n    bool relay(bool value);\n\n    String getJSON();\n\n  private:\n    std::map<String, String> jsonMap;\n    bool ota = false;\n\n};\n\n#endif\n"}}}Content-Length: 1893

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp","languageId":"cpp","version":1,"text":"#include\"State.h\"\n\nint State::moisture() {\n      int avg = 0;\n      for (int num = 0; num <= 9; num++) {\n        avg += analogRead(32);\n      }\n      jsonMap[\"moisture\"] = String(avg / 10);\n      return avg / 10;\n    }\n\n\n    int State::threshold() {\n      return jsonMap[\"threshold\"].toInt();\n    };\n    \n    int State::threshold(int value) {\n      jsonMap[\"threshold\"] = String(value);\n      return jsonMap[\"threshold\"].toInt();\n    };\n    \n\n    String State::filename() {\n      return jsonMap[\"filename\"];\n    };\n    \n    String State::filename(String value) {\n      jsonMap[\"filename\"] = value;\n      return jsonMap[\"filename\"];\n    };\n\n\n    bool State::setOta (bool value) {\n      ota = value;\n      return ota;\n    };\n    \n    bool State::getOta () {\n      return ota;\n    };\n\n\n    bool State::reload() {\n      return (jsonMap[\"reload\"] == \"true\");\n    };\n    \n    bool State::reload(bool value) {\n      jsonMap[\"reload\"] = value ? \"true\" : \"false\";\n      return (jsonMap[\"reload\"] == \"true\");\n    };\n\n\n    bool State::relay() {\n      return (jsonMap[\"relay\"] == \"true\");\n    };\n    \n    bool State::relay(bool value) {\n      jsonMap[\"relay\"] = value ? \"true\" : \"false\";\n      return (jsonMap[\"relay\"] == \"true\");\n    };\n\n\n    String State::getJSON() {\n      moisture();\n      String json = \"{\";\n      String quote = \"\\\"\";\n      for (auto const x : jsonMap) {\n        if (json.length() > 3) json += \",\";\n        json += quote + x.first + quote + \":\" + quote + x.second + quote;\n      };\n      json += \"}\";\n      Serial.println(json);\n      return json;\n    }\n"}}}Content-Length: 5179

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","languageId":"cpp","version":1,"text":"#include <Arduino.h>\n#include \"State.h\"\n#include \"time.h\"\n#include \"WiFiCred1.h\"\n#include <ArduinoJson.h>\n#include <ArduinoOTA.h>\n#include <ESPmDNS.h>\n#include <WiFi.h>\n#include <WiFiUdp.h>\n#include \"bcbaws.h\"\n\n#define ARDUINO_RUNNING_CORE 1\nState state;\n\n// internal rtc variables\nconst char *ntpServer = \"pool.ntp.org\";\nconst long gmtOffset_sec = -18000;\nconst int daylightOffset_sec = 3600;\n\n\nbool wifiavail = false;\n\n// localtime from internal rtc\nString printLocalTime() {\n  struct tm timeinfo;\n  if (!getLocalTime(&timeinfo)) {\n    return (\"\");\n  }\n  return (asctime(&timeinfo));\n}\n\nString printLocalHour() {\n  struct tm timeinfo;\n  if (!getLocalTime(&timeinfo)) {\n    return (\"\");\n  }\n  return (String(asctime(&timeinfo)).substring(11, 16) + \" \");\n}\n\n// define functions\nvoid UpdateClients(void *pvParameters); // maintains the websocket display\n//void UpdateDatabase(void *pvParameters); // maintains the websocket display\nvoid initWiFi();\nvoid initTime();\n\n\nBcbAws aws;\n\nvoid setup() {\n  // start the serial interface\n  Serial.begin(115200);\n  delay(500);\n  initWiFi();\n  initTime();\n  aws.(&state);\n  digitalWrite(2, LOW);\n  pinMode(2, OUTPUT);\n  state.relay(false);\n  \n  xTaskCreatePinnedToCore(UpdateClients, // function name \n                          \"updateClients\" // A name just for humans\n                          ,\n                          4096 // This stack size can be checked & adjusted by\n                          // reading the Stack Highwater\n                          ,\n                          NULL,// task input parameter\n                          2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n                          // being the highest, and 0 being the lowest.\n                          ,\n                          NULL, // task handle\n                          ARDUINO_RUNNING_CORE);\n//\n//  xTaskCreatePinnedToCore(UpdateDatabase, \"updateDatabase\" // A name just for humans\n//                          ,\n//                          4096 // This stack size can be checked & adjusted by\n//                          // reading the Stack Highwater\n//                          ,\n//                          NULL, 2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n//                          // being the highest, and 0 being the lowest.\n//                          ,\n//                          NULL, ARDUINO_RUNNING_CORE);\n\n  ArduinoOTA\n  .onStart([]() {\n    String type;\n    if (ArduinoOTA.getCommand() == U_FLASH)\n      type = \"sketch\";\n    else // U_SPIFFS\n      type = \"filesystem\";\n\n    // NOTE: if updating SPIFFS this would be the place to unmount SPIFFS\n    SPIFFS.end();\n // Disable client connections    \n    aws.ws.enable(false);\n\n    // Advertise connected clients what's going on\n    aws.ws.textAll(\"OTA Update Started\");\n\n    // Close them\n    aws.ws.closeAll();\n    state.setOta(true);\n\n    \n    Serial.println(\"Start updating \" + type);\n  })\n  .onEnd([]() {\n    Serial.println(\"\\nEnd\");\n  })\n  .onProgress([](unsigned int progress, unsigned int total) {\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\n  })\n  .onError([](ota_error_t error) {\n    Serial.printf(\"Error[%u]: \", error);\n    if (error == OTA_AUTH_ERROR)\n      Serial.println(\"Auth Failed\");\n    else if (error == OTA_BEGIN_ERROR)\n      Serial.println(\"Begin Failed\");\n    else if (error == OTA_CONNECT_ERROR)\n      Serial.println(\"Connect Failed\");\n    else if (error == OTA_RECEIVE_ERROR)\n      Serial.println(\"Receive Failed\");\n    else if (error == OTA_END_ERROR)\n      Serial.println(\"End Failed\");\n  });\n  ArduinoOTA.begin();\n}\n\nvoid loop() {\n  ArduinoOTA.handle(); // check if an update is available\n  if (WiFi.status() != WL_CONNECTED) // check if wifi is still connected, if not, reconnect\n    initWiFi();\n  vTaskDelay(60);\n}\n\nvoid UpdateClients(void *pvParameters) { // handle websocket and oled displays\n  (void)pvParameters;\n  for (;;) {\n    if(!state.getOta()) {aws.notifyClients();} // send state to the client as a json string\n    vTaskDelay(10000);\n  }\n}\n\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() > 3400 && state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}\n\n\n\n\nvoid initWiFi() {\n  Serial.println(\"connecting to wifi\");\n  // connect to wifi\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  if (WiFi.waitForConnectResult() != WL_CONNECTED) {\n  Serial.println(\"connecting to wifi failed\");\n  delay(500);\n  initWiFi();\n  }\n  Serial.println(\"wifi connected\");\n  wifiavail = true;\n}\n\nvoid initTime() {\n  // set the clock from ntp server\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n  printLocalTime();\n}\n"}}}Content-Length: 275

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 273

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 270

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 272

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/g
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 1130

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":16}},"severity":2,"code":"misc-definitions-in-headers","source":"clang-tidy","message":"Variable 'ssid' defined in a header file; variable definitions in header files can lead to ODR violations"},{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":20}},"severity":2,"code":"misc-definitions-in-headers","source":"clang-tidy","message":"Variable 'password' defined in a header file; variable definitions in header files can lead to ODR violations"}]},"jsonrpc":"2.0"}Content-Length: 1131

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":1,"character":12},"end":{"line":1,"character":16}},"severity":2,"code":"misc-definitions-in-headers","source":"clang-tidy","message":"Variable 'ssid' defined in a header file; variable definitions in header files can lead to ODR violations"},{"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":20}},"severity":2,"code":"misc-definitions-in-headers","source":"clang-tidy","message":"Variable 'password' defined in a header file; variable definitions in header files can lead to ODR violations"}]},"jsonrpc":"2.0"}Content-Length: 1072

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":3,"character":11},"end":{"line":3,"character":19}},"severity":1,"code":"typecheck_incomplete_array_needs_initializer","source":"clang","message":"Definition of variable with array type needs an explicit size or an initializer"},{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":28}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 1027

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":9}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 1030

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 1032

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":15}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 1233

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":10}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":3,"result":[],"jsonrpc":"2.0"}
<<<
arden/garden/bcbaws.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 273

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 269

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 271

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":2,"character":17},"end":{"line":2,"character":17}},"context":{"diagnostics":[]}}}Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}Content-Length: 693

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 696

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 690

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 692

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volati
>>>
Content-Length: 1233

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":18}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":4,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":5,"result":[],"jsonrpc":"2.0"}Content-Length: 1097

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":19}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here"},{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":7}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":6,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":7,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":8,"result":[],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/67","percentage":1.492537313432836,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 36

{"id":9,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":11,"result":[],"jsonrpc":"2.0"}
<<<
le-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 694

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 691

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 693

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}Content-Length: 275

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":2,"character":17},"end":{"line":2,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":12,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":13,"result":[],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/67","percentage":2.985074626865672,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/67","percentage":2.985074626865672,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 37

{"id":14,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":15,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/67","percentage":4.477611940298507,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/67","percentage":4.477611940298507,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/67","percentage":5.970149253731344,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/67","percentage":5.970149253731344,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/67","percentage":7.462686567164179,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/67","percentage":7.462686567164179,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/67","percentage":8.955223880597014,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/67","percentage":8.955223880597014,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/67","percentage":10.447761194029852,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/67","percentage":10.447761194029852,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/67","percentage":11.940298507462687,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/67","percentage":11.940298507462687,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/67","percentage":13.432835820895523,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/67","percentage":14.925373134328359,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/67","percentage":16.417910447761194,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/67","percentage":16.417910447761194,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/67","percentage":17.91044776119403,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/67","percentage":17.91044776119403,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/67","percentage":19.402985074626866,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/67","percentage":19.402985074626866,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/67","percentage":20.895522388059703,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/67","percentage":20.895522388059703,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/67","percentage":22.388059701492537,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/67","percentage":22.388059701492537,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/67","percentage":23.880597014925375,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/67","percentage":23.880597014925375,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/67","percentage":25.37313432835821,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/67","percentage":25.37313432835821,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/67","percentage":26.865671641791046,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/67","percentage":28.35820895522388,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/67","percentage":28.35820895522388,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/67","percentage":29.850746268656717,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/67","percentage":29.850746268656717,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/67","percentage":31.34328358208955,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/67","percentage":31.34328358208955,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/67","percentage":32.83582089552239,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/67","percentage":32.83582089552239,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/67","percentage":34.32835820895522,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/67","percentage":34.32835820895522,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/67","percentage":35.82089552238806,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/67","percentage":35.82089552238806,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/67","percentage":37.3134328358209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/67","percentage":37.3134328358209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/67","percentage":38.80597014925373,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/67","percentage":38.80597014925373,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/67","percentage":40.298507462686565,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/67","percentage":41.791044776119406,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/67","percentage":41.791044776119406,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/67","percentage":43.28358208955224,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/67","percentage":43.28358208955224,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/67","percentage":44.776119402985074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/67","percentage":44.776119402985074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/67","percentage":46.26865671641791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/67","percentage":46.26865671641791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/67","percentage":47.76119402985075,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/67","percentage":47.76119402985075,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/67","percentage":49.25373134328358,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/67","percentage":49.25373134328358,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/67","percentage":50.74626865671642,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/67","percentage":50.74626865671642,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/67","percentage":52.23880597014925,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/67","percentage":52.23880597014925,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/67","percentage":53.73134328358209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/67","percentage":53.73134328358209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/67","percentage":55.223880597014926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/67","percentage":55.223880597014926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"38/67","percentage":56.71641791044776,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"38/67","percentage":56.71641791044776,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"39/67","percentage":58.208955223880594,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"39/67","percentage":58.208955223880594,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"40/67","percentage":59.701492537313435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"40/67","percentage":59.701492537313435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"41/67","percentage":61.19402985074627,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"41/67","percentage":61.19402985074627,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"42/67","percentage":62.6865671641791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"42/67","percentage":62.6865671641791,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":9,"character":19}}}
>>>
Content-Length: 39

{"id":17,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 603

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":19}},"message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here","severity":1,"code":"missing_type_specifier","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 37

{"id":18,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"43/67","percentage":64.17910447761194,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"43/67","percentage":64.17910447761194,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"44/67","percentage":65.67164179104478,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"44/67","percentage":65.67164179104478,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"45/67","percentage":67.16417910447761,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"45/67","percentage":67.16417910447761,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"46/67","percentage":68.65671641791045,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"46/67","percentage":68.65671641791045,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"47/67","percentage":70.14925373134328,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"48/67","percentage":71.64179104477611,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"48/67","percentage":71.64179104477611,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"49/67","percentage":73.13432835820896,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"49/67","percentage":73.13432835820896,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"50/67","percentage":74.6268656716418,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"50/67","percentage":74.6268656716418,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"51/67","percentage":76.11940298507463,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"51/67","percentage":76.11940298507463,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"52/67","percentage":77.61194029850746,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"52/67","percentage":77.61194029850746,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"53/67","percentage":79.1044776119403,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"53/67","percentage":79.1044776119403,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"54/67","percentage":80.59701492537313,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"55/67","percentage":82.08955223880596,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"55/67","percentage":82.08955223880596,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"56/67","percentage":83.58208955223881,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"56/67","percentage":83.58208955223881,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"57/67","percentage":85.07462686567165,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"57/67","percentage":85.07462686567165,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"58/67","percentage":86.56716417910448,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"59/67","percentage":88.05970149253731,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"59/67","percentage":88.05970149253731,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"60/67","percentage":89.55223880597015,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"60/67","percentage":89.55223880597015,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"61/67","percentage":91.04477611940298,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"61/67","percentage":91.04477611940298,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"62/67","percentage":92.53731343283582,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"63/67","percentage":94.02985074626865,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"64/67","percentage":95.5223880597015,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"65/67","percentage":97.01492537313433,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"66/67","percentage":98.50746268656717,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":19,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h"},"position":{"line":4,"character":14}}}
>>>
Content-Length: 39

{"id":19,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":20,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":12,"character":11}}}
>>>
Content-Length: 240

{"id":20,"result":{"contents":{"kind":"markdown","value":"### variable `state`  \n\n---\nType: `class State`  \n\n---\n```cpp\nState state\n```"},"range":{"start":{"line":13,"character":6},"end":{"line":13,"character":11}}},"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":21,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":9,"character":17}}}
>>>
Content-Length: 39

{"id":21,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 603

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":19}},"message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here","severity":1,"code":"missing_type_specifier","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 37

{"id":22,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":9,"character":17}}}
>>>
Content-Length: 37

{"id":23,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 584

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":9,"character":17},"end":{"line":9,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":19}},"message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here","severity":1,"code":"missing_type_specifier","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":24,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":5,"character":8}}}
>>>
Content-Length: 39

{"id":25,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":26,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":3,"character":0}}}
>>>
Content-Length: 253

{"id":26,"result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include \u003cHTTPClient.h\u003e  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":6}}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":3,"character":0}}}
>>>
Content-Length: 253

{"id":27,"result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include \u003cHTTPClient.h\u003e  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":6}}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":0}}}
>>>
Content-Length: 253

{"id":28,"result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include \u003cHTTPClient.h\u003e  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":6}}},"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"jsonrpc":"2.0","id":29,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":4,"character":0}}}
>>>
Content-Length: 1002

{"id":29,"result":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":6}},"kind":1},{"range":{"start":{"line":3,"character":8},"end":{"line":3,"character":14}},"kind":1},{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":6}},"kind":1},{"range":{"start":{"line":40,"character":5},"end":{"line":40,"character":11}},"kind":1},{"range":{"start":{"line":44,"character":5},"end":{"line":44,"character":11}},"kind":1},{"range":{"start":{"line":54,"character":5},"end":{"line":54,"character":11}},"kind":1},{"range":{"start":{"line":86,"character":5},"end":{"line":86,"character":11}},"kind":1},{"range":{"start":{"line":99,"character":5},"end":{"line":99,"character":11}},"kind":1},{"range":{"start":{"line":111,"character":7},"end":{"line":111,"character":13}},"kind":1},{"range":{"start":{"line":128,"character":5},"end":{"line":128,"character":11}},"kind":1},{"range":{"start":{"line":133,"character":5},"end":{"line":133,"character":11}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":30,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":31,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":6,"character":8}}}
>>>
Content-Length: 557

{"id":31,"result":{"contents":{"kind":"markdown","value":"### instance-method `begin`  \n\n---\n→ `bool`  \nParameters:  \n- `bool formatOnFail = false`\n- `const char * basePath = \"/spiffs\"`\n- `uint8_t maxOpenFiles = 10`\n- `const char * partitionLabel = __null`\n\n---\n```cpp\n// In SPIFFSFS\npublic: bool begin(bool formatOnFail = false, const char *basePath = \"/spiffs\",\n           uint8_t maxOpenFiles = 10, const char *partitionLabel = __null)\n```"},"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":8}}},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":2},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":0}},"rangeLength":0,"text":"v"}]}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":3},"contentChanges":[{"range":{"start":{"line":4,"character":1},"end":{"line":4,"character":1}},"rangeLength":0,"text":"o"}]}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":4},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 1561

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'voBcbAws'; did you mean 'BcbAws'? (fix available)\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:12:7:\nnote: 'BcbAws' declared here"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":20}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}Content-Length: 1562

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'voiBcbAws'; did you mean 'BcbAws'? (fix available)\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:12:7:\nnote: 'BcbAws' declared here"},{"range":{"start":{"line":4,"character":11},"end":{"line":4,"character":21}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 600

{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":3},"end":{"line":4,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":9}},"message":"Use of undeclared identifier 'voiBcbAws'; did you mean 'BcbAws'? (fix available)\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:12:7:\nnote: 'BcbAws' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":32,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":5},"contentChanges":[{"range":{"start":{"line":4,"character":3},"end":{"line":4,"character":3}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 1220

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'voidBcbAws'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":6},"contentChanges":[{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 1031

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":5},"end":{"line":4,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":33,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":6}}}Content-Length: 202

{"jsonrpc":"2.0","id":34,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"position":{"line":3,"character":17}}}
>>>
Content-Length: 39

{"id":34,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":12,"character":7}}}
>>>
Content-Length: 39

{"id":35,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":35}}Content-Length: 200

{"jsonrpc":"2.0","id":36,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":13,"character":3}}}
>>>
Content-Length: 317

{"id":36,"result":{"contents":{"kind":"markdown","value":"### instance-method `BcbAwsInit`  \n\n---\n→ `int`  \nParameters:  \n- `State * istate`\n\n---\n```cpp\n// In BcbAws\npublic: int BcbAwsInit(State *istate)\n```"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":37,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":13,"character":1}}}
>>>
Content-Length: 317

{"id":37,"result":{"contents":{"kind":"markdown","value":"### instance-method `BcbAwsInit`  \n\n---\n→ `int`  \nParameters:  \n- `State * istate`\n\n---\n```cpp\n// In BcbAws\npublic: int BcbAwsInit(State *istate)\n```"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":38,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":13,"character":1}}}
>>>
Content-Length: 317

{"id":38,"result":{"contents":{"kind":"markdown","value":"### instance-method `BcbAwsInit`  \n\n---\n→ `int`  \nParameters:  \n- `State * istate`\n\n---\n```cpp\n// In BcbAws\npublic: int BcbAwsInit(State *istate)\n```"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":39,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":13,"character":0}}}
>>>
Content-Length: 317

{"id":39,"result":{"contents":{"kind":"markdown","value":"### instance-method `BcbAwsInit`  \n\n---\n→ `int`  \nParameters:  \n- `State * istate`\n\n---\n```cpp\n// In BcbAws\npublic: int BcbAwsInit(State *istate)\n```"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 497

{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":10}},"message":"C++ requires a type specifier for all declarations","severity":1,"code":"missing_type_specifier","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 37

{"id":40,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":13,"character":0}}}
>>>
Content-Length: 124

{"id":41,"result":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":10}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 476

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":10}},"message":"C++ requires a type specifier for all declarations","severity":1,"code":"missing_type_specifier","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":42,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":2},"contentChanges":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":0}},"rangeLength":0,"text":"v"}]}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":3},"contentChanges":[{"range":{"start":{"line":13,"character":1},"end":{"line":13,"character":1}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 1233

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":11}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}Content-Length: 1233

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":4},"contentChanges":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":2}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 1233

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 476

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":3},"end":{"line":13,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":13}},"message":"C++ requires a type specifier for all declarations","severity":1,"code":"missing_type_specifier","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":43,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":5},"contentChanges":[{"range":{"start":{"line":13,"character":3},"end":{"line":13,"character":3}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 1233

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":6},"contentChanges":[{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":4}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":5},"end":{"line":13,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":44,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":6}}}Content-Length: 275

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":30},"end":{"line":13,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":45,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":46,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":14,"character":39}}}
>>>
Content-Length: 39

{"id":46,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 584

{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":19}},"message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here","severity":1,"code":"missing_type_specifier","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":47,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":12,"character":12},"end":{"line":12,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":48,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":49,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":9,"character":17}}}
>>>
Content-Length: 39

{"id":49,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 603

{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":19}},"message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here","severity":1,"code":"missing_type_specifier","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 37

{"id":50,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":51,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":54,"character":8}}}
>>>
Content-Length: 39

{"id":51,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":52,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":54,"character":6}}}
>>>
Content-Length: 39

{"id":52,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 471

{"jsonrpc":"2.0","id":53,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":7}},"message":"Expected unqualified-id","severity":1,"code":"expected_unqualified_id","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 37

{"id":53,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 451

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":7}},"message":"Expected unqualified-id","severity":1,"code":"expected_unqualified_id","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":54,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":55,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":59,"character":11}}}
>>>
Content-Length: 923

{"id":55,"result":{"contents":{"kind":"markdown","value":"### function `xTaskCreatePinnedToCore`  \n\n---\n→ `BaseType_t`  \nParameters:  \n- `TaskFunction_t pvTaskCode`\n- `const char *const pcName`\n- `const uint32_t usStackDepth`\n- `void *const pvParameters`\n- `UBaseType_t uxPriority`\n- `TaskHandle_t *const pvCreatedTask`\n- `const BaseType_t xCoreID`\n\n---\n```cpp\nBaseType_t xTaskCreatePinnedToCore(TaskFunction_t pvTaskCode,\n                                   const char *const pcName,\n                                   const uint32_t usStackDepth,\n                                   void *const pvParameters,\n                                   UBaseType_t uxPriority,\n                                   TaskHandle_t *const pvCreatedTask,\n                                   const BaseType_t xCoreID)\n```"},"range":{"start":{"line":69,"character":2},"end":{"line":69,"character":25}}},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":2},"contentChanges":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":6}},"rangeLength":0,"text":"a"}]}}Content-Length: 235

{"jsonrpc":"2.0","id":56,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":54,"character":7},"context":{"triggerKind":1}}}
>>>
Content-Length: 669

{"id":56,"result":{"isIncomplete":false,"items":[{"label":" appendFile(fs::FS \u0026fs, const char *path, const char *message)","kind":2,"detail":"void","sortText":"3ee51eb8appendFile","filterText":"appendFile","insertText":"appendFile","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":7}},"newText":"appendFile"}},{"label":" BcbAwsInit(State *istate)","kind":2,"detail":"int","sortText":"80000000BcbAwsInit","filterText":"BcbAwsInit","insertText":"BcbAwsInit","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":7}},"newText":"BcbAwsInit"}}]},"jsonrpc":"2.0"}Content-Length: 1091

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":19}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here"},{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":7}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'a' in 'BcbAws'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":3},"contentChanges":[{"range":{"start":{"line":54,"character":7},"end":{"line":54,"character":7}},"rangeLength":0,"text":"w"}]}}
>>>
Content-Length: 1092

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":19}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here"},{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":8}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'aw' in 'BcbAws'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":4},"contentChanges":[{"range":{"start":{"line":54,"character":8},"end":{"line":54,"character":8}},"rangeLength":0,"text":"s"}]}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":5},"contentChanges":[{"range":{"start":{"line":54,"character":9},"end":{"line":54,"character":9}},"rangeLength":0,"text":"w"}]}}
>>>
Content-Length: 1095

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":19}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here"},{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":10}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'awsw' in 'BcbAws'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 451

{"jsonrpc":"2.0","id":57,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":10},"end":{"line":54,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":10}},"message":"No member named 'awsw' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":57,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":5}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":6},"contentChanges":[{"range":{"start":{"line":54,"character":9},"end":{"line":54,"character":10}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 449

{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":9},"end":{"line":54,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":10}},"message":"No member named 'awsw' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":7},"contentChanges":[{"range":{"start":{"line":54,"character":8},"end":{"line":54,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":58}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":8},"contentChanges":[{"range":{"start":{"line":54,"character":7},"end":{"line":54,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":9},"contentChanges":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 449

{"jsonrpc":"2.0","id":59,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":10}},"message":"No member named 'awsw' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":10},"contentChanges":[{"range":{"start":{"line":54,"character":5},"end":{"line":54,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":59}}Content-Length: 275

{"jsonrpc":"2.0","id":60,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":5},"end":{"line":54,"character":5}},"context":{"diagnostics":[]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":10}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":11},"contentChanges":[{"range":{"start":{"line":54,"character":5},"end":{"line":54,"character":5}},"rangeLength":0,"text":"."}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":60}}Content-Length: 258

{"jsonrpc":"2.0","id":61,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":54,"character":6},"context":{"triggerKind":2,"triggerCharacter":"."}}}Content-Length: 449

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":10}},"message":"No member named 'awsw' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"tex
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}Content-Length: 37

{"id":58,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":59,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":60,"result":[],"jsonrpc":"2.0"}Content-Length: 3332

{"id":61,"result":{"isIncomplete":false,"items":[{"label":" BcbAwsInit(State *istate)","kind":2,"detail":"int","sortText":"3e97ae13BcbAwsInit","filterText":"BcbAwsInit","insertText":"BcbAwsInit","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"newText":"BcbAwsInit"}},{"label":" ws","kind":5,"detail":"AsyncWebSocket","sortText":"3eacc437ws","filterText":"ws","insertText":"ws","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"newText":"ws"}},{"label":" appendFile(fs::FS \u0026fs, const char *path, const char *message)","kind":2,"detail":"void","sortText":"3ee51eb8appendFile","filterText":"appendFile","insertText":"appendFile","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"newText":"appendFile"}},{"label":" deleteFile(fs::FS \u0026fs, const char *path)","kind":2,"detail":"void","sortText":"3ee51eb8deleteFile","filterText":"deleteFile","insertText":"deleteFile","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"newText":"deleteFile"}},{"label":" handleWebSocketMessage(void *arg, uint8_t *data, size_t len)","kind":2,"detail":"void","sortText":"3ee51eb8handleWebSocketMessage","filterText":"handleWebSocketMessage","insertText":"handleWebSocketMessage","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"newText":"handleWebSocketMessage"}},{"label":" notifyClients()","kind":2,"detail":"void","sortText":"3ee51eb8notifyClients","filterText":"notifyClients","insertText":"notifyClients","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"newText":"notifyClients"}},{"label":" parseCommand(String command)","kind":2,"detail":"void","sortText":"3ee51eb8parseCommand","filterText":"parseCommand","insertText":"parseCommand","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"newText":"parseCommand"}},{"label":" readFile(fs::FS \u0026fs, const char *path)","kind":2,"detail":"String","sortText":"3ee51eb8readFile","filterText":"readFile","insertText":"readFile","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"newText":"readFile"}},{"label":" renameFile(fs::FS \u0026fs, const char *path1, const char *path2)","kind":2,"detail":"void","sortText":"3ee51eb8renameFile","filterText":"renameFile","insertText":"renameFile","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"newText":"renameFile"}},{"label":" server","kind":5,"detail":"AsyncWebServer","sortText":"3ee51eb8server","filterText":"server","insertText":"server","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"newText":"server"}},{"label":" writeFile(fs::FS \u0026fs, const char *path, const char *message)","kind":2,"detail":"void","sortText":"3ee51eb8writeFile","filterText":"writeFile","insertText":"writeFile","insertTextFormat":2,"textEdit":{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"newText":"writeFile"}}]},"jsonrpc":"2.0"}Content-Length: 37

{"id":62,"result":[],"jsonrpc":"2.0"}
<<<
tDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":11}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":12},"contentChanges":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":6}},"rangeLength":0,"text":"a"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":62}}Content-Length: 449

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":7},"end":{"line":54,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":10}},"message":"No member named 'awsw' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":13},"contentChanges":[{"range":{"start":{"line":54,"character":7},"end":{"line":54,"character":7}},"rangeLength":0,"text":"s"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":63}}Content-Length: 449

{"jsonrpc":"2.0","id":64,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":8},"end":{"line":54,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":10}},"message":"No member named 'awsw' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":13}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":14},"contentChanges":[{"range":{"start":{"line":54,"character":7},"end":{"line":54,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":64}}Content-Length: 449

{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":7},"end":{"line":54,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":10}},"message":"No member named 'awsw' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":14}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":15},"contentChanges":[{"range":{"start":{"line":54,"character":7},"end":{"line":54,"character":7}},"rangeLength":0,"text":"w"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":65}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":16},"contentChanges":[{"range":{"start":{"line":54,"character":8},"end":{"line":54,"character":8}},"rangeLength":0,"text":"s"}]}}Content-Length: 449

{"jsonrpc":"2.0","id":66,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"st
>>>
Content-Length: 37

{"id":63,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":64,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":65,"result":[],"jsonrpc":"2.0"}
<<<
art":{"line":54,"character":9},"end":{"line":54,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":10}},"message":"No member named 'awsw' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":16}}}Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 37

{"id":66,"result":[],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 783

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":9}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'aws' in 'BcbAws'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":9},"end":{"line":54,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":9}},"message":"No member named 'aws' in 'BcbAws'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":67,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":68,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":56,"character":21}}}
>>>
Content-Length: 39

{"id":68,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":17},"contentChanges":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":9}},"rangeLength":3,"text":"BcbAwsInit"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":69,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":16},"end":{"line":54,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":69,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":17}}}Content-Length: 203

{"jsonrpc":"2.0","id":70,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":54,"character":25}}}
>>>
Content-Length: 39

{"id":70,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":71,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":25},"end":{"line":54,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":71,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":72,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":0,"character":9}}}
>>>
Content-Length: 39

{"id":72,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 734

{"jsonrpc":"2.0","id":73,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","severity":1,"code":"unknown_typename","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 37

{"id":73,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":74,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":4,"character":15}}}
>>>
Content-Length: 39

{"id":74,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":75,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":1,"character":8}}}
>>>
Content-Length: 39

{"id":75,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":76,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":43,"character":1}}}
>>>
Content-Length: 39

{"id":76,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":77,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":49,"character":25}}}
>>>
Content-Length: 39

{"id":77,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":78,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":49,"character":25}}}
>>>
Content-Length: 39

{"id":78,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":79,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":46,"character":11}}}
>>>
Content-Length: 39

{"id":79,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":80,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":81,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":46,"character":8}}}
>>>
Content-Length: 238

{"id":81,"result":{"contents":{"kind":"markdown","value":"### variable `aws`  \n\n---\nType: `class BcbAws`  \n\n---\n```cpp\nBcbAws aws\n```"},"range":{"start":{"line":56,"character":7},"end":{"line":56,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":82,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":46,"character":7}}}
>>>
Content-Length: 238

{"id":82,"result":{"contents":{"kind":"markdown","value":"### variable `aws`  \n\n---\nType: `class BcbAws`  \n\n---\n```cpp\nBcbAws aws\n```"},"range":{"start":{"line":56,"character":7},"end":{"line":56,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 414

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":18},"contentChanges":[{"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":11}},"rangeLength":11,"text":""},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":0}},"rangeLength":0,"text":"BcbAws aws;"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":83,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":18}}}Content-Length: 277

{"jsonrpc":"2.0","id":84,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":13,"character":11},"end":{"line":13,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":84,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":85,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":9,"character":16}}}
>>>
Content-Length: 39

{"id":85,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":86,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":14,"character":3}}}
>>>
Content-Length: 39

{"id":86,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":87,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":11,"character":6}}}
>>>
Content-Length: 39

{"id":87,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":88,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":4,"character":9}}}
>>>
Content-Length: 39

{"id":88,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":89,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":6,"character":14}}}
>>>
Content-Length: 39

{"id":89,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":90,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":2,"character":10}}}
>>>
Content-Length: 39

{"id":90,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":91,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":1,"character":9}}}
>>>
Content-Length: 39

{"id":91,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":92,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":1,"character":9}}}
>>>
Content-Length: 39

{"id":92,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":93,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":0,"character":10}}}
>>>
Content-Length: 39

{"id":93,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":94,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":0,"character":10}}}
>>>
Content-Length: 37

{"id":94,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 715

{"jsonrpc":"2.0","id":95,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":95,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":96,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":0,"character":9}}}
>>>
Content-Length: 39

{"id":96,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 734

{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","severity":1,"code":"unknown_typename","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 37

{"id":97,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 161

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbsdcard.h"}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":19},"contentChanges":[{"range":{"start":{"line":44,"character":0},"end":{"line":45,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":20},"contentChanges":[{"range":{"start":{"line":44,"character":0},"end":{"line":45,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":20}}}Content-Length: 203

{"jsonrpc":"2.0","id":98,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":46,"character":13}}}
>>>
Content-Length: 39

{"id":98,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":99,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":46,"character":12}}}
>>>
Content-Length: 39

{"id":99,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":100,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":100,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":101,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":45,"character":0}}}
>>>
Content-Length: 40

{"id":101,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":102,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":44,"character":0}}}
>>>
Content-Length: 40

{"id":102,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":103,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":43,"character":1}}}
>>>
Content-Length: 40

{"id":103,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":43,"character":2}}}
>>>
Content-Length: 38

{"id":104,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":43,"character":2},"end":{"line":43,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":105,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":106,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":44,"character":0}}}
>>>
Content-Length: 40

{"id":106,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":107,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":44,"character":0}}}
>>>
Content-Length: 40

{"id":107,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 308

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":21},"contentChanges":[{"range":{"start":{"line":44,"character":0},"end":{"line":44,"character":0}},"rangeLength":0,"text":"oid setup()"}]}}
>>>
Content-Length: 1051

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":44,"character":0},"end":{"line":44,"character":3}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'oid'; did you mean 'void'? (fix available)"},{"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":44,"character":11},"end":{"line":44,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":108,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":21}}}Content-Length: 215

{"jsonrpc":"2.0","id":109,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":44,"character":0}}}
>>>
Content-Length: 38

{"id":109,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 491

{"jsonrpc":"2.0","id":110,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":44,"character":0},"end":{"line":44,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":44,"character":0},"end":{"line":44,"character":3}},"message":"Unknown type name 'oid'; did you mean 'void'? (fix available)","severity":1,"code":"unknown_typename_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":110,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":22},"contentChanges":[{"range":{"start":{"line":44,"character":0},"end":{"line":44,"character":0}},"rangeLength":0,"text":"v"}]}}
>>>
Content-Length: 835

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":111,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":44,"character":1},"end":{"line":44,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":111,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":22}}}Content-Length: 278

{"jsonrpc":"2.0","id":112,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":44,"character":12},"end":{"line":44,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":112,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":23},"contentChanges":[{"range":{"start":{"line":44,"character":12},"end":{"line":44,"character":12}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":113,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":44,"character":13},"end":{"line":44,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":113,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":23}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":24},"contentChanges":[{"range":{"start":{"line":44,"character":13},"end":{"line":44,"character":13}},"rangeLength":0,"text":"\n"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":24}}}Content-Length: 204

{"jsonrpc":"2.0","id":114,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":79,"character":18}}}
>>>
Content-Length: 40

{"id":114,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":71,"character":0},"end":{"line":79,"character":56}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":115,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":116,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":70,"character":0},"end":{"line":79,"character":56}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":116,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":25},"contentChanges":[{"range":{"start":{"line":70,"character":0},"end":{"line":79,"character":56}},"rangeLength":533,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":25}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":26},"contentChanges":[{"range":{"start":{"line":70,"character":0},"end":{"line":71,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":26}}}Content-Length: 204

{"jsonrpc":"2.0","id":117,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":69,"character":18}}}
>>>
Content-Length: 40

{"id":117,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":118,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":69,"character":18}}}
>>>
Content-Length: 40

{"id":118,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":119,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":92,"character":44}}}
>>>
Content-Length: 334

{"id":119,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `const String \u0026 s`\n\n---\n```cpp\n// In Print\npublic: size_t println(const String \u0026s)\n```"},"range":{"start":{"line":102,"character":44},"end":{"line":102,"character":45}}},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":120,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":92,"character":45},"end":{"line":92,"character":45}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":120,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":91,"character":4},"end":{"line":92,"character":45}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":121,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":27},"contentChanges":[{"range":{"start":{"line":91,"character":4},"end":{"line":92,"character":45}},"rangeLength":46,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":27}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":28},"contentChanges":[{"range":{"start":{"line":91,"character":2},"end":{"line":91,"character":4}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":29},"contentChanges":[{"range":{"start":{"line":91,"character":0},"end":{"line":91,"character":2}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":30},"contentChanges":[{"range":{"start":{"line":90,"character":0},"end":{"line":91,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":30}}}Content-Length: 204

{"jsonrpc":"2.0","id":122,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":93,"character":28}}}
>>>
Content-Length: 40

{"id":122,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":123,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":93,"character":28},"end":{"line":93,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":123,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":124,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":92,"character":15},"end":{"line":93,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":124,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":31},"contentChanges":[{"range":{"start":{"line":92,"character":15},"end":{"line":93,"character":28}},"rangeLength":29,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":125,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":92,"character":15},"end":{"line":92,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":125,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":31}}}Content-Length: 278

{"jsonrpc":"2.0","id":126,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":95,"character":66},"end":{"line":95,"character":66}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":126,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":127,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":94,"character":61},"end":{"line":95,"character":66}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":127,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":32},"contentChanges":[{"range":{"start":{"line":94,"character":61},"end":{"line":95,"character":66}},"rangeLength":67,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":128,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":94,"character":61},"end":{"line":94,"character":61}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":128,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":32}}}Content-Length: 205

{"jsonrpc":"2.0","id":129,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":100,"character":36}}}
>>>
Content-Length: 280

{"id":129,"result":{"contents":{"kind":"markdown","value":"### enumerator `OTA_BEGIN_ERROR`  \n\n---\nType: `enum ota_error_t`  \nValue = `1`  \n\n---\n```cpp\nOTA_BEGIN_ERROR\n```"},"range":{"start":{"line":110,"character":22},"end":{"line":110,"character":37}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":130,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":99,"character":36}}}
>>>
Content-Length: 40

{"id":130,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":131,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":99,"character":36},"end":{"line":99,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":131,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":132,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":98,"character":32},"end":{"line":99,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":132,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":33},"contentChanges":[{"range":{"start":{"line":98,"character":32},"end":{"line":99,"character":36}},"rangeLength":37,"text":""}]}}
>>>
Content-Length: 779

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":99,"character":4},"end":{"line":99,"character":8}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":133,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":98,"character":32},"end":{"line":98,"character":32}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":133,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":134,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":97,"character":39}}}
>>>
Content-Length: 333

{"id":134,"result":{"contents":{"kind":"markdown","value":"### instance-method `printf`  \n\n---\n→ `size_t`  \nParameters:  \n- `const char * format`\n\n---\n```cpp\n// In Print\npublic: size_t printf(const char *format, ...)\n```"},"range":{"start":{"line":107,"character":39},"end":{"line":107,"character":40}}},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":33}}}Content-Length: 278

{"jsonrpc":"2.0","id":135,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":97,"character":40},"end":{"line":97,"character":40}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":135,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":136,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":96,"character":34},"end":{"line":97,"character":40}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":136,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":34},"contentChanges":[{"range":{"start":{"line":96,"character":34},"end":{"line":97,"character":40}},"rangeLength":41,"text":""}]}}
>>>
Content-Length: 779

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":98,"character":4},"end":{"line":98,"character":8}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":137,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":96,"character":34},"end":{"line":96,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":137,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":34}}}Content-Length: 204

{"jsonrpc":"2.0","id":138,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":98,"character":34}}}
>>>
Content-Length: 40

{"id":138,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":139,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":98,"character":33}}}
>>>
Content-Length: 40

{"id":139,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":140,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":98,"character":33}}}
>>>
Content-Length: 40

{"id":140,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":141,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":98,"character":33}}}
>>>
Content-Length: 40

{"id":141,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":35},"contentChanges":[{"range":{"start":{"line":96,"character":34},"end":{"line":96,"character":34}},"rangeLength":0,"text":"\n    Serial.printf(\"Error[%u]: \", error);"}]}}
>>>
Content-Length: 779

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":99,"character":4},"end":{"line":99,"character":8}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":142,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":96,"character":34},"end":{"line":97,"character":40}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":142,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":35}}}Content-Length: 278

{"jsonrpc":"2.0","id":143,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":97,"character":40},"end":{"line":97,"character":40}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":143,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":144,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":98,"character":32},"end":{"line":98,"character":32}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":144,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 339

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":36},"contentChanges":[{"range":{"start":{"line":98,"character":32},"end":{"line":98,"character":32}},"rangeLength":0,"text":"\n      Serial.println(\"Auth Failed\");"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":145,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":98,"character":32},"end":{"line":99,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":145,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":36}}}Content-Length: 278

{"jsonrpc":"2.0","id":146,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":99,"character":36},"end":{"line":99,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":146,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":147,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":108,"character":4}}}
>>>
Content-Length: 477

{"id":147,"result":{"contents":{"kind":"markdown","value":"### instance-method `onError`  \n\n---\n→ `ArduinoOTAClass \u0026`  \nParameters:  \n- `ArduinoOTAClass::THandlerFunction_Error fn`\n\nThis callback will be called when OTA encountered Error  \n\n---\n```cpp\n// In ArduinoOTAClass\npublic: ArduinoOTAClass \u0026onError(ArduinoOTAClass::THandlerFunction_Error fn)\n```"},"range":{"start":{"line":118,"character":4},"end":{"line":118,"character":5}}},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":148,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":107,"character":35},"end":{"line":107,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":148,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":149,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":96,"character":0},"end":{"line":107,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":149,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":150,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":96,"character":33},"end":{"line":107,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":150,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":151,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":96,"character":34},"end":{"line":107,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":151,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":37},"contentChanges":[{"range":{"start":{"line":96,"character":34},"end":{"line":107,"character":35}},"rangeLength":423,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":152,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":96,"character":34},"end":{"line":96,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":152,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":37}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":38},"contentChanges":[{"range":{"start":{"line":96,"character":34},"end":{"line":97,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":153,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":96,"character":34},"end":{"line":96,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":153,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":38}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":39},"contentChanges":[{"range":{"start":{"line":96,"character":34},"end":{"line":96,"character":35}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":154,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":96,"character":34},"end":{"line":96,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":154,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":39}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":40},"contentChanges":[{"range":{"start":{"line":96,"character":34},"end":{"line":96,"character":35}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":155,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":96,"character":34},"end":{"line":96,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":155,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":40}}}Content-Length: 204

{"jsonrpc":"2.0","id":156,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":96,"character":36}}}
>>>
Content-Length: 479

{"id":156,"result":{"contents":{"kind":"markdown","value":"### instance-method `onError`  \n\n---\n→ `ArduinoOTAClass \u0026`  \nParameters:  \n- `ArduinoOTAClass::THandlerFunction_Error fn`\n\nThis callback will be called when OTA encountered Error  \n\n---\n```cpp\n// In ArduinoOTAClass\npublic: ArduinoOTAClass \u0026onError(ArduinoOTAClass::THandlerFunction_Error fn)\n```"},"range":{"start":{"line":106,"character":36},"end":{"line":106,"character":37}}},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":157,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":96,"character":37},"end":{"line":96,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":157,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":158,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":95,"character":4},"end":{"line":96,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":158,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":41},"contentChanges":[{"range":{"start":{"line":95,"character":4},"end":{"line":96,"character":37}},"rangeLength":38,"text":""}]}}
>>>
Content-Length: 811

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":12}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":159,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":95,"character":4},"end":{"line":95,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":159,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":41}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":42},"contentChanges":[{"range":{"start":{"line":95,"character":4},"end":{"line":95,"character":4}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":95,"character":5},"end":{"line":95,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":160,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":42}}}Content-Length: 276

{"jsonrpc":"2.0","id":161,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":93,"character":4},"end":{"line":93,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":161,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":162,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":91,"character":4},"end":{"line":93,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":162,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":43},"contentChanges":[{"range":{"start":{"line":91,"character":4},"end":{"line":93,"character":4}},"rangeLength":21,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":163,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":91,"character":4},"end":{"line":91,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":163,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":43}}}Content-Length: 204

{"jsonrpc":"2.0","id":164,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":92,"character":26}}}
>>>
Content-Length: 40

{"id":164,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":165,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":92,"character":8}}}
>>>
Content-Length: 490

{"id":165,"result":{"contents":{"kind":"markdown","value":"### instance-method `onProgress`  \n\n---\n→ `ArduinoOTAClass \u0026`  \nParameters:  \n- `ArduinoOTAClass::THandlerFunction_Progress fn`\n\nThis callback will be called when OTA is receiving data  \n\n---\n```cpp\n// In ArduinoOTAClass\npublic: ArduinoOTAClass \u0026onProgress(ArduinoOTAClass::THandlerFunction_Progress fn)\n```"},"range":{"start":{"line":102,"character":3},"end":{"line":102,"character":13}}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":166,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":93,"character":5}}}
>>>
Content-Length: 40

{"id":166,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":167,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":93,"character":5},"end":{"line":93,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":167,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":168,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":91,"character":4},"end":{"line":93,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":168,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":44},"contentChanges":[{"range":{"start":{"line":91,"character":4},"end":{"line":93,"character":5}},"rangeLength":68,"text":";"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":169,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":91,"character":5},"end":{"line":91,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":169,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":44}}}Content-Length: 204

{"jsonrpc":"2.0","id":170,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":69,"character":16}}}
>>>
Content-Length: 40

{"id":170,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":171,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":69,"character":16}}}
>>>
Content-Length: 40

{"id":171,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":172,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":68,"character":11}}}
>>>
Content-Length: 40

{"id":172,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":173,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":85,"character":35}}}
>>>
Content-Length: 40

{"id":173,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":44}}}Content-Length: 170

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp","version":1}}}Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.h","version":1}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred.h","version":1}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/WiFiCred1.h","version":1}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","version":6}}}Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","version":6}}}Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/defaulthtml.h","version":1}}}
>>>
Content-Length: 1030

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 693

{"jsonrpc":"2.0","id":174,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument: '-fstrict-volatile-bitfields'","severity":1,"code":"drv_unknown_argument","source":"clang"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":174,"result":[],"jsonrpc":"2.0"}Content-Length: 1029

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 1031

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":18}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":175,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"range":{"start":{"line":13,"character":30},"end":{"line":13,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":175,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":176,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.cpp"},"range":{"start":{"line":4,"character":5},"end":{"line":4,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":176,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":177,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":15,"character":31}}}
>>>
Content-Length: 337

{"id":177,"result":{"contents":{"kind":"markdown","value":"### class `AsyncWebSocket`  \n\n---\nWebServer Handler implementation that plays the role of a socket server  \n\n---\n```cpp\nclass AsyncWebSocket : public AsyncWebHandler {}\n```"},"range":{"start":{"line":15,"character":20},"end":{"line":15,"character":34}}},"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":178,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/bcbaws.h"},"position":{"line":20,"character":30}}}
>>>
Content-Length: 270

{"id":178,"result":{"contents":{"kind":"markdown","value":"### param `path`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In BcbAws::deleteFile\nconst char *path\n```"},"range":{"start":{"line":20,"character":28},"end":{"line":20,"character":33}}},"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"jsonrpc":"2.0","id":179,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"position":{"line":0,"character":14}}}
>>>
Content-Length: 38

{"id":179,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 715

{"jsonrpc":"2.0","id":180,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":17}},"message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":180,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":181,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"position":{"line":4,"character":16}}}
>>>
Content-Length: 268

{"id":181,"result":{"contents":{"kind":"markdown","value":"### variable `num`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In State::moisture\nint num = 0\n```"},"range":{"start":{"line":4,"character":15},"end":{"line":4,"character":18}}},"jsonrpc":"2.0"}
<<<
Content-Length: 715

{"jsonrpc":"2.0","id":182,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":17}},"message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":182,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":183,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"position":{"line":3,"character":17}}}
>>>
Content-Length: 40

{"id":183,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":184,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"position":{"line":2,"character":17}}}
>>>
Content-Length: 278

{"id":184,"result":{"contents":{"kind":"markdown","value":"### instance-method `State::moisture`  \n\n---\n→ `int`  \n\n---\n```cpp\n// In State\npublic: int State::moisture()\n```"},"range":{"start":{"line":2,"character":11},"end":{"line":2,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":185,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"position":{"line":2,"character":16}}}
>>>
Content-Length: 278

{"id":185,"result":{"contents":{"kind":"markdown","value":"### instance-method `State::moisture`  \n\n---\n→ `int`  \n\n---\n```cpp\n// In State\npublic: int State::moisture()\n```"},"range":{"start":{"line":2,"character":11},"end":{"line":2,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":186,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"position":{"line":5,"character":16}}}
>>>
Content-Length: 320

{"id":186,"result":{"contents":{"kind":"markdown","value":"### function `analogRead`  \n\n---\n→ `uint16_t`  \nParameters:  \n- `uint8_t pin`\n\nGet ADC value for pin  \n\n---\n```cpp\nuint16_t analogRead(uint8_t pin)\n```"},"range":{"start":{"line":5,"character":15},"end":{"line":5,"character":25}}},"jsonrpc":"2.0"}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":187,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/State.cpp"},"position":{"line":4,"character":28}}}
>>>
Content-Length: 40

{"id":187,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":188,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":84,"character":38}}}
>>>
Content-Length: 40

{"id":188,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":188}}Content-Length: 278

{"jsonrpc":"2.0","id":189,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":119,"character":3},"end":{"line":119,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":189,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":190,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":109,"character":0},"end":{"line":119,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":190,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":45},"contentChanges":[{"range":{"start":{"line":109,"character":0},"end":{"line":119,"character":3}},"rangeLength":286,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":45}}}Content-Length: 204

{"jsonrpc":"2.0","id":191,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":122,"character":8}}}
>>>
Content-Length: 322

{"id":191,"result":{"contents":{"kind":"markdown","value":"### function `initWiFi`  \n\n---\n→ `void`  \nvoid UpdateDatabase(void \\*pvParameters); // maintains the websocket display  \n\n---\n```cpp\nvoid initWiFi()\n```"},"range":{"start":{"line":132,"character":2},"end":{"line":132,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":46},"contentChanges":[{"range":{"start":{"line":109,"character":0},"end":{"line":110,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":47},"contentChanges":[{"range":{"start":{"line":109,"character":0},"end":{"line":110,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":48},"contentChanges":[{"range":{"start":{"line":109,"character":0},"end":{"line":110,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":49},"contentChanges":[{"range":{"start":{"line":109,"character":0},"end":{"line":110,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":49}}}Content-Length: 205

{"jsonrpc":"2.0","id":192,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":115,"character":27}}}
>>>
Content-Length: 307

{"id":192,"result":{"contents":{"kind":"markdown","value":"### instance-method `waitForConnectResult`  \n\n---\n→ `uint8_t`  \n\n---\n```cpp\n// In WiFiSTAClass\npublic: uint8_t waitForConnectResult()\n```"},"range":{"start":{"line":125,"character":11},"end":{"line":125,"character":31}}},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":50},"contentChanges":[{"range":{"start":{"line":45,"character":0},"end":{"line":46,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":50}}}Content-Length: 278

{"jsonrpc":"2.0","id":193,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":44,"character":13},"end":{"line":44,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":193,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":194,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":43,"character":16},"end":{"line":44,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 386

{"id":194,"result":[{"title":"Move function body to declaration","kind":"refactor","command":{"title":"Move function body to declaration","command":"clangd.applyTweak","arguments":[{"tweakID":"DefineInline","file":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","selection":{"start":{"line":53,"character":16},"end":{"line":54,"character":13}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":195,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":44,"character":13},"end":{"line":44,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":195,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 595

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":51},"contentChanges":[{"range":{"start":{"line":44,"character":13},"end":{"line":44,"character":13}},"rangeLength":0,"text":"\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() > 3400 && state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":196,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":3},"end":{"line":54,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":196,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":197,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":46,"character":14}}}
>>>
Content-Length: 40

{"id":197,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":51}}}Content-Length: 204

{"jsonrpc":"2.0","id":198,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":46,"character":14}}}
>>>
Content-Length: 40

{"id":198,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":199,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":46,"character":14}}}
>>>
Content-Length: 40

{"id":199,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":52},"contentChanges":[{"range":{"start":{"line":44,"character":13},"end":{"line":54,"character":3}},"rangeLength":286,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":200,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":44,"character":13},"end":{"line":44,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":200,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":52}}}Content-Length: 278

{"jsonrpc":"2.0","id":201,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":43,"character":16},"end":{"line":44,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 386

{"id":201,"result":[{"title":"Move function body to declaration","kind":"refactor","command":{"title":"Move function body to declaration","command":"clangd.applyTweak","arguments":[{"tweakID":"DefineInline","file":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","selection":{"start":{"line":53,"character":16},"end":{"line":54,"character":13}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":202,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":44,"character":13},"end":{"line":44,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":202,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 595

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":53},"contentChanges":[{"range":{"start":{"line":44,"character":13},"end":{"line":44,"character":13}},"rangeLength":0,"text":"\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() > 3400 && state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":203,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":54,"character":3},"end":{"line":54,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":203,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":53}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":54},"contentChanges":[{"range":{"start":{"line":44,"character":13},"end":{"line":54,"character":3}},"rangeLength":286,"text":""}]}}
>>>
Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":204,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":44,"character":13},"end":{"line":44,"character":13}},"context":{"diagnostics":[]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":54}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":55},"contentChanges":[{"range":{"start":{"line":44,"character":13},"end":{"line":44,"character":13}},"rangeLength":0,"text":"\n"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":204}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":55}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":56},"contentChanges":[{"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":0}},"rangeLength":0,"text":"v"}]}}Content-Length: 236

{"jsonrpc":"2.0","id":205,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":45,"character":1},"context":{"triggerKind":1}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":57},"contentChanges":[{"range":{"start":{"line":45,"character":1},"end":{"line":45,"character":1}},"rangeLength":0,"text":"o"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":58},"contentChanges":[{"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":2}},"rangeLength":0,"text":"i"}]}}Content-Length: 276

{"jsonrpc":"2.0","id":206,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":45,"character":3},"end":{"line":45,"character":3}},"context":{"diagnostics":[]}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":59},"contentChanges":[{"range":{"start":{"line":45,"character":3},"end":{"line":45,"character":3}},"rangeLength":0,"text":"d"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":206}}Content-Length: 276

{"jsonrpc":"2.0","id":207,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":4}},"context":{"diagnostics":[]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":59}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":60},"contentChanges":[{"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":4}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":207}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/gar
>>>
Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":4,"jsonrpc":"2.0"}Content-Length: 38

{"id":204,"result":[],"jsonrpc":"2.0"}Content-Length: 76341

{"id":205,"result":{"isIncomplete":true,"items":[{"label":" void","kind":14,"sortText":"3ec00000void","filterText":"void","insertText":"void","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"void"}},{"label":" volatile","kind":14,"sortText":"3f000000volatile","filterText":"volatile","insertText":"volatile","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"volatile"}},{"label":" vTaskGetRunTimeStats(char *pcWriteBuffer)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Get the state of running tasks as a string  \nconfigGENERATE_RUN_TIME_STATS and configUSE_STATS_FORMATTING_FUNCTIONS must both be defined as 1 for this function to be available. The application must also then provide definitions for portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() and portGET_RUN_TIME_COUNTER_VALUE() to configure a peripheral timer/counter and return the timers current count value respectively. The counter should be at least 10 times the frequency of the tick count.  \n@note This function will disable interrupts for its duration. It is not intended for normal application runtime use but as a debug aid.  \nSetting configGENERATE_RUN_TIME_STATS to 1 will result in a total accumulated execution time being stored for each task. The resolution of the accumulated time value depends on the frequency of the timer configured by the portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() macro.  \nCalling vTaskGetRunTimeStats() writes the total execution time of each task into a buffer, both as an absolute count value and as a percentage of the total system execution time.  \n@note This function is provided for convenience only, and is used by many of the demo applications. Do not consider it to be part of the scheduler.  \nvTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part of the uxTaskGetSystemState() output into a human readable table that displays the amount of time each task has spent in the Running state in both absolute and percentage terms.  \nvTaskGetRunTimeStats() has a dependency on the sprintf() C library function that might bloat the code size, use a lot of stack, and provide different results on different platforms. An alternative, tiny, third party, and limited functionality implementation of sprintf() is provided in many of the FreeRTOS/Demo sub-directories in a file called printf-stdarg.c (note printf-stdarg.c does not provide a full snprintf() implementation!).  \nIt is recommended that production systems call uxTaskGetSystemState() directly to get access to raw stats data, rather than indirectly through a call to vTaskGetRunTimeStats().  \n@param pcWriteBuffer A buffer into which the execution times will be written, in ASCII form. This buffer is assumed to be large enough to contain the generated report. Approximately 40 bytes per task should be sufficient.  \n\\\\ingroup TaskUtils"},"sortText":"3fefa429vTaskGetRunTimeStats","filterText":"vTaskGetRunTimeStats","insertText":"vTaskGetRunTimeStats(${1:char *pcWriteBuffer})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskGetRunTimeStats(${1:char *pcWriteBuffer})"}},{"label":" vTaskSetTimeOutState(TimeOut_t *const pxTimeOut)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Capture the current time status for future reference."},"sortText":"3fefa429vTaskSetTimeOutState","filterText":"vTaskSetTimeOutState","insertText":"vTaskSetTimeOutState(${1:TimeOut_t *const pxTimeOut})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskSetTimeOutState(${1:TimeOut_t *const pxTimeOut})"}},{"label":"•voidFuncPtr","kind":8,"documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"sortText":"3ffc06davoidFuncPtr","filterText":"voidFuncPtr","insertText":"voidFuncPtr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"voidFuncPtr"}},{"label":" vListInitialise(List_t *const pxList)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Must be called before a list is used! This initialises all the members of the list structure and inserts the xListEnd item into the list as a marker to the back of the list.  \n@param pxList Pointer to the list being initialised.  \n\\\\page vListInitialise vListInitialise  \n\\\\ingroup LinkedList"},"sortText":"400c559bvListInitialise","filterText":"vListInitialise","insertText":"vListInitialise(${1:List_t *const pxList})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vListInitialise(${1:List_t *const pxList})"}},{"label":" vListInitialiseItem(ListItem_t *const pxItem)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Must be called before a list item is used. This sets the list container to null so the item does not think that it is already contained in a list.  \n@param pxItem Pointer to the list item being initialised.  \n\\\\page vListInitialiseItem vListInitialiseItem  \n\\\\ingroup LinkedList"},"sortText":"400c559bvListInitialiseItem","filterText":"vListInitialiseItem","insertText":"vListInitialiseItem(${1:ListItem_t *const pxItem})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vListInitialiseItem(${1:ListItem_t *const pxItem})"}},{"label":"•vPortCPUAcquireMutexTimeout(portMUX_TYPE *mux, int timeout_cycles)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"freertos/portmacro.h\"`  \n@brief Acquire a portmux spinlock with a timeout  \n@param mux Pointer to portmux to acquire.  \n@param timeout_cycles Timeout to spin, in CPU cycles. Pass portMUX_NO_TIMEOUT to wait forever,  \nportMUX_TRY_LOCK to try a single time to acquire the lock.  \n@return true if mutex is successfully acquired, false on timeout."},"sortText":"400c559bvPortCPUAcquireMutexTimeout","filterText":"vPortCPUAcquireMutexTimeout","insertText":"vPortCPUAcquireMutexTimeout(${1:portMUX_TYPE *mux}, ${2:int timeout_cycles})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vPortCPUAcquireMutexTimeout(${1:portMUX_TYPE *mux}, ${2:int timeout_cycles})"}},{"label":"•vPortCPUInitializeMutex(portMUX_TYPE *mux)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portmacro.h\"`  \nModifications to portENTER_CRITICAL.  \nFor an introduction, see \"Critical Sections \u0026 Disabling Interrupts\" in docs/api-guides/freertos-smp.rst  \nThe original portENTER_CRITICAL only disabled the ISRs. This is enough for single-CPU operation: by disabling the interrupts, there is no task switch so no other tasks can meddle in the data, and because interrupts are disabled, ISRs can't corrupt data structures either.  \nFor multiprocessing, things get a bit more hairy. First of all, disabling the interrupts doesn't stop the tasks or ISRs on the other processors meddling with our CPU. For tasks, this is solved by adding a spinlock to the portENTER_CRITICAL macro. A task running on the other CPU accessing the same data will spinlock in the portENTER_CRITICAL code until the first CPU is done.  \nFor ISRs, we now also need muxes: while portENTER_CRITICAL disabling interrupts will stop ISRs on the same CPU from meddling with the data, it does not stop interrupts on the other cores from interfering with the data. For this, we also use a spinlock in the routines called by the ISR, but these spinlocks do not disable the interrupts (because they already are).  \nThis all assumes that interrupts are either entirely disabled or enabled. Interrupt priority levels will break this scheme.  \nRemark: For the ESP32, portENTER_CRITICAL and portENTER_CRITICAL_ISR both alias vTaskEnterCritical, meaning that either function can be called both from ISR as well as task context. This is not standard FreeRTOS behaviour; please keep this in mind if you need any compatibility with other FreeRTOS implementations."},"sortText":"400c559bvPortCPUInitializeMutex","filterText":"vPortCPUInitializeMutex","insertText":"vPortCPUInitializeMutex(${1:portMUX_TYPE *mux})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vPortCPUInitializeMutex(${1:portMUX_TYPE *mux})"}},{"label":" vTimerSetTimerID(TimerHandle_t xTimer, void *pvNewID)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Sets the ID assigned to the timer.  \nIDs are assigned to timers using the pvTimerID parameter of the call to xTimerCreated() that was used to create the timer.  \nIf the same callback function is assigned to multiple timers then the timer ID can be used as time specific (timer local) storage.  \n@param xTimer The timer being updated.  \n@param pvNewID The ID to assign to the timer.  \nExample usage:  \nSee the xTimerCreate() API function example usage scenario."},"sortText":"401cf05evTimerSetTimerID","filterText":"vTimerSetTimerID","insertText":"vTimerSetTimerID(${1:TimerHandle_t xTimer}, ${2:void *pvNewID})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTimerSetTimerID(${1:TimerHandle_t xTimer}, ${2:void *pvNewID})"}},{"label":" vTaskDelay(const TickType_t xTicksToDelay)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Delay a task for a given number of ticks.  \nThe actual time that the task remains blocked depends on the tick rate.  \nThe constant portTICK_PERIOD_MS can be used to calculate real time from the tick rate - with the resolution of one tick period.  \nINCLUDE_vTaskDelay must be defined as 1 for this function to be available.  \nSee the configuration section for more information.  \nvTaskDelay() specifies a time at which the task wishes to unblock relative to the time at which vTaskDelay() is called. For example, specifying a block period of 100 ticks will cause the task to unblock 100 ticks after vTaskDelay() is called. vTaskDelay() does not therefore provide a good method of controlling the frequency of a periodic task as the path taken through the code, as well as other task and interrupt activity, will effect the frequency at which vTaskDelay() gets called and therefore the time at which the task next executes. See vTaskDelayUntil() for an alternative API function designed to facilitate fixed frequency execution. It does this by specifying an absolute time (rather than a relative time) at which the calling task should unblock.  \n@param xTicksToDelay The amount of time, in tick periods, that the calling task should block.  \nExample usage:  \n@code{c} void vTaskFunction( void * pvParameters ) { // Block for 500ms.  \nconst TickType_t xDelay = 500 / portTICK_PERIOD_MS;  \nfor( ;; ) { // Simply toggle the LED every 500ms, blocking between each toggle.  \nvToggleLED();  \nvTaskDelay( xDelay );  \n} }  \n@endcode  \n\\\\ingroup TaskCtrl"},"sortText":"40289670vTaskDelay","filterText":"vTaskDelay","insertText":"vTaskDelay(${1:const TickType_t xTicksToDelay})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskDelay(${1:const TickType_t xTicksToDelay})"}},{"label":"•vsnprintf(char *, size_t, const char *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403b80c8vsnprintf","filterText":"vsnprintf","insertText":"vsnprintf(${1:char *}, ${2:size_t}, ${3:const char *}, ${4:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vsnprintf(${1:char *}, ${2:size_t}, ${3:const char *}, ${4:__va_list_tag *})"}},{"label":" vTaskAllocateMPURegions(TaskHandle_t xTask, const MemoryRegion_t *const pxRegions)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Memory regions are assigned to a restricted task when the task is created by a call to xTaskCreateRestricted(). These regions can be redefined using vTaskAllocateMPURegions().  \n@param xTask The handle of the task being updated.  \n@param xRegions A pointer to an MemoryRegion_t structure that contains the new memory region definitions.  \nExample usage:  \n@code{c} // Define an array of MemoryRegion_t structures that configures an MPU region // allowing read/write access for 1024 bytes starting at the beginning of the // ucOneKByte array. The other two of the maximum 3 definable regions are // unused so set to zero.  \nstatic const MemoryRegion_t xAltRegions[ portNUM_CONFIGURABLE_REGIONS ] = { // Base address Length Parameters { ucOneKByte, 1024, portMPU_REGION_READ_WRITE },  \n{ 0, 0, 0 },  \n{ 0, 0, 0 } };  \nvoid vATask( void \\*pvParameters ) { // This task was created such that it has access to certain regions of // memory as defined by the MPU configuration. At some point it is // desired that these MPU regions are replaced with that defined in the // xAltRegions const struct above. Use a call to vTaskAllocateMPURegions() // for this purpose. NULL is used as the task handle to indicate that this // function should modify the MPU regions of the calling task.  \nvTaskAllocateMPURegions( NULL, xAltRegions );  \n// Now the task can continue its function, but from this point on can only // access its stack and the ucOneKByte array (unless any other statically // defined or shared regions have been declared elsewhere).  \n}  \n@endcode  \n\\\\ingroup Tasks"},"sortText":"403f858bvTaskAllocateMPURegions","filterText":"vTaskAllocateMPURegions","insertText":"vTaskAllocateMPURegions(${1:TaskHandle_t xTask}, ${2:const MemoryRegion_t *const pxRegions})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskAllocateMPURegions(${1:TaskHandle_t xTask}, ${2:const MemoryRegion_t *const pxRegions})"}},{"label":" vTaskDelayUntil(TickType_t *const pxPreviousWakeTime, const TickType_t xTimeIncrement)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Delay a task until a specified time.  \nINCLUDE_vTaskDelayUntil must be defined as 1 for this function to be available.  \nSee the configuration section for more information.  \nThis function can be used by periodic tasks to ensure a constant execution frequency.  \nThis function differs from vTaskDelay () in one important aspect: vTaskDelay () will cause a task to block for the specified number of ticks from the time vTaskDelay () is called. It is therefore difficult to use vTaskDelay () by itself to generate a fixed execution frequency as the time between a task starting to execute and that task calling vTaskDelay () may not be fixed [the task may take a different path though the code between calls, or may get interrupted or preempted a different number of times each time it executes].  \nWhereas vTaskDelay () specifies a wake time relative to the time at which the function is called, vTaskDelayUntil () specifies the absolute (exact) time at which it wishes to unblock.  \nThe constant portTICK_PERIOD_MS can be used to calculate real time from the tick rate - with the resolution of one tick period.  \n@param pxPreviousWakeTime Pointer to a variable that holds the time at which the task was last unblocked. The variable must be initialised with the current time prior to its first use (see the example below). Following this the variable is automatically updated within vTaskDelayUntil ().  \n@param xTimeIncrement The cycle time period. The task will be unblocked at time \\*pxPreviousWakeTime + xTimeIncrement. Calling vTaskDelayUntil with the same xTimeIncrement parameter value will cause the task to execute with a fixed interface period.  \nExample usage:  \n@code{c} // Perform an action every 10 ticks.  \nvoid vTaskFunction( void * pvParameters ) { TickType_t xLastWakeTime;  \nconst TickType_t xFrequency = 10;  \n// Initialise the xLastWakeTime variable with the current time.  \nxLastWakeTime = xTaskGetTickCount ();  \nfor( ;; ) { // Wait for the next cycle.  \nvTaskDelayUntil( \u0026xLastWakeTime, xFrequency );  \n// Perform action here.  \n} }  \n@endcode  \n\\\\ingroup TaskCtrl"},"sortText":"403f858bvTaskDelayUntil","filterText":"vTaskDelayUntil","insertText":"vTaskDelayUntil(${1:TickType_t *const pxPreviousWakeTime}, ${2:const TickType_t xTimeIncrement})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskDelayUntil(${1:TickType_t *const pxPreviousWakeTime}, ${2:const TickType_t xTimeIncrement})"}},{"label":" vTaskDelete(TaskHandle_t xTaskToDelete)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Remove a task from the RTOS real time kernel's management.  \nThe task being deleted will be removed from all ready, blocked, suspended and event lists.  \nINCLUDE_vTaskDelete must be defined as 1 for this function to be available.  \nSee the configuration section for more information.  \n@note The idle task is responsible for freeing the kernel allocated memory from tasks that have been deleted. It is therefore important that the idle task is not starved of microcontroller processing time if your application makes any calls to vTaskDelete (). Memory allocated by the task code is not automatically freed, and should be freed before the task is deleted.  \nSee the demo application file death.c for sample code that utilises vTaskDelete ().  \n@param xTaskToDelete The handle of the task to be deleted. Passing NULL will cause the calling task to be deleted.  \nExample usage:  \n@code{c} void vOtherFunction( void ) { TaskHandle_t xHandle;  \n// Create the task, storing the handle.  \nxTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, \u0026xHandle );  \n// Use the handle to delete the task.  \nvTaskDelete( xHandle );  \n}  \n@endcode  \n\\\\ingroup Tasks"},"sortText":"403f858bvTaskDelete","filterText":"vTaskDelete","insertText":"vTaskDelete(${1:TaskHandle_t xTaskToDelete})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskDelete(${1:TaskHandle_t xTaskToDelete})"}},{"label":" vTaskEndScheduler()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Stops the real time kernel tick.  \n@note At the time of writing only the x86 real mode port, which runs on a PC in place of DOS, implements this function.  \nAll created tasks will be automatically deleted and multitasking (either preemptive or cooperative) will stop.  \nExecution then resumes from the point where vTaskStartScheduler () was called, as if vTaskStartScheduler () had just returned.  \nSee the demo application file main. c in the demo/PC directory for an example that uses vTaskEndScheduler ().  \nvTaskEndScheduler () requires an exit function to be defined within the portable layer (see vPortEndScheduler () in port. c for the PC port). This performs hardware specific operations such as stopping the kernel tick.  \nvTaskEndScheduler () will cause all of the resources allocated by the kernel to be freed - but will not free resources allocated by application tasks.  \nExample usage:  \n@code{c} void vTaskCode( void * pvParameters ) { for( ;; ) { // Task code goes here.  \n// At some point we want to end the real time kernel processing // so call ...  \nvTaskEndScheduler ();  \n} }  \nvoid vAFunction( void ) { // Create at least one task before starting the kernel.  \nxTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, NULL );  \n// Start the real time kernel with preemption.  \nvTaskStartScheduler ();  \n// Will only get here when the vTaskCode () task has called // vTaskEndScheduler (). When we get here we are back to single task // execution.  \n}  \n@endcode  \n\\\\ingroup SchedulerControl"},"sortText":"403f858bvTaskEndScheduler","filterText":"vTaskEndScheduler","insertText":"vTaskEndScheduler()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskEndScheduler()"}},{"label":" vTaskList(char *pcWriteBuffer)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"List all the current tasks.  \nconfigUSE_TRACE_FACILITY and configUSE_STATS_FORMATTING_FUNCTIONS must both be defined as 1 for this function to be available. See the configuration section of the FreeRTOS.org website for more information.  \n@note This function will disable interrupts for its duration. It is not intended for normal application runtime use but as a debug aid.  \nLists all the current tasks, along with their current state and stack usage high water mark.  \nTasks are reported as blocked ('B'), ready ('R'), deleted ('D') or suspended ('S').  \n@note This function is provided for convenience only, and is used by many of the demo applications. Do not consider it to be part of the scheduler.  \nvTaskList() calls uxTaskGetSystemState(), then formats part of the uxTaskGetSystemState() output into a human readable table that displays task names, states and stack usage.  \nvTaskList() has a dependency on the sprintf() C library function that might bloat the code size, use a lot of stack, and provide different results on different platforms. An alternative, tiny, third party, and limited functionality implementation of sprintf() is provided in many of the FreeRTOS/Demo sub-directories in a file called printf-stdarg.c (note printf-stdarg.c does not provide a full snprintf() implementation!).  \nIt is recommended that production systems call uxTaskGetSystemState() directly to get access to raw stats data, rather than indirectly through a call to vTaskList().  \n@param pcWriteBuffer A buffer into which the above mentioned details will be written, in ASCII form. This buffer is assumed to be large enough to contain the generated report. Approximately 40 bytes per task should be sufficient.  \n\\\\ingroup TaskUtils"},"sortText":"403f858bvTaskList","filterText":"vTaskList","insertText":"vTaskList(${1:char *pcWriteBuffer})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskList(${1:char *pcWriteBuffer})"}},{"label":" vTaskMissedYield()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Shortcut used by the queue implementation to prevent unnecessary call to taskYIELD();"},"sortText":"403f858bvTaskMissedYield","filterText":"vTaskMissedYield","insertText":"vTaskMissedYield()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskMissedYield()"}},{"label":" vTaskNotifyGiveFromISR(TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Simplified macro for sending task notification from ISR.  \nconfigUSE_TASK_NOTIFICATIONS must be undefined or defined as 1 for this macro to be available.  \nWhen configUSE_TASK_NOTIFICATIONS is set to one each task has its own private \"notification value\", which is a 32-bit unsigned integer (uint32_t).  \nA version of xTaskNotifyGive() that can be called from an interrupt service routine (ISR).  \nEvents can be sent to a task using an intermediary object. Examples of such objects are queues, semaphores, mutexes and event groups. Task notifications are a method of sending an event directly to a task without the need for such an intermediary object.  \nA notification sent to a task can optionally perform an action, such as update, overwrite or increment the task's notification value. In that way task notifications can be used to send data to a task, or be used as light weight and fast binary or counting semaphores.  \nvTaskNotifyGiveFromISR() is intended for use when task notifications are used as light weight and faster binary or counting semaphore equivalents.  \nActual FreeRTOS semaphores are given from an ISR using the xSemaphoreGiveFromISR() API function, the equivalent action that instead uses a task notification is vTaskNotifyGiveFromISR().  \nWhen task notifications are being used as a binary or counting semaphore equivalent then the task being notified should wait for the notification using the ulTaskNotificationTake() API function rather than the xTaskNotifyWait() API function.  \nSee http://www.FreeRTOS.org/RTOS-task-notifications.html for more details.  \n@param xTaskToNotify The handle of the task being notified. The handle to a task can be returned from the xTaskCreate() API function used to create the task, and the handle of the currently running task can be obtained by calling xTaskGetCurrentTaskHandle().  \n@param pxHigherPriorityTaskWoken vTaskNotifyGiveFromISR() will set  \n\\*pxHigherPriorityTaskWoken to pdTRUE if sending the notification caused the task to which the notification was sent to leave the Blocked state, and the unblocked task has a priority higher than the currently running task. If vTaskNotifyGiveFromISR() sets this value to pdTRUE then a context switch should be requested before the interrupt is exited. How a context switch is requested from an ISR is dependent on the port - see the documentation page for the port in use.  \n\\\\ingroup TaskNotifications"},"sortText":"403f858bvTaskNotifyGiveFromISR","filterText":"vTaskNotifyGiveFromISR","insertText":"vTaskNotifyGiveFromISR(${1:TaskHandle_t xTaskToNotify}, ${2:BaseType_t *pxHigherPriorityTaskWoken})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskNotifyGiveFromISR(${1:TaskHandle_t xTaskToNotify}, ${2:BaseType_t *pxHigherPriorityTaskWoken})"}},{"label":" vTaskPlaceOnEventList(List_t *const pxEventList, const TickType_t xTicksToWait)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"THIS FUNCTION MUST NOT BE USED FROM APPLICATION CODE. IT IS AN INTERFACE WHICH IS FOR THE EXCLUSIVE USE OF THE SCHEDULER.  \nTHIS FUNCTION MUST BE CALLED WITH INTERRUPTS DISABLED.  \nRemoves the calling task from the ready list and places it both on the list of tasks waiting for a particular event, and the list of delayed tasks. The task will be removed from both lists and replaced on the ready list should either the event occur (and there be no higher priority tasks waiting on the same event) or the delay period expires.  \nThe 'unordered' version replaces the event list item value with the xItemValue value, and inserts the list item at the end of the list.  \nThe 'ordered' version uses the existing event list item value (which is the owning tasks priority) to insert the list item into the event list is task priority order.  \n@param pxEventList The list containing tasks that are blocked waiting for the event to occur.  \n@param xItemValue The item value to use for the event list item when the event list is not ordered by task priority.  \n@param xTicksToWait The maximum amount of time that the task should wait for the event to occur. This is specified in kernel ticks,the constant portTICK_PERIOD_MS can be used to convert kernel ticks into a real time period."},"sortText":"403f858bvTaskPlaceOnEventList","filterText":"vTaskPlaceOnEventList","insertText":"vTaskPlaceOnEventList(${1:List_t *const pxEventList}, ${2:const TickType_t xTicksToWait})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskPlaceOnEventList(${1:List_t *const pxEventList}, ${2:const TickType_t xTicksToWait})"}},{"label":" vTaskPlaceOnEventListRestricted(List_t *const pxEventList, const TickType_t xTicksToWait)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"THIS FUNCTION MUST NOT BE USED FROM APPLICATION CODE. IT IS AN INTERFACE WHICH IS FOR THE EXCLUSIVE USE OF THE SCHEDULER.  \nTHIS FUNCTION MUST BE CALLED WITH INTERRUPTS DISABLED.  \nThis function performs nearly the same function as vTaskPlaceOnEventList().  \nThe difference being that this function does not permit tasks to block indefinitely, whereas vTaskPlaceOnEventList() does."},"sortText":"403f858bvTaskPlaceOnEventListRestricted","filterText":"vTaskPlaceOnEventListRestricted","insertText":"vTaskPlaceOnEventListRestricted(${1:List_t *const pxEventList}, ${2:const TickType_t xTicksToWait})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskPlaceOnEventListRestricted(${1:List_t *const pxEventList}, ${2:const TickType_t xTicksToWait})"}},{"label":" vTaskPlaceOnUnorderedEventList(List_t *pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait)","kind":3,"detail":"void","sortText":"403f858bvTaskPlaceOnUnorderedEventList","filterText":"vTaskPlaceOnUnorderedEventList","insertText":"vTaskPlaceOnUnorderedEventList(${1:List_t *pxEventList}, ${2:const TickType_t xItemValue}, ${3:const TickType_t xTicksToWait})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskPlaceOnUnorderedEventList(${1:List_t *pxEventList}, ${2:const TickType_t xItemValue}, ${3:const TickType_t xTicksToWait})"}},{"label":" vTaskPriorityInherit(const TaskHandle_t pxMutexHolder)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Raises the priority of the mutex holder to that of the calling task should the mutex holder have a priority less than the calling task."},"sortText":"403f858bvTaskPriorityInherit","filterText":"vTaskPriorityInherit","insertText":"vTaskPriorityInherit(${1:const TaskHandle_t pxMutexHolder})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskPriorityInherit(${1:const TaskHandle_t pxMutexHolder})"}},{"label":" vTaskPrioritySet(TaskHandle_t xTask, UBaseType_t uxNewPriority)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set the priority of any task.  \nINCLUDE_vTaskPrioritySet must be defined as 1 for this function to be available.  \nSee the configuration section for more information.  \nA context switch will occur before the function returns if the priority being set is higher than the currently executing task.  \n@param xTask Handle to the task for which the priority is being set.  \nPassing a NULL handle results in the priority of the calling task being set.  \n@param uxNewPriority The priority to which the task will be set.  \nExample usage:  \n@code{c} void vAFunction( void ) { TaskHandle_t xHandle;  \n// Create a task, storing the handle.  \nxTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, \u0026xHandle );  \n// ...  \n// Use the handle to raise the priority of the created task.  \nvTaskPrioritySet( xHandle, tskIDLE_PRIORITY + 1 );  \n// ...  \n// Use a NULL handle to raise our priority to the same value.  \nvTaskPrioritySet( NULL, tskIDLE_PRIORITY + 1 );  \n}  \n@endcode  \n\\\\ingroup TaskCtrl"},"sortText":"403f858bvTaskPrioritySet","filterText":"vTaskPrioritySet","insertText":"vTaskPrioritySet(${1:TaskHandle_t xTask}, ${2:UBaseType_t uxNewPriority})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskPrioritySet(${1:TaskHandle_t xTask}, ${2:UBaseType_t uxNewPriority})"}},{"label":" vTaskResume(TaskHandle_t xTaskToResume)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Resumes a suspended task.  \nINCLUDE_vTaskSuspend must be defined as 1 for this function to be available.  \nSee the configuration section for more information.  \nA task that has been suspended by one or more calls to vTaskSuspend () will be made available for running again by a single call to vTaskResume ().  \n@param xTaskToResume Handle to the task being readied.  \nExample usage:  \n@code{c} void vAFunction( void ) { TaskHandle_t xHandle;  \n// Create a task, storing the handle.  \nxTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, \u0026xHandle );  \n// ...  \n// Use the handle to suspend the created task.  \nvTaskSuspend( xHandle );  \n// ...  \n// The created task will not run during this period, unless // another task calls vTaskResume( xHandle ).  \n//...  \n// Resume the suspended task ourselves.  \nvTaskResume( xHandle );  \n// The created task will once again get microcontroller processing // time in accordance with its priority within the system.  \n}  \n@endcode  \n\\\\ingroup TaskCtrl"},"sortText":"403f858bvTaskResume","filterText":"vTaskResume","insertText":"vTaskResume(${1:TaskHandle_t xTaskToResume})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskResume(${1:TaskHandle_t xTaskToResume})"}},{"label":" vTaskSetTaskNumber(TaskHandle_t xTask, const UBaseType_t uxHandle)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set the uxTaskNumber of the task referenced by the xTask parameter to uxHandle."},"sortText":"403f858bvTaskSetTaskNumber","filterText":"vTaskSetTaskNumber","insertText":"vTaskSetTaskNumber(${1:TaskHandle_t xTask}, ${2:const UBaseType_t uxHandle})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskSetTaskNumber(${1:TaskHandle_t xTask}, ${2:const UBaseType_t uxHandle})"}},{"label":" vTaskSetThreadLocalStoragePointer(TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set local storage pointer specific to the given task.  \nEach task contains an array of pointers that is dimensioned by the configNUM_THREAD_LOCAL_STORAGE_POINTERS setting in FreeRTOSConfig.h.  \nThe kernel does not use the pointers itself, so the application writer can use the pointers for any purpose they wish.  \n@param xTaskToSet Task to set thread local storage pointer for  \n@param xIndex The index of the pointer to set, from 0 to configNUM_THREAD_LOCAL_STORAGE_POINTERS - 1.  \n@param pvValue Pointer value to set."},"sortText":"403f858bvTaskSetThreadLocalStoragePointer","filterText":"vTaskSetThreadLocalStoragePointer","insertText":"vTaskSetThreadLocalStoragePointer(${1:TaskHandle_t xTaskToSet}, ${2:BaseType_t xIndex}, ${3:void *pvValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskSetThreadLocalStoragePointer(${1:TaskHandle_t xTaskToSet}, ${2:BaseType_t xIndex}, ${3:void *pvValue})"}},{"label":" vTaskSetThreadLocalStoragePointerAndDelCallback(TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue, TlsDeleteCallbackFunction_t pvDelCallback)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set local storage pointer and deletion callback.  \nEach task contains an array of pointers that is dimensioned by the configNUM_THREAD_LOCAL_STORAGE_POINTERS setting in FreeRTOSConfig.h.  \nThe kernel does not use the pointers itself, so the application writer can use the pointers for any purpose they wish.  \nLocal storage pointers set for a task can reference dynamically allocated resources. This function is similar to vTaskSetThreadLocalStoragePointer, but provides a way to release these resources when the task gets deleted. For each pointer,  \na callback function can be set. This function will be called when task is deleted, with the local storage pointer index and value as arguments.  \n@param xTaskToSet Task to set thread local storage pointer for  \n@param xIndex The index of the pointer to set, from 0 to configNUM_THREAD_LOCAL_STORAGE_POINTERS - 1.  \n@param pvValue Pointer value to set.  \n@param pvDelCallback Function to call to dispose of the local storage pointer when the task is deleted."},"sortText":"403f858bvTaskSetThreadLocalStoragePointerAndDelCallback","filterText":"vTaskSetThreadLocalStoragePointerAndDelCallback","insertText":"vTaskSetThreadLocalStoragePointerAndDelCallback(${1:TaskHandle_t xTaskToSet}, ${2:BaseType_t xIndex}, ${3:void *pvValue}, ${4:TlsDeleteCallbackFunction_t pvDelCallback})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskSetThreadLocalStoragePointerAndDelCallback(${1:TaskHandle_t xTaskToSet}, ${2:BaseType_t xIndex}, ${3:void *pvValue}, ${4:TlsDeleteCallbackFunction_t pvDelCallback})"}},{"label":" vTaskStartScheduler()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\----------------------------------------------------------- SCHEDULER CONTROL  \n\\----------------------------------------------------------  \n@cond  \nStarts the real time kernel tick processing.  \nAfter calling the kernel has control over which tasks are executed and when.  \nSee the demo application file main.c for an example of creating tasks and starting the kernel.  \nExample usage:  \n@code{c} void vAFunction( void ) { // Create at least one task before starting the kernel.  \nxTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, NULL );  \n// Start the real time kernel with preemption.  \nvTaskStartScheduler ();  \n// Will not get here unless a task calls vTaskEndScheduler () }  \n@endcode  \n\\\\ingroup SchedulerControl"},"sortText":"403f858bvTaskStartScheduler","filterText":"vTaskStartScheduler","insertText":"vTaskStartScheduler()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskStartScheduler()"}},{"label":" vTaskStepTick(const TickType_t xTicksToJump)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Only available when configUSE_TICKLESS_IDLE is set to 1.  \nIf tickless mode is being used, or a low power mode is implemented, then the tick interrupt will not execute during idle periods. When this is the case, the tick count value maintained by the scheduler needs to be kept up to date with the actual execution time by being skipped forward by a time equal to the idle period."},"sortText":"403f858bvTaskStepTick","filterText":"vTaskStepTick","insertText":"vTaskStepTick(${1:const TickType_t xTicksToJump})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskStepTick(${1:const TickType_t xTicksToJump})"}},{"label":" vTaskSuspend(TaskHandle_t xTaskToSuspend)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Suspend a task.  \nINCLUDE_vTaskSuspend must be defined as 1 for this function to be available.  \nSee the configuration section for more information.  \nWhen suspended, a task will never get any microcontroller processing time,  \nno matter what its priority.  \nCalls to vTaskSuspend are not accumulative - i.e. calling vTaskSuspend () twice on the same task still only requires one call to vTaskResume () to ready the suspended task.  \n@param xTaskToSuspend Handle to the task being suspended. Passing a NULL handle will cause the calling task to be suspended.  \nExample usage:  \n@code{c} void vAFunction( void ) { TaskHandle_t xHandle;  \n// Create a task, storing the handle.  \nxTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, \u0026xHandle );  \n// ...  \n// Use the handle to suspend the created task.  \nvTaskSuspend( xHandle );  \n// ...  \n// The created task will not run during this period, unless // another task calls vTaskResume( xHandle ).  \n//...  \n// Suspend ourselves.  \nvTaskSuspend( NULL );  \n// We cannot get here unless another task calls vTaskResume // with our handle as the parameter.  \n}  \n@endcode  \n\\\\ingroup TaskCtrl"},"sortText":"403f858bvTaskSuspend","filterText":"vTaskSuspend","insertText":"vTaskSuspend(${1:TaskHandle_t xTaskToSuspend})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskSuspend(${1:TaskHandle_t xTaskToSuspend})"}},{"label":" vTaskSuspendAll()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Suspends the scheduler without disabling interrupts.  \nContext switches will not occur while the scheduler is suspended.  \nAfter calling vTaskSuspendAll () the calling task will continue to execute without risk of being swapped out until a call to xTaskResumeAll () has been made.  \nAPI functions that have the potential to cause a context switch (for example,  \nvTaskDelayUntil(), xQueueSend(), etc.) must not be called while the scheduler is suspended.  \nExample usage:  \n@code{c} void vTask1( void * pvParameters ) { for( ;; ) { // Task code goes here.  \n// ...  \n// At some point the task wants to perform a long operation during // which it does not want to get swapped out. It cannot use // taskENTER_CRITICAL ()/taskEXIT_CRITICAL () as the length of the // operation may cause interrupts to be missed - including the // ticks.  \n// Prevent the real time kernel swapping out the task.  \nvTaskSuspendAll ();  \n// Perform the operation here. There is no need to use critical // sections as we have all the microcontroller processing time.  \n// During this time interrupts will still operate and the kernel // tick count will be maintained.  \n// ...  \n// The operation is complete. Restart the kernel.  \nxTaskResumeAll ();  \n} }  \n@endcode  \n\\\\ingroup SchedulerControl"},"sortText":"403f858bvTaskSuspendAll","filterText":"vTaskSuspendAll","insertText":"vTaskSuspendAll()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskSuspendAll()"}},{"label":" vTaskSwitchContext()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"THIS FUNCTION MUST NOT BE USED FROM APPLICATION CODE. IT IS ONLY INTENDED FOR USE WHEN IMPLEMENTING A PORT OF THE SCHEDULER AND IS AN INTERFACE WHICH IS FOR THE EXCLUSIVE USE OF THE SCHEDULER.  \nSets the pointer to the current TCB to the TCB of the highest priority task that is ready to run."},"sortText":"403f858bvTaskSwitchContext","filterText":"vTaskSwitchContext","insertText":"vTaskSwitchContext()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskSwitchContext()"}},{"label":"•va_list","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstdarg\u003e`"},"sortText":"403f858bva_list","filterText":"va_list","insertText":"va_list","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"va_list"}},{"label":"•vasiprintf(char **, const char *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bvasiprintf","filterText":"vasiprintf","insertText":"vasiprintf(${1:char **}, ${2:const char *}, ${3:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vasiprintf(${1:char **}, ${2:const char *}, ${3:__va_list_tag *})"}},{"label":"•vfiprintf(FILE *, const char *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bvfiprintf","filterText":"vfiprintf","insertText":"vfiprintf(${1:FILE *}, ${2:const char *}, ${3:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vfiprintf(${1:FILE *}, ${2:const char *}, ${3:__va_list_tag *})"}},{"label":"•vfiscanf(FILE *, const char *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bvfiscanf","filterText":"vfiscanf","insertText":"vfiscanf(${1:FILE *}, ${2:const char *}, ${3:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vfiscanf(${1:FILE *}, ${2:const char *}, ${3:__va_list_tag *})"}},{"label":"•viprintf(const char *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bviprintf","filterText":"viprintf","insertText":"viprintf(${1:const char *}, ${2:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"viprintf(${1:const char *}, ${2:__va_list_tag *})"}},{"label":"•viscanf(const char *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bviscanf","filterText":"viscanf","insertText":"viscanf(${1:const char *}, ${2:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"viscanf(${1:const char *}, ${2:__va_list_tag *})"}},{"label":"•vscanf(const char *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bvscanf","filterText":"vscanf","insertText":"vscanf(${1:const char *}, ${2:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vscanf(${1:const char *}, ${2:__va_list_tag *})"}},{"label":"•vsiprintf(char *, const char *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bvsiprintf","filterText":"vsiprintf","insertText":"vsiprintf(${1:char *}, ${2:const char *}, ${3:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vsiprintf(${1:char *}, ${2:const char *}, ${3:__va_list_tag *})"}},{"label":"•vsniprintf(char *, size_t, const char *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bvsniprintf","filterText":"vsniprintf","insertText":"vsniprintf(${1:char *}, ${2:size_t}, ${3:const char *}, ${4:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vsniprintf(${1:char *}, ${2:size_t}, ${3:const char *}, ${4:__va_list_tag *})"}},{"label":"•vsprintf(char *, const char *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"sortText":"403f858bvsprintf","filterText":"vsprintf","insertText":"vsprintf(${1:char *}, ${2:const char *}, ${3:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vsprintf(${1:char *}, ${2:const char *}, ${3:__va_list_tag *})"}},{"label":"•ArduinoJson6173_91::void_\u003ctypename T\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Deserialization/Readers/IteratorReader.hpp\"`"},"sortText":"404e1c7fvoid_","filterText":"void_","insertText":"ArduinoJson6173_91::void_\u003c${1:typename T}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::void_\u003c${1:typename T}\u003e"}},{"label":"•vfwprintf(__FILE *, const wchar_t *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40500923vfwprintf","filterText":"vfwprintf","insertText":"vfwprintf(${1:__FILE *}, ${2:const wchar_t *}, ${3:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vfwprintf(${1:__FILE *}, ${2:const wchar_t *}, ${3:__va_list_tag *})"}},{"label":"•vswscanf(const wchar_t *, const wchar_t *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40500923vswscanf","filterText":"vswscanf","insertText":"vswscanf(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vswscanf(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:__va_list_tag *})"}},{"label":"•vwscanf(const wchar_t *, __va_list_tag *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"sortText":"40500923vwscanf","filterText":"vwscanf","insertText":"vwscanf(${1:const wchar_t *}, ${2:__va_list_tag *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vwscanf(${1:const wchar_t *}, ${2:__va_list_tag *})"}},{"label":" vListInsert(List_t *const pxList, ListItem_t *const pxNewListItem)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Insert a list item into a list. The item will be inserted into the list in a position determined by its item value (descending item value order).  \n@param pxList The list into which the item is to be inserted.  \n@param pxNewListItem The item that is to be placed in the list.  \n\\\\page vListInsert vListInsert  \n\\\\ingroup LinkedList"},"sortText":"405d8e68vListInsert","filterText":"vListInsert","insertText":"vListInsert(${1:List_t *const pxList}, ${2:ListItem_t *const pxNewListItem})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vListInsert(${1:List_t *const pxList}, ${2:ListItem_t *const pxNewListItem})"}},{"label":" vListInsertEnd(List_t *const pxList, ListItem_t *const pxNewListItem)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Insert a list item into a list. The item will be inserted in a position such that it will be the last item within the list returned by multiple calls to listGET_OWNER_OF_NEXT_ENTRY.  \nThe list member pvIndex is used to walk through a list. Calling listGET_OWNER_OF_NEXT_ENTRY increments pvIndex to the next item in the list.  \nPlacing an item in a list using vListInsertEnd effectively places the item in the list position pointed to by pvIndex. This means that every other item within the list will be returned by listGET_OWNER_OF_NEXT_ENTRY before the pvIndex parameter again points to the item being inserted.  \n@param pxList The list into which the item is to be inserted.  \n@param pxNewListItem The list item to be inserted into the list.  \n\\\\page vListInsertEnd vListInsertEnd  \n\\\\ingroup LinkedList"},"sortText":"405d8e68vListInsertEnd","filterText":"vListInsertEnd","insertText":"vListInsertEnd(${1:List_t *const pxList}, ${2:ListItem_t *const pxNewListItem})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vListInsertEnd(${1:List_t *const pxList}, ${2:ListItem_t *const pxNewListItem})"}},{"label":"•vPortCPUAcquireMutex(portMUX_TYPE *mux)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portmacro.h\"`"},"sortText":"405d8e68vPortCPUAcquireMutex","filterText":"vPortCPUAcquireMutex","insertText":"vPortCPUAcquireMutex(${1:portMUX_TYPE *mux})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vPortCPUAcquireMutex(${1:portMUX_TYPE *mux})"}},{"label":"•vPortCPUReleaseMutex(portMUX_TYPE *mux)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portmacro.h\"`"},"sortText":"405d8e68vPortCPUReleaseMutex","filterText":"vPortCPUReleaseMutex","insertText":"vPortCPUReleaseMutex(${1:portMUX_TYPE *mux})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vPortCPUReleaseMutex(${1:portMUX_TYPE *mux})"}},{"label":"•vPortEndScheduler()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portable.h\"`  \nUndo any hardware/ISR setup that was performed by xPortStartScheduler() so the hardware is left in its original condition after the scheduler stops executing."},"sortText":"405d8e68vPortEndScheduler","filterText":"vPortEndScheduler","insertText":"vPortEndScheduler()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vPortEndScheduler()"}},{"label":"•vPortReleaseTaskMPUSettings(xMPU_SETTINGS *xMPUSettings)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portable.h\"`"},"sortText":"405d8e68vPortReleaseTaskMPUSettings","filterText":"vPortReleaseTaskMPUSettings","insertText":"vPortReleaseTaskMPUSettings(${1:xMPU_SETTINGS *xMPUSettings})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vPortReleaseTaskMPUSettings(${1:xMPU_SETTINGS *xMPUSettings})"}},{"label":"•vPortSetStackWatchpoint(void *pxStackStart)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portable.h\"`  \nCallback to set a watchpoint on the end of the stack. Called every context switch to change the stack watchpoint around."},"sortText":"405d8e68vPortSetStackWatchpoint","filterText":"vPortSetStackWatchpoint","insertText":"vPortSetStackWatchpoint(${1:void *pxStackStart})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vPortSetStackWatchpoint(${1:void *pxStackStart})"}},{"label":"•vPortStoreTaskMPUSettings(xMPU_SETTINGS *xMPUSettings, const struct xMEMORY_REGION *const xRegions, StackType_t *pxBottomOfStack, uint32_t usStackDepth)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portable.h\"`"},"sortText":"405d8e68vPortStoreTaskMPUSettings","filterText":"vPortStoreTaskMPUSettings","insertText":"vPortStoreTaskMPUSettings(${1:xMPU_SETTINGS *xMPUSettings}, ${2:const struct xMEMORY_REGION *const xRegions}, ${3:StackType_t *pxBottomOfStack}, ${4:uint32_t usStackDepth})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vPortStoreTaskMPUSettings(${1:xMPU_SETTINGS *xMPUSettings}, ${2:const struct xMEMORY_REGION *const xRegions}, ${3:StackType_t *pxBottomOfStack}, ${4:uint32_t usStackDepth})"}},{"label":"•vPortYield()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portmacro.h\"`  \nKernel utilities."},"sortText":"405d8e68vPortYield","filterText":"vPortYield","insertText":"vPortYield()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vPortYield()"}},{"label":"•vPortYieldOtherCore(BaseType_t coreid)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portable.h\"`  \nSend an interrupt to another core in order to make the task running on it yield for a higher-priority task."},"sortText":"405d8e68vPortYieldOtherCore","filterText":"vPortYieldOtherCore","insertText":"vPortYieldOtherCore(${1:BaseType_t coreid})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vPortYieldOtherCore(${1:BaseType_t coreid})"}},{"label":" vQueueDelete(QueueHandle_t xQueue)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Delete a queue - freeing all the memory allocated for storing of items placed on the queue.  \n@param xQueue A handle to the queue to be deleted.  \n\\\\ingroup QueueManagement"},"sortText":"405d8e68vQueueDelete","filterText":"vQueueDelete","insertText":"vQueueDelete(${1:QueueHandle_t xQueue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vQueueDelete(${1:QueueHandle_t xQueue})"}},{"label":" vQueueSetQueueNumber(QueueHandle_t xQueue, UBaseType_t uxQueueNumber)","kind":3,"detail":"void","sortText":"405d8e68vQueueSetQueueNumber","filterText":"vQueueSetQueueNumber","insertText":"vQueueSetQueueNumber(${1:QueueHandle_t xQueue}, ${2:UBaseType_t uxQueueNumber})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vQueueSetQueueNumber(${1:QueueHandle_t xQueue}, ${2:UBaseType_t uxQueueNumber})"}},{"label":" vQueueWaitForMessageRestricted(QueueHandle_t xQueue, TickType_t xTicksToWait)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"@cond  \nNot public API functions."},"sortText":"405d8e68vQueueWaitForMessageRestricted","filterText":"vQueueWaitForMessageRestricted","insertText":"vQueueWaitForMessageRestricted(${1:QueueHandle_t xQueue}, ${2:TickType_t xTicksToWait})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vQueueWaitForMessageRestricted(${1:QueueHandle_t xQueue}, ${2:TickType_t xTicksToWait})"}},{"label":"•vTaskEnterCritical(portMUX_TYPE *mux)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portmacro.h\"`"},"sortText":"405d8e68vTaskEnterCritical","filterText":"vTaskEnterCritical","insertText":"vTaskEnterCritical(${1:portMUX_TYPE *mux})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vTaskEnterCritical(${1:portMUX_TYPE *mux})"}},{"label":"•vfork()","kind":3,"detail":"pid_t","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"405d8e68vfork","filterText":"vfork","insertText":"vfork()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vfork()"}},{"label":"•vhangup()","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"sortText":"405d8e68vhangup","filterText":"vhangup","insertText":"vhangup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vhangup()"}},{"label":"•VFSFileImpl","kind":7,"documentation":{"kind":"markdown","value":"From `\"vfs_api.h\"`"},"sortText":"40618ecdVFSFileImpl","filterText":"VFSFileImpl","insertText":"VFSFileImpl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"VFSFileImpl"}},{"label":" vEventGroupSetBitsCallback(void *pvEventGroup, const uint32_t ulBitsToSet)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"For internal use only."},"sortText":"4068a03fvEventGroupSetBitsCallback","filterText":"vEventGroupSetBitsCallback","insertText":"vEventGroupSetBitsCallback(${1:void *pvEventGroup}, ${2:const uint32_t ulBitsToSet})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vEventGroupSetBitsCallback(${1:void *pvEventGroup}, ${2:const uint32_t ulBitsToSet})"}},{"label":"•vprintf_like_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"esp_log.h\"`"},"sortText":"4071b066vprintf_like_t","filterText":"vprintf_like_t","insertText":"vprintf_like_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"vprintf_like_t"}},{"label":"•ArduinoJson6173_91::VariantConstRef","kind":7,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantRef.hpp\"`"},"sortText":"4078a156VariantConstRef","filterText":"VariantConstRef","insertText":"ArduinoJson6173_91::VariantConstRef","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantConstRef"}},{"label":"•ArduinoJson6173_91::VariantRef","kind":7,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantRef.hpp\"`  \nA variant that can be a any value serializable to a JSON value.  \nIt can be set to:  \n\\- a boolean  \n\\- a char, short, int or a long (signed or unsigned)  \n\\- a string (const char\\*)  \n\\- a reference to a ArrayRef or ObjectRef"},"sortText":"4078a156VariantRef","filterText":"VariantRef","insertText":"ArduinoJson6173_91::VariantRef","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantRef"}},{"label":"•ArduinoJson6173_91::VariantRefBase\u003ctypename TData\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantRef.hpp\"`  \nContains the methods shared by VariantRef and VariantConstRef"},"sortText":"4078a156VariantRefBase","filterText":"VariantRefBase","insertText":"ArduinoJson6173_91::VariantRefBase\u003c${1:typename TData}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantRefBase\u003c${1:typename TData}\u003e"}},{"label":"•ArduinoJson6173_91::variantAs(VariantData *data, MemoryPool *pool)","kind":3,"detail":"ArrayRef","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantAsImpl.hpp\"`"},"sortText":"4078a156variantAs","filterText":"variantAs","insertText":"ArduinoJson6173_91::variantAs(${1:VariantData *data}, ${2:MemoryPool *pool})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::variantAs(${1:VariantData *data}, ${2:MemoryPool *pool})"}},{"label":"•ArduinoJson6173_91::variantEquals(const VariantData *a, const VariantData *b)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Collection/CollectionImpl.hpp\"`"},"sortText":"4078a156variantEquals","filterText":"variantEquals","insertText":"ArduinoJson6173_91::variantEquals(${1:const VariantData *a}, ${2:const VariantData *b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::variantEquals(${1:const VariantData *a}, ${2:const VariantData *b})"}},{"label":"•VFSImpl","kind":7,"documentation":{"kind":"markdown","value":"From `\"vfs_api.h\"`"},"sortText":"40791bfcVFSImpl","filterText":"VFSImpl","insertText":"VFSImpl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"VFSImpl"}},{"label":"•ArduinoJson6173_91::VALUE_IS_ARRAY","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`  \nCAUTION: no VALUE_IS_OWNED below"},"sortText":"4083b5beVALUE_IS_ARRAY","filterText":"VALUE_IS_ARRAY","insertText":"ArduinoJson6173_91::VALUE_IS_ARRAY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_IS_ARRAY"}},{"label":"•ArduinoJson6173_91::VALUE_IS_BOOLEAN","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`  \nCAUTION: no VALUE_IS_OWNED below"},"sortText":"4083b5beVALUE_IS_BOOLEAN","filterText":"VALUE_IS_BOOLEAN","insertText":"ArduinoJson6173_91::VALUE_IS_BOOLEAN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_IS_BOOLEAN"}},{"label":"•ArduinoJson6173_91::VALUE_IS_FLOAT","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`  \nCAUTION: no VALUE_IS_OWNED below"},"sortText":"4083b5beVALUE_IS_FLOAT","filterText":"VALUE_IS_FLOAT","insertText":"ArduinoJson6173_91::VALUE_IS_FLOAT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_IS_FLOAT"}},{"label":"•ArduinoJson6173_91::VALUE_IS_LINKED_RAW","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"sortText":"4083b5beVALUE_IS_LINKED_RAW","filterText":"VALUE_IS_LINKED_RAW","insertText":"ArduinoJson6173_91::VALUE_IS_LINKED_RAW","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_IS_LINKED_RAW"}},{"label":"•ArduinoJson6173_91::VALUE_IS_LINKED_STRING","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"sortText":"4083b5beVALUE_IS_LINKED_STRING","filterText":"VALUE_IS_LINKED_STRING","insertText":"ArduinoJson6173_91::VALUE_IS_LINKED_STRING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_IS_LINKED_STRING"}},{"label":"•ArduinoJson6173_91::VALUE_IS_NEGATIVE_INTEGER","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`  \nCAUTION: no VALUE_IS_OWNED below"},"sortText":"4083b5beVALUE_IS_NEGATIVE_INTEGER","filterText":"VALUE_IS_NEGATIVE_INTEGER","insertText":"ArduinoJson6173_91::VALUE_IS_NEGATIVE_INTEGER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_IS_NEGATIVE_INTEGER"}},{"label":"•ArduinoJson6173_91::VALUE_IS_NULL","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"sortText":"4083b5beVALUE_IS_NULL","filterText":"VALUE_IS_NULL","insertText":"ArduinoJson6173_91::VALUE_IS_NULL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_IS_NULL"}},{"label":"•ArduinoJson6173_91::VALUE_IS_OBJECT","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`  \nCAUTION: no VALUE_IS_OWNED below"},"sortText":"4083b5beVALUE_IS_OBJECT","filterText":"VALUE_IS_OBJECT","insertText":"ArduinoJson6173_91::VALUE_IS_OBJECT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_IS_OBJECT"}},{"label":"•ArduinoJson6173_91::VALUE_IS_OWNED","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"sortText":"4083b5beVALUE_IS_OWNED","filterText":"VALUE_IS_OWNED","insertText":"ArduinoJson6173_91::VALUE_IS_OWNED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_IS_OWNED"}},{"label":"•ArduinoJson6173_91::VALUE_IS_OWNED_RAW","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"sortText":"4083b5beVALUE_IS_OWNED_RAW","filterText":"VALUE_IS_OWNED_RAW","insertText":"ArduinoJson6173_91::VALUE_IS_OWNED_RAW","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_IS_OWNED_RAW"}},{"label":"•ArduinoJson6173_91::VALUE_IS_OWNED_STRING","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"sortText":"4083b5beVALUE_IS_OWNED_STRING","filterText":"VALUE_IS_OWNED_STRING","insertText":"ArduinoJson6173_91::VALUE_IS_OWNED_STRING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_IS_OWNED_STRING"}},{"label":"•ArduinoJson6173_91::VALUE_IS_POSITIVE_INTEGER","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`  \nCAUTION: no VALUE_IS_OWNED below"},"sortText":"4083b5beVALUE_IS_POSITIVE_INTEGER","filterText":"VALUE_IS_POSITIVE_INTEGER","insertText":"ArduinoJson6173_91::VALUE_IS_POSITIVE_INTEGER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_IS_POSITIVE_INTEGER"}},{"label":"•ArduinoJson6173_91::VALUE_MASK","kind":20,"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"sortText":"4083b5beVALUE_MASK","filterText":"VALUE_MASK","insertText":"ArduinoJson6173_91::VALUE_MASK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VALUE_MASK"}},{"label":"•ArduinoJson6173_91::VariantAs\u003ctypename T\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantAs.hpp\"`  \nA metafunction that returns the type of the value returned by VariantRef::as\\\u003cT\u003e()"},"sortText":"4083b5beVariantAs","filterText":"VariantAs","insertText":"ArduinoJson6173_91::VariantAs\u003c${1:typename T}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantAs\u003c${1:typename T}\u003e"}},{"label":"•ArduinoJson6173_91::VariantConstPtr","kind":7,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Array/ArrayIterator.hpp\"`"},"sortText":"4083b5beVariantConstPtr","filterText":"VariantConstPtr","insertText":"ArduinoJson6173_91::VariantConstPtr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantConstPtr"}},{"label":"•ArduinoJson6173_91::VariantContent","kind":7,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"sortText":"4083b5beVariantContent","filterText":"VariantContent","insertText":"ArduinoJson6173_91::VariantContent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantContent"}},{"label":"•ArduinoJson6173_91::VariantOperators\u003ctypename TVariant\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantOperators.hpp\"`"},"sortText":"4083b5beVariantOperators","filterText":"VariantOperators","insertText":"ArduinoJson6173_91::VariantOperators\u003c${1:typename TVariant}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantOperators\u003c${1:typename TVariant}\u003e"}},{"label":"•ArduinoJson6173_91::VariantPtr","kind":7,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Array/ArrayIterator.hpp\"`"},"sortText":"4083b5beVariantPtr","filterText":"VariantPtr","insertText":"ArduinoJson6173_91::VariantPtr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantPtr"}},{"label":"•ArduinoJson6173_91::VariantShortcuts\u003ctypename TVariant\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantShortcuts.hpp\"`"},"sortText":"4083b5beVariantShortcuts","filterText":"VariantShortcuts","insertText":"ArduinoJson6173_91::VariantShortcuts\u003c${1:typename TVariant}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantShortcuts\u003c${1:typename TVariant}\u003e"}},{"label":"•ArduinoJson6173_91::VariantSlot","kind":7,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantSlot.hpp\"`"},"sortText":"4083b5beVariantSlot","filterText":"VariantSlot","insertText":"ArduinoJson6173_91::VariantSlot","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantSlot"}},{"label":"•ArduinoJson6173_91::VariantSlotDiff","kind":8,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantSlot.hpp\"`"},"sortText":"4083b5beVariantSlotDiff","filterText":"VariantSlotDiff","insertText":"ArduinoJson6173_91::VariantSlotDiff","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantSlotDiff"}},{"label":"•ArduinoJson6173_91::VariantTag","kind":22,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantTag.hpp\"`"},"sortText":"4083b5beVariantTag","filterText":"VariantTag","insertText":"ArduinoJson6173_91::VariantTag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantTag"}},{"label":"•ArduinoJson6173_91::VariantTo\u003ctypename T\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantTo.hpp\"`  \nA metafunction that returns the type of the value returned by VariantRef::to\\\u003cT\u003e()"},"sortText":"4083b5beVariantTo","filterText":"VariantTo","insertText":"ArduinoJson6173_91::VariantTo\u003c${1:typename T}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::VariantTo\u003c${1:typename T}\u003e"}},{"label":"•ArduinoJson6173_91::Visitable","kind":22,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Misc/Visitable.hpp\"`"},"sortText":"4083b5beVisitable","filterText":"Visitable","insertText":"ArduinoJson6173_91::Visitable","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::Visitable"}},{"label":"•ArduinoJson6173_91::Visitor\u003ctypename TResult\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Misc/Visitable.hpp\"`"},"sortText":"4083b5beVisitor","filterText":"Visitor","insertText":"ArduinoJson6173_91::Visitor\u003c${1:typename TResult}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::Visitor\u003c${1:typename TResult}\u003e"}},{"label":"•ArduinoJson6173_91::variantAccept(const VariantData *var, TVisitor \u0026visitor)","kind":3,"detail":"typename TVisitor::result_type","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantFunctions.hpp\"`"},"sortText":"4083b5bevariantAccept","filterText":"variantAccept","insertText":"ArduinoJson6173_91::variantAccept(${1:const VariantData *var}, ${2:TVisitor \u0026visitor})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::variantAccept(${1:const VariantData *var}, ${2:TVisitor \u0026visitor})"}},{"label":"•ArduinoJson6173_91::variantAddElement(VariantData *var, MemoryPool *pool)","kind":3,"detail":"VariantData *","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantFunctions.hpp\"`"},"sortText":"4083b5bevariantAddElement","filterText":"variantAddElement","insertText":"ArduinoJson6173_91::variantAddElement(${1:VariantData *var}, ${2:MemoryPool *pool})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::variantAddElement(${1:VariantData *var}, ${2:MemoryPool *pool})"}},{"label":"•ArduinoJson6173_91::variantAs(…)","kind":3,"detail":"[7 overloads]","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantAs.hpp\"`"},"sortText":"4083b5bevariantAs","filterText":"variantAs","insertText":"ArduinoJson6173_91::variantAs($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":1}},"newText":"ArduinoJson6173_91::variantAs($0)"}}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":206,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":207,"result":[],"jsonrpc":"2.0"}
<<<
den/garden.ino","version":61},"contentChanges":[{"range":{"start":{"line":45,"character":5},"end":{"line":45,"character":5}},"rangeLength":0,"text":"l"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":62},"contentChanges":[{"range":{"start":{"line":45,"character":6},"end":{"line":45,"character":6}},"rangeLength":0,"text":"o"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":63},"contentChanges":[{"range":{"start":{"line":45,"character":7},"end":{"line":45,"character":7}},"rangeLength":0,"text":"o"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":64},"contentChanges":[{"range":{"start":{"line":45,"character":8},"end":{"line":45,"character":8}},"rangeLength":0,"text":"p"}]}}Content-Length: 276

{"jsonrpc":"2.0","id":208,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":45,"character":9},"end":{"line":45,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":65},"contentChanges":[{"range":{"start":{"line":45,"character":9},"end":{"line":45,"character":9}},"rangeLength":0,"text":"()"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":208}}Content-Length: 283

{"jsonrpc":"2.0","id":209,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":45,"character":10},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":66},"contentChanges":[{"range":{"start":{"line":45,"character":10},"end":{"line":45,"character":11}},"rangeLength":1,"text":")"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":209}}Content-Length: 259

{"jsonrpc":"2.0","id":210,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":45,"character":11},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 278

{"jsonrpc":"2.0","id":211,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":45,"character":11},"end":{"line":45,"character":11}},"context":{"diagnostics":[]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":66}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":67},"contentChanges":[{"range":{"start":{"line":45,"character":11},"end":{"line":45,"character":11}},"rangeLength":0,"text":";"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":211}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":210}}Content-Length: 259

{"jsonrpc":"2.0","id":212,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":45,"character":12},"context":{"isRetrigger":true,"triggerKind":3}}}C
>>>
Content-Length: 38

{"id":208,"result":[],"jsonrpc":"2.0"}Content-Length: 93

{"id":209,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 93

{"id":210,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 38

{"id":211,"result":[],"jsonrpc":"2.0"}Content-Length: 93

{"id":212,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
ontent-Length: 278

{"jsonrpc":"2.0","id":213,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":45,"character":12},"end":{"line":45,"character":12}},"context":{"diagnostics":[]}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":67}}}Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
>>>
Content-Length: 38

{"id":213,"result":[],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":214,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":45,"character":12},"end":{"line":45,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":214,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":215,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":41,"character":77}}}
>>>
Content-Length: 38

{"id":215,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":216,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":41,"character":77},"end":{"line":41,"character":77}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":216,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":217,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":40,"character":74},"end":{"line":41,"character":77}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":217,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":68},"contentChanges":[{"range":{"start":{"line":40,"character":74},"end":{"line":41,"character":77}},"rangeLength":78,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":40,"character":74},"end":{"line":40,"character":74}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":218,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":68}}}Content-Length: 204

{"jsonrpc":"2.0","id":219,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":40,"character":40}}}
>>>
Content-Length: 40

{"id":219,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":220,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":40,"character":39}}}
>>>
Content-Length: 40

{"id":220,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":221,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":40,"character":38}}}
>>>
Content-Length: 40

{"id":221,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":222,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":40,"character":38}}}
>>>
Content-Length: 40

{"id":222,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":223,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":40,"character":39}}}
>>>
Content-Length: 40

{"id":223,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":224,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":40,"character":39}}}
>>>
Content-Length: 40

{"id":224,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":225,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":40,"character":39},"end":{"line":40,"character":74}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":225,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":69},"contentChanges":[{"range":{"start":{"line":40,"character":39},"end":{"line":40,"character":74}},"rangeLength":35,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":226,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":40,"character":39},"end":{"line":40,"character":39}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":226,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":69}}}Content-Length: 204

{"jsonrpc":"2.0","id":227,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":47,"character":13}}}
>>>
Content-Length: 40

{"id":227,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":228,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":47,"character":27}}}
>>>
Content-Length: 40

{"id":228,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":229,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":47,"character":31}}}
>>>
Content-Length: 38

{"id":229,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":230,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":47,"character":31},"end":{"line":47,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":230,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":231,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":46,"character":14},"end":{"line":47,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":231,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":70},"contentChanges":[{"range":{"start":{"line":46,"character":14},"end":{"line":47,"character":31}},"rangeLength":32,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":232,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":46,"character":14},"end":{"line":46,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":232,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":70}}}Content-Length: 204

{"jsonrpc":"2.0","id":233,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":59,"character":34}}}
>>>
Content-Length: 40

{"id":233,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":234,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":26}}}
>>>
Content-Length: 925

{"id":234,"result":{"contents":{"kind":"markdown","value":"### function `xTaskCreatePinnedToCore`  \n\n---\n→ `BaseType_t`  \nParameters:  \n- `TaskFunction_t pvTaskCode`\n- `const char *const pcName`\n- `const uint32_t usStackDepth`\n- `void *const pvParameters`\n- `UBaseType_t uxPriority`\n- `TaskHandle_t *const pvCreatedTask`\n- `const BaseType_t xCoreID`\n\n---\n```cpp\nBaseType_t xTaskCreatePinnedToCore(TaskFunction_t pvTaskCode,\n                                   const char *const pcName,\n                                   const uint32_t usStackDepth,\n                                   void *const pvParameters,\n                                   UBaseType_t uxPriority,\n                                   TaskHandle_t *const pvCreatedTask,\n                                   const BaseType_t xCoreID)\n```"},"range":{"start":{"line":66,"character":26},"end":{"line":66,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":235,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":21}}}
>>>
Content-Length: 40

{"id":235,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":236,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":23}}}
>>>
Content-Length: 40

{"id":236,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":237,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":25}}}
>>>
Content-Length: 40

{"id":237,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":238,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":26}}}
>>>
Content-Length: 925

{"id":238,"result":{"contents":{"kind":"markdown","value":"### function `xTaskCreatePinnedToCore`  \n\n---\n→ `BaseType_t`  \nParameters:  \n- `TaskFunction_t pvTaskCode`\n- `const char *const pcName`\n- `const uint32_t usStackDepth`\n- `void *const pvParameters`\n- `UBaseType_t uxPriority`\n- `TaskHandle_t *const pvCreatedTask`\n- `const BaseType_t xCoreID`\n\n---\n```cpp\nBaseType_t xTaskCreatePinnedToCore(TaskFunction_t pvTaskCode,\n                                   const char *const pcName,\n                                   const uint32_t usStackDepth,\n                                   void *const pvParameters,\n                                   UBaseType_t uxPriority,\n                                   TaskHandle_t *const pvCreatedTask,\n                                   const BaseType_t xCoreID)\n```"},"range":{"start":{"line":66,"character":26},"end":{"line":66,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":239,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":24}}}
>>>
Content-Length: 40

{"id":239,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":240,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":25}}}
>>>
Content-Length: 40

{"id":240,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":241,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":25}}}
>>>
Content-Length: 40

{"id":241,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":242,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":58,"character":26},"end":{"line":58,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":242,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":243,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":58,"character":26},"end":{"line":58,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":243,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":244,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":56,"character":43},"end":{"line":58,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 396

{"id":244,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","selection":{"start":{"line":56,"character":43},"end":{"line":58,"character":26}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":245,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":57,"character":41},"end":{"line":58,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":245,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":71},"contentChanges":[{"range":{"start":{"line":57,"character":41},"end":{"line":58,"character":26}},"rangeLength":53,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":246,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":57,"character":41},"end":{"line":57,"character":41}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":246,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":71}}}Content-Length: 204

{"jsonrpc":"2.0","id":247,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":22}}}
>>>
Content-Length: 40

{"id":247,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":248,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":30}}}
>>>
Content-Length: 40

{"id":248,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":249,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":30}}}
>>>
Content-Length: 38

{"id":249,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":250,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":58,"character":30},"end":{"line":58,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":250,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":251,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":59,"character":43}}}
>>>
Content-Length: 40

{"id":251,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":72},"contentChanges":[{"range":{"start":{"line":58,"character":30},"end":{"line":58,"character":30}},"rangeLength":0,"text":","}]}}Content-Length: 283

{"jsonrpc":"2.0","id":252,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":31},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 781

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":60,"character":26},"end":{"line":60,"character":27}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 183

{"id":252,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":253,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":58,"character":31},"end":{"line":58,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":253,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":72}}}Content-Length: 204

{"jsonrpc":"2.0","id":254,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":59,"character":43}}}
>>>
Content-Length: 40

{"id":254,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 448

{"jsonrpc":"2.0","id":255,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":60,"character":27},"end":{"line":60,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":26},"end":{"line":60,"character":27}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":255,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":73},"contentChanges":[{"range":{"start":{"line":60,"character":26},"end":{"line":60,"character":27}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":73}}}Content-Length: 277

{"jsonrpc":"2.0","id":256,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":60,"character":0},"end":{"line":60,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":256,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":74},"contentChanges":[{"range":{"start":{"line":60,"character":0},"end":{"line":60,"character":26}},"rangeLength":26,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":74}}}Content-Length: 204

{"jsonrpc":"2.0","id":257,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":63,"character":39}}}
>>>
Content-Length: 40

{"id":257,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":258,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":62,"character":27}}}
>>>
Content-Length: 40

{"id":258,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":259,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":62,"character":27}}}
>>>
Content-Length: 40

{"id":259,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":260,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":62,"character":28},"end":{"line":62,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":260,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":261,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":63,"character":28}}}
>>>
Content-Length: 40

{"id":261,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":262,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":63,"character":29}}}
>>>
Content-Length: 40

{"id":262,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":263,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":62,"character":27}}}
>>>
Content-Length: 38

{"id":263,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":264,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":62,"character":27},"end":{"line":62,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":264,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":75},"contentChanges":[{"range":{"start":{"line":62,"character":27},"end":{"line":62,"character":27}},"rangeLength":0,"text":","}]}}Content-Length: 283

{"jsonrpc":"2.0","id":265,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":62,"character":28},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 781

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":64,"character":26},"end":{"line":64,"character":27}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 183

{"id":265,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":266,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":62,"character":28},"end":{"line":62,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":266,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":75}}}Content-Length: 448

{"jsonrpc":"2.0","id":267,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":64,"character":27},"end":{"line":64,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":26},"end":{"line":64,"character":27}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":267,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"jsonrpc":"2.0","id":268,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":64,"character":0},"end":{"line":64,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":26},"end":{"line":64,"character":27}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":268,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":76},"contentChanges":[{"range":{"start":{"line":64,"character":0},"end":{"line":64,"character":27}},"rangeLength":27,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":76}}}Content-Length: 204

{"jsonrpc":"2.0","id":269,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":63,"character":45}}}
>>>
Content-Length: 40

{"id":269,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":270,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":65,"character":46}}}
>>>
Content-Length: 38

{"id":270,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":271,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":65,"character":46},"end":{"line":65,"character":46}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":271,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 327

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":77},"contentChanges":[{"range":{"start":{"line":65,"character":46},"end":{"line":65,"character":46}},"rangeLength":0,"text":"\n                          "}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":77}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":78},"contentChanges":[{"range":{"start":{"line":66,"character":0},"end":{"line":66,"character":26}},"rangeLength":26,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":272,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":63,"character":27}}}
>>>
Content-Length: 40

{"id":272,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":273,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":63,"character":26}}}
>>>
Content-Length: 40

{"id":273,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":274,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":63,"character":25}}}
>>>
Content-Length: 40

{"id":274,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":275,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":63,"character":26},"end":{"line":63,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":275,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":276,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":62,"character":75},"end":{"line":63,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":276,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":79},"contentChanges":[{"range":{"start":{"line":62,"character":75},"end":{"line":63,"character":26}},"rangeLength":27,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":277,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":62,"character":75},"end":{"line":62,"character":75}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":277,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":79}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":80},"contentChanges":[{"range":{"start":{"line":62,"character":75},"end":{"line":62,"character":76}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":81},"contentChanges":[{"range":{"start":{"line":62,"character":75},"end":{"line":62,"character":76}},"rangeLength":1,"text":""}]}}Content-Length: 278

{"jsonrpc":"2.0","id":278,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":62,"character":75},"end":{"line":62,"character":75}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":278,"result":[],"jsonrpc":"2.0"}Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":279,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":62,"character":75},"end":{"line":62,"character":75}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":279,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":81}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":82},"contentChanges":[{"range":{"start":{"line":63,"character":0},"end":{"line":64,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":82}}}Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":83},"contentChanges":[{"range":{"start":{"line":64,"character":0},"end":{"line":65,"character":0}},"rangeLength":1,"text":"                          \n"}]}}Content-Length: 204

{"jsonrpc":"2.0","id":280,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":61,"character":32}}}
>>>
Content-Length: 40

{"id":280,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":280}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":84},"contentChanges":[{"range":{"start":{"line":60,"character":0},"end":{"line":61,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":84}}}Content-Length: 204

{"jsonrpc":"2.0","id":281,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":60,"character":29}}}
>>>
Content-Length: 216

{"id":281,"result":{"contents":{"kind":"markdown","value":"### macro `NULL`  \n\n---\n```cpp\n#define NULL __null\n```"},"range":{"start":{"line":68,"character":26},"end":{"line":68,"character":30}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":282,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":59,"character":28}}}
>>>
Content-Length: 40

{"id":282,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":283,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":59,"character":29}}}
>>>
Content-Length: 38

{"id":283,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":284,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":59,"character":29},"end":{"line":59,"character":56}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":284,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":285,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":58,"character":79},"end":{"line":59,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":285,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":85},"contentChanges":[{"range":{"start":{"line":58,"character":79},"end":{"line":59,"character":29}},"rangeLength":30,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":286,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":58,"character":79},"end":{"line":58,"character":79}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":286,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":85}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":86},"contentChanges":[{"range":{"start":{"line":58,"character":79},"end":{"line":58,"character":79}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":287,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":58,"character":80},"end":{"line":58,"character":80}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":287,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":86}}}Content-Length: 204

{"jsonrpc":"2.0","id":288,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":59,"character":37}}}
>>>
Content-Length: 40

{"id":288,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":289,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":36}}}
>>>
Content-Length: 40

{"id":289,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":290,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":35}}}
>>>
Content-Length: 40

{"id":290,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":291,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":30}}}
>>>
Content-Length: 925

{"id":291,"result":{"contents":{"kind":"markdown","value":"### function `xTaskCreatePinnedToCore`  \n\n---\n→ `BaseType_t`  \nParameters:  \n- `TaskFunction_t pvTaskCode`\n- `const char *const pcName`\n- `const uint32_t usStackDepth`\n- `void *const pvParameters`\n- `UBaseType_t uxPriority`\n- `TaskHandle_t *const pvCreatedTask`\n- `const BaseType_t xCoreID`\n\n---\n```cpp\nBaseType_t xTaskCreatePinnedToCore(TaskFunction_t pvTaskCode,\n                                   const char *const pcName,\n                                   const uint32_t usStackDepth,\n                                   void *const pvParameters,\n                                   UBaseType_t uxPriority,\n                                   TaskHandle_t *const pvCreatedTask,\n                                   const BaseType_t xCoreID)\n```"},"range":{"start":{"line":66,"character":30},"end":{"line":66,"character":31}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":292,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":29}}}
>>>
Content-Length: 40

{"id":292,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":293,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":29}}}
>>>
Content-Length: 40

{"id":293,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":294,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":58,"character":30}}}
>>>
Content-Length: 125

{"id":294,"result":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":25}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":295,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":58,"character":30},"end":{"line":58,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":295,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":296,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":58,"character":27},"end":{"line":58,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 396

{"id":296,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","selection":{"start":{"line":58,"character":27},"end":{"line":58,"character":30}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":297,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":58,"character":26},"end":{"line":58,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 396

{"id":297,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","selection":{"start":{"line":58,"character":26},"end":{"line":58,"character":30}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":298,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":63,"character":26}}}
>>>
Content-Length: 243

{"id":298,"result":{"contents":{"kind":"markdown","value":"### macro `ARDUINO_RUNNING_CORE`  \n\n---\n```cpp\n#define ARDUINO_RUNNING_CORE 1\n```"},"range":{"start":{"line":71,"character":26},"end":{"line":71,"character":46}}},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":87},"contentChanges":[{"range":{"start":{"line":58,"character":26},"end":{"line":58,"character":30}},"rangeLength":4,"text":"1"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":88},"contentChanges":[{"range":{"start":{"line":58,"character":27},"end":{"line":58,"character":27}},"rangeLength":0,"text":"0"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":89},"contentChanges":[{"range":{"start":{"line":58,"character":28},"end":{"line":58,"character":28}},"rangeLength":0,"text":"2"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":90},"contentChanges":[{"range":{"start":{"line":58,"character":29},"end":{"line":58,"character":29}},"rangeLength":0,"text":"4"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":299,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":58,"character":30},"end":{"line":58,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":299,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":90}}}Content-Length: 278

{"jsonrpc":"2.0","id":300,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":57,"character":42},"end":{"line":57,"character":42}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":300,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":301,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":63,"character":45}}}
>>>
Content-Length: 243

{"id":301,"result":{"contents":{"kind":"markdown","value":"### macro `ARDUINO_RUNNING_CORE`  \n\n---\n```cpp\n#define ARDUINO_RUNNING_CORE 1\n```"},"range":{"start":{"line":71,"character":26},"end":{"line":71,"character":46}}},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":302,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":61,"character":46},"end":{"line":62,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":302,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":91},"contentChanges":[{"range":{"start":{"line":61,"character":46},"end":{"line":62,"character":26}},"rangeLength":27,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":303,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":61,"character":46},"end":{"line":61,"character":46}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":303,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":91}}}Content-Length: 278

{"jsonrpc":"2.0","id":304,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":57,"character":42},"end":{"line":57,"character":42}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":304,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":92},"contentChanges":[{"range":{"start":{"line":57,"character":42},"end":{"line":57,"character":42}},"rangeLength":0,"text":"/"}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":93},"contentChanges":[{"range":{"start":{"line":57,"character":43},"end":{"line":57,"character":43}},"rangeLength":0,"text":"/"}]}}
>>>
Content-Length: 781

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"},{"range":{"start":{"line":57,"character":42},"end":{"line":57,"character":43}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":305,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":57,"character":44},"end":{"line":57,"character":44}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":305,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":93}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":94},"contentChanges":[{"range":{"start":{"line":57,"character":44},"end":{"line":57,"character":44}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":94}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":95},"contentChanges":[{"range":{"start":{"line":57,"character":45},"end":{"line":57,"character":45}},"rangeLength":0,"text":"n"}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":96},"contentChanges":[{"range":{"start":{"line":57,"character":46},"end":{"line":57,"character":46}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":97},"contentChanges":[{"range":{"start":{"line":57,"character":47},"end":{"line":57,"character":47}},"rangeLength":0,"text":"m"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":98},"contentChanges":[{"range":{"start":{"line":57,"character":48},"end":{"line":57,"character":48}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":99},"contentChanges":[{"range":{"start":{"line":57,"character":49},"end":{"line":57,"character":49}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":99}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":100},"contentChanges":[{"range":{"start":{"line":57,"character":50},"end":{"line":57,"character":50}},"rangeLength":0,"text":"f"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":101},"contentChanges":[{"range":{"start":{"line":57,"character":51},"end":{"line":57,"character":51}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":102},"contentChanges":[{"range":{"start":{"line":57,"character":52},"end":{"line":57,"character":52}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":103},"contentChanges":[{"range":{"start":{"line":57,"character":53},"end":{"line":57,"character":53}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":103}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":104},"contentChanges":[{"range":{"start":{"line":57,"character":54},"end":{"line":57,"character":54}},"rangeLength":0,"text":"h"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":105},"contentChanges":[{"range":{"start":{"line":57,"character":55},"end":{"line":57,"character":55}},"rangeLength":0,"text":"u"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":106},"contentChanges":[{"range":{"start":{"line":57,"character":56},"end":{"line":57,"character":56}},"rangeLength":0,"text":"m"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":107},"contentChanges":[{"range":{"start":{"line":57,"character":57},"end":{"line":57,"character":57}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":108},"contentChanges":[{"range":{"start":{"line":57,"character":58},"end":{"line":57,"character":58}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":109},"contentChanges":[{"range":{"start":{"line":57,"character":59},"end":{"line":57,"character":59}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":306,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":57,"character":60},"end":{"line":57,"character":60}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":306,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":109}}}Content-Length: 204

{"jsonrpc":"2.0","id":307,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":57,"character":44}}}
>>>
Content-Length: 40

{"id":307,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":308,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":53,"character":21},"end":{"line":53,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":308,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":309,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":61,"character":18}}}
>>>
Content-Length: 40

{"id":309,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":310,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":67,"character":17}}}
>>>
Content-Length: 278

{"id":310,"result":{"contents":{"kind":"markdown","value":"### variable `ArduinoOTA`  \n\n---\nType: `class ArduinoOTAClass`  \n\n---\n```cpp\nextern ArduinoOTAClass ArduinoOTA\n```"},"range":{"start":{"line":75,"character":8},"end":{"line":75,"character":18}}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":311,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":9}}}
>>>
Content-Length: 40

{"id":311,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":312,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":7}}}
>>>
Content-Length: 40

{"id":312,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":313,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":5}}}
>>>
Content-Length: 40

{"id":313,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":314,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":4}}}
>>>
Content-Length: 40

{"id":314,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":315,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":3}}}
>>>
Content-Length: 40

{"id":315,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":316,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":72,"character":4},"end":{"line":72,"character":73}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":316,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":317,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":73,"character":17},"end":{"line":73,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":317,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 369

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":110},"contentChanges":[{"range":{"start":{"line":73,"character":17},"end":{"line":73,"character":17}},"rangeLength":0,"text":"// NOTE: if updating SPIFFS this would be the place to unmount SPIFFS"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":318,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":73,"character":23}}}
>>>
Content-Length: 40

{"id":318,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":319,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":73,"character":86},"end":{"line":73,"character":86}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":319,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":110}}}Content-Length: 204

{"jsonrpc":"2.0","id":320,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":71}}}
>>>
Content-Length: 40

{"id":320,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":321,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":72}}}
>>>
Content-Length: 40

{"id":321,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":322,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":73}}}
>>>
Content-Length: 38

{"id":322,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":323,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":72,"character":73},"end":{"line":72,"character":73}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":323,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":324,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":71,"character":0},"end":{"line":72,"character":73}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":324,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":111},"contentChanges":[{"range":{"start":{"line":71,"character":0},"end":{"line":72,"character":73}},"rangeLength":74,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":111}}}Content-Length: 204

{"jsonrpc":"2.0","id":325,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":73,"character":20}}}
>>>
Content-Length: 40

{"id":325,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":326,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":73,"character":33}}}
>>>
Content-Length: 40

{"id":326,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":327,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":73,"character":31}}}
>>>
Content-Length: 40

{"id":327,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":328,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":73,"character":31}}}
>>>
Content-Length: 40

{"id":328,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":329,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":73,"character":1},"end":{"line":73,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":329,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":330,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":73,"character":17}}}
>>>
Content-Length: 40

{"id":330,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 436

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":112},"contentChanges":[{"range":{"start":{"line":74,"character":25},"end":{"line":74,"character":25}},"rangeLength":0,"text":"// Disable client connections "},{"range":{"start":{"line":73,"character":1},"end":{"line":73,"character":31}},"rangeLength":30,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":331,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":74,"character":25},"end":{"line":74,"character":55}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":331,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":112}}}Content-Length: 203

{"jsonrpc":"2.0","id":332,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":76,"character":5}}}
>>>
Content-Length: 40

{"id":332,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":333,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":76,"character":3}}}
>>>
Content-Length: 40

{"id":333,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":334,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":76,"character":2}}}
>>>
Content-Length: 40

{"id":334,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":335,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":76,"character":3}}}
>>>
Content-Length: 40

{"id":335,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":336,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":76,"character":3}}}
>>>
Content-Length: 40

{"id":336,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":337,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":76,"character":3}}}
>>>
Content-Length: 40

{"id":337,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":338,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":76,"character":3}}}
>>>
Content-Length: 40

{"id":338,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":339,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":76,"character":4}}}
>>>
Content-Length: 40

{"id":339,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":340,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":76,"character":4},"end":{"line":76,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":340,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":341,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":76,"character":4},"end":{"line":76,"character":50}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":341,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":342,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":77,"character":38}}}
>>>
Content-Length: 40

{"id":342,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":343,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":76,"character":38}}}
>>>
Content-Length: 40

{"id":343,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 452

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":113},"contentChanges":[{"range":{"start":{"line":77,"character":41},"end":{"line":77,"character":41}},"rangeLength":0,"text":"// Advertise connected clients what's going on"},{"range":{"start":{"line":76,"character":4},"end":{"line":76,"character":50}},"rangeLength":46,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":344,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":77,"character":41},"end":{"line":77,"character":87}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":344,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":113}}}Content-Length: 204

{"jsonrpc":"2.0","id":345,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":77,"character":32}}}
>>>
Content-Length: 40

{"id":345,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":346,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":77,"character":32}}}
>>>
Content-Length: 38

{"id":346,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":347,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":77,"character":32},"end":{"line":77,"character":32}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":347,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":348,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":75,"character":0},"end":{"line":76,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":348,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":114},"contentChanges":[{"range":{"start":{"line":75,"character":0},"end":{"line":76,"character":4}},"rangeLength":5,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":114}}}Content-Length: 204

{"jsonrpc":"2.0","id":349,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":79,"character":11}}}
>>>
Content-Length: 397

{"id":349,"result":{"contents":{"kind":"markdown","value":"### instance-method `closeAll`  \n\n---\n→ `void`  \nParameters:  \n- `uint16_t code = 0`\n- `const char * message = __null`\n\n---\n```cpp\n// In AsyncWebSocket\npublic: void closeAll(uint16_t code = 0, const char *message = __null)\n```"},"range":{"start":{"line":87,"character":11},"end":{"line":87,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":350,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":78,"character":17}}}
>>>
Content-Length: 38

{"id":350,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":351,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":78,"character":4},"end":{"line":78,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":351,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":352,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":78,"character":7}}}
>>>
Content-Length: 40

{"id":352,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":353,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":78,"character":7}}}
>>>
Content-Length: 40

{"id":353,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":354,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":78,"character":8}}}
>>>
Content-Length: 40

{"id":354,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":115},"contentChanges":[{"range":{"start":{"line":79,"character":22},"end":{"line":79,"character":22}},"rangeLength":0,"text":"// Close them"},{"range":{"start":{"line":78,"character":4},"end":{"line":78,"character":17}},"rangeLength":13,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":355,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":79,"character":24}}}
>>>
Content-Length: 40

{"id":355,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":356,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":79,"character":22},"end":{"line":79,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":356,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":115}}}Content-Length: 276

{"jsonrpc":"2.0","id":357,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":77,"character":0},"end":{"line":78,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":357,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":116},"contentChanges":[{"range":{"start":{"line":77,"character":0},"end":{"line":78,"character":4}},"rangeLength":5,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":116}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":117},"contentChanges":[{"range":{"start":{"line":77,"character":0},"end":{"line":78,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":117}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":118},"contentChanges":[{"range":{"start":{"line":75,"character":0},"end":{"line":76,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":118}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":119},"contentChanges":[{"range":{"start":{"line":73,"character":4},"end":{"line":74,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":358,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":73,"character":12}}}
>>>
Content-Length: 299

{"id":358,"result":{"contents":{"kind":"markdown","value":"### field `ws`  \n\n---\nType: `class AsyncWebSocket`  \n\n---\n```cpp\n// In BcbAws\npublic: AsyncWebSocket ws = AsyncWebSocket(\"/ws\")\n```"},"range":{"start":{"line":81,"character":12},"end":{"line":81,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":119}}}Content-Length: 203

{"jsonrpc":"2.0","id":359,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":73,"character":8}}}
>>>
Content-Length: 239

{"id":359,"result":{"contents":{"kind":"markdown","value":"### variable `aws`  \n\n---\nType: `class BcbAws`  \n\n---\n```cpp\nBcbAws aws\n```"},"range":{"start":{"line":81,"character":8},"end":{"line":81,"character":11}}},"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":360,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":73,"character":9}}}
>>>
Content-Length: 563

{"id":360,"result":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":10}},"kind":1},{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":5}},"kind":1},{"range":{"start":{"line":73,"character":8},"end":{"line":73,"character":11}},"kind":1},{"range":{"start":{"line":74,"character":4},"end":{"line":74,"character":7}},"kind":1},{"range":{"start":{"line":75,"character":4},"end":{"line":75,"character":7}},"kind":1},{"range":{"start":{"line":92,"character":25},"end":{"line":92,"character":28}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":361,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":73,"character":9},"end":{"line":73,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":361,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":362,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":73,"character":8}}}
>>>
Content-Length: 239

{"id":362,"result":{"contents":{"kind":"markdown","value":"### variable `aws`  \n\n---\nType: `class BcbAws`  \n\n---\n```cpp\nBcbAws aws\n```"},"range":{"start":{"line":81,"character":8},"end":{"line":81,"character":11}}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":363,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":73,"character":7}}}
>>>
Content-Length: 40

{"id":363,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":364,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":73,"character":8},"end":{"line":73,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":364,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":120},"contentChanges":[{"range":{"start":{"line":73,"character":6},"end":{"line":73,"character":8}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":365,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":73,"character":6},"end":{"line":73,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":365,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":120}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":121},"contentChanges":[{"range":{"start":{"line":73,"character":4},"end":{"line":73,"character":6}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":366,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":73,"character":4},"end":{"line":73,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":366,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":121}}}Content-Length: 278

{"jsonrpc":"2.0","id":367,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":76,"character":23},"end":{"line":76,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":367,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":368,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":13}}}
>>>
Content-Length: 261

{"id":368,"result":{"contents":{"kind":"markdown","value":"### instance-method `end`  \n\n---\n→ `void`  \n\n---\n```cpp\n// In SPIFFSFS\npublic: void end()\n```"},"range":{"start":{"line":80,"character":11},"end":{"line":80,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":369,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":45}}}
>>>
Content-Length: 40

{"id":369,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":370,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":46}}}
>>>
Content-Length: 40

{"id":370,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":371,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":46}}}
>>>
Content-Length: 40

{"id":371,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":372,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":16}}}
>>>
Content-Length: 261

{"id":372,"result":{"contents":{"kind":"markdown","value":"### instance-method `end`  \n\n---\n→ `void`  \n\n---\n```cpp\n// In SPIFFSFS\npublic: void end()\n```"},"range":{"start":{"line":80,"character":16},"end":{"line":80,"character":17}}},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":373,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":72,"character":16},"end":{"line":72,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":373,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":374,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":72,"character":16}}}
>>>
Content-Length: 261

{"id":374,"result":{"contents":{"kind":"markdown","value":"### instance-method `end`  \n\n---\n→ `void`  \n\n---\n```cpp\n// In SPIFFSFS\npublic: void end()\n```"},"range":{"start":{"line":80,"character":16},"end":{"line":80,"character":17}}},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":122},"contentChanges":[{"range":{"start":{"line":70,"character":26},"end":{"line":71,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":375,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":70,"character":26},"end":{"line":70,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":375,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":122}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":123},"contentChanges":[{"range":{"start":{"line":75,"character":23},"end":{"line":76,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":376,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":75,"character":23},"end":{"line":75,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":376,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 173

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino","version":123}}}Content-Length: 204

{"jsonrpc":"2.0","id":377,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":75,"character":11}}}
>>>
Content-Length: 305

{"id":377,"result":{"contents":{"kind":"markdown","value":"### instance-method `setOta`  \n\n---\n→ `bool`  \nParameters:  \n- `bool value`\n\n---\n```cpp\n// In State\npublic: bool setOta(bool value)\n```"},"range":{"start":{"line":83,"character":10},"end":{"line":83,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":378,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"range":{"start":{"line":76,"character":5},"end":{"line":76,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":378,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":379,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":75,"character":16}}}
>>>
Content-Length: 305

{"id":379,"result":{"contents":{"kind":"markdown","value":"### instance-method `setOta`  \n\n---\n→ `bool`  \nParameters:  \n- `bool value`\n\n---\n```cpp\n// In State\npublic: bool setOta(bool value)\n```"},"range":{"start":{"line":83,"character":10},"end":{"line":83,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":380,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":112,"character":8}}}
>>>
Content-Length: 263

{"id":380,"result":{"contents":{"kind":"markdown","value":"### function `printLocalTime`  \n\n---\n→ `class String`  \n\n---\n```cpp\nString printLocalTime()\n```"},"range":{"start":{"line":120,"character":2},"end":{"line":120,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":381,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":17,"character":3}}}
>>>
Content-Length: 293

{"id":381,"result":{"contents":{"kind":"markdown","value":"### variable `daylightOffset_sec`  \n\n---\nType: `const int`  \nValue = `3600`  \n\n---\n```cpp\nconst int daylightOffset_sec = 3600\n```"},"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":5}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":382,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino"},"position":{"line":17,"character":30}}}
>>>
Content-Length: 295

{"id":382,"result":{"contents":{"kind":"markdown","value":"### variable `daylightOffset_sec`  \n\n---\nType: `const int`  \nValue = `3600`  \n\n---\n```cpp\nconst int daylightOffset_sec = 3600\n```"},"range":{"start":{"line":18,"character":29},"end":{"line":18,"character":30}}},"jsonrpc":"2.0"}