






Started logging.

>>>
Content-Length: 2098

{"method":"initialize","params":{"processId":142748,"rootPath":"/tmp/arduino-language-server415404255/sketch","rootUri":"file:///tmp/arduino-language-server415404255/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 5939

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","languageId":"cpp","version":1,"text":"#line 1 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\n#include \u003cArduino.h\u003e\n#include \"State.h\"\n#include \"bcbaws.h\"\n#include \"bcbsdcard.h\"\n#include \"time.h\"\n#include \"WiFiCred1.h\"\n#include \u003cArduinoJson.h\u003e\n#include \u003cArduinoOTA.h\u003e\n#include \u003cESPmDNS.h\u003e\n#include \u003cWiFi.h\u003e\n#include \u003cWiFiUdp.h\u003e\n\n#define ARDUINO_RUNNING_CORE 1\nState state;\nBcbAws aws(\u0026state);\n\n// internal rtc variables\nconst char *ntpServer = \"pool.ntp.org\";\nconst long gmtOffset_sec = -18000;\nconst int daylightOffset_sec = 3600;\n\n\nbool wifiavail = false;\n\n// localtime from internal rtc\n#line 26 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalTime();\n#line 34 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalHour();\n#line 49 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nvoid setup();\n#line 131 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nvoid loop();\n#line 26 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalTime() {\n  struct tm timeinfo;\n  if (!getLocalTime(\u0026timeinfo)) {\n    return (\"\");\n  }\n  return (asctime(\u0026timeinfo));\n}\n\nString printLocalHour() {\n  struct tm timeinfo;\n  if (!getLocalTime(\u0026timeinfo)) {\n    return (\"\");\n  }\n  return (String(asctime(\u0026timeinfo)).substring(11, 16) + \" \");\n}\n\n// define functions\nvoid UpdateClients(void *pvParameters); // maintains the websocket display\n//void UpdateDatabase(void *pvParameters); // maintains the websocket display\nvoid initWiFi();\nvoid initTime();\n\n\nvoid setup() {\n  // start the serial interface\n  Serial.begin(115200);\n  delay(500);\n  initWiFi();\n  initTime();\n  aws.initWebServer();\n  aws.initWebSocket();\n  initSDCard();\n  checkForIndex();\n  digitalWrite(2, LOW);\n  pinMode(2, OUTPUT);\n  state.relay(false);\n  \n  xTaskCreatePinnedToCore(UpdateClients, // function name \n                          \"updateClients\" // A name just for humans\n                          ,\n                          4096 // This stack size can be checked \u0026 adjusted by\n                          // reading the Stack Highwater\n                          ,\n                          NULL,// task input parameter\n                          2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n                          // being the highest, and 0 being the lowest.\n                          ,\n                          NULL, // task handle\n                          ARDUINO_RUNNING_CORE);\n//\n//  xTaskCreatePinnedToCore(UpdateDatabase, \"updateDatabase\" // A name just for humans\n//                          ,\n//                          4096 // This stack size can be checked \u0026 adjusted by\n//                          // reading the Stack Highwater\n//                          ,\n//                          NULL, 2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n//                          // being the highest, and 0 being the lowest.\n//                          ,\n//                          NULL, ARDUINO_RUNNING_CORE);\n\n  ArduinoOTA\n  .onStart([]() {\n    String type;\n    if (ArduinoOTA.getCommand() == U_FLASH)\n      type = \"sketch\";\n    else // U_SPIFFS\n      type = \"filesystem\";\n\n    // NOTE: if updating SPIFFS this would be the place to unmount SPIFFS\n    SPIFFS.end();\n // Disable client connections    \n    ws.enable(false);\n\n    // Advertise connected clients what's going on\n    ws.textAll(\"OTA Update Started\");\n\n    // Close them\n    ws.closeAll();\n    state.setOta(true);\n\n    \n    Serial.println(\"Start updating \" + type);\n  })\n  .onEnd([]() {\n    Serial.println(\"\\nEnd\");\n  })\n  .onProgress([](unsigned int progress, unsigned int total) {\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\n  })\n  .onError([](ota_error_t error) {\n    Serial.printf(\"Error[%u]: \", error);\n    if (error == OTA_AUTH_ERROR)\n      Serial.println(\"Auth Failed\");\n    else if (error == OTA_BEGIN_ERROR)\n      Serial.println(\"Begin Failed\");\n    else if (error == OTA_CONNECT_ERROR)\n      Serial.println(\"Connect Failed\");\n    else if (error == OTA_RECEIVE_ERROR)\n      Serial.println(\"Receive Failed\");\n    else if (error == OTA_END_ERROR)\n      Serial.println(\"End Failed\");\n  });\n  ArduinoOTA.begin();\n}\n\nvoid loop() {\n  ArduinoOTA.handle(); // check if an update is available\n  if (WiFi.status() != WL_CONNECTED) // check if wifi is still connected, if not, reconnect\n    initWiFi();\n  vTaskDelay(60);\n}\n\nvoid UpdateClients(void *pvParameters) { // handle websocket and oled displays\n  (void)pvParameters;\n  for (;;) {\n    if(!state.getOta()) {aws.notifyClients();} // send state to the client as a json string\n    vTaskDelay(10000);\n  }\n}\n\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() \u003e 3400 \u0026\u0026 state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}\n\n\n\n\nvoid initWiFi() {\n  Serial.println(\"connecting to wifi\");\n  // connect to wifi\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  if (WiFi.waitForConnectResult() != WL_CONNECTED) {\n  Serial.println(\"connecting to wifi failed\");\n  delay(500);\n  initWiFi();\n  }\n  Serial.println(\"wifi connected\");\n  wifiavail = true;\n}\n\nvoid initTime() {\n  // set the clock from ntp server\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n  printLocalTime();\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 166

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 1908

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/State.cpp","languageId":"cpp","version":1,"text":"#include\"State.h\"\n\nint State::moisture() {\n      int avg = 0;\n      for (int num = 0; num \u003c= 9; num++) {\n        avg += analogRead(32);\n      }\n      jsonMap[\"moisture\"] = String(avg / 10);\n      return avg / 10;\n    }\n\n\n    int State::threshold() {\n      return jsonMap[\"threshold\"].toInt();\n    };\n    \n    int State::threshold(int value) {\n      jsonMap[\"threshold\"] = String(value);\n      return jsonMap[\"threshold\"].toInt();\n    };\n    \n\n    String State::filename() {\n      return jsonMap[\"filename\"];\n    };\n    \n    String State::filename(String value) {\n      jsonMap[\"filename\"] = value;\n      return jsonMap[\"filename\"];\n    };\n\n\n    bool State::setOta (bool value) {\n      ota = value;\n      return ota;\n    };\n    \n    bool State::getOta () {\n      return ota;\n    };\n\n\n    bool State::reload() {\n      return (jsonMap[\"reload\"] == \"true\");\n    };\n    \n    bool State::reload(bool value) {\n      jsonMap[\"reload\"] = value ? \"true\" : \"false\";\n      return (jsonMap[\"reload\"] == \"true\");\n    };\n\n\n    bool State::relay() {\n      return (jsonMap[\"relay\"] == \"true\");\n    };\n    \n    bool State::relay(bool value) {\n      jsonMap[\"relay\"] = value ? \"true\" : \"false\";\n      return (jsonMap[\"relay\"] == \"true\");\n    };\n\n\n    String State::getJSON() {\n      moisture();\n      String json = \"{\";\n      String quote = \"\\\"\";\n      for (auto const x : jsonMap) {\n        if (json.length() \u003e 3) json += \",\";\n        json += quote + x.first + quote + \":\" + quote + x.second + quote;\n      };\n      json += \"}\";\n      Serial.println(json);\n      return json;\n    }\n\nState state;\n"}},"jsonrpc":"2.0"}Content-Length: 748

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/State.h","languageId":"cpp","version":1,"text":"#ifndef STATE\n#define STATE\n#include\u003cArduino.h\u003e\n#include\u003cmap\u003e\n//set initial state\n\nclass State {\n  public:\n\n    int moisture();\n\n    int threshold();\n    int threshold(int value);\n\n\n    String filename();\n    String filename(String value);\n\n\n    bool setOta (bool value);\n    bool getOta ();\n\n    bool reload();\n    bool reload(bool value);\n\n    bool relay();\n    bool relay(bool value);\n\n    String getJSON();\n\n  private:\n    std::map\u003cString, String\u003e jsonMap;\n    bool ota = false;\n\n};\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 341

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/WiFiCred.h","languageId":"cpp","version":1,"text":"\n//wifi connection credentials\nconst char* ssid     = \"Espnet\";\n//const char* ssid     = \"Frontier4848\";\nconst char* password = \"*********\";\n"}},"jsonrpc":"2.0"}Content-Length: 294

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/WiFiCred1.h","languageId":"cpp","version":1,"text":"// wifi connection credentials\nconst char *ssid = \"Espnet\";\nconst char *password = \"8141695320\";\n"}},"jsonrpc":"2.0"}Content-Length: 2902

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","languageId":"cpp","version":1,"text":"#include\"bcbaws.h\"\n\nBcbAws::BcbAws(State* istate){\n  state=istate;\n}\n\nvoid BcbAws::notifyClients() {\n  ws.textAll(state-\u003egetJSON());  // send non-slider updating data\n}\n\nvoid BcbAws::handleWebSocketMessage(void *arg, uint8_t *data, size_t len) { // receive the comm from the client and convert it into a string\n  AwsFrameInfo *info = (AwsFrameInfo *)arg;\n  if (info-\u003efinal \u0026\u0026 info-\u003eindex == 0 \u0026\u0026 info-\u003elen == len \u0026\u0026\n      info-\u003eopcode == WS_TEXT) {\n    data[len] = 0;\n    parseCommand((char *)data);\n  }\n}\n\nvoid BcbAws::onEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,\n             AwsEventType type, void *arg, uint8_t *data, size_t len) {\n  switch (type) {\n    case WS_EVT_CONNECT:\n      notifyClients();\n      break;\n    case WS_EVT_DISCONNECT:\n      Serial.printf(\"WebSocket client #%u disconnected\\n\", client-\u003eid());\n      break;\n    case WS_EVT_DATA:\n      handleWebSocketMessage(arg, data, len);\n      break;\n    case WS_EVT_PONG:\n    case WS_EVT_ERROR:\n      break;\n  }\n}\n\n\nvoid BcbAws::initWebSocket() {\n  ws.onEvent(onEvent);\n  server.addHandler(\u0026ws);\n}\n\n\nvoid BcbAws::initWebServer() {\n  // Route for root / web page served from spiffs\n  // TODO add routines for dynamically updating index.htm\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request-\u003esend(SPIFFS, \"/index.htm\", \"text/html\");\n  });    \n  \n  server.on(\"/config\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request-\u003esend(SPIFFS, \"/config.htm\", \"text/html\");\n  }); \n  \n  server.on(\"/json\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request-\u003esend(200, \"application/json\", state.getJSON());\n  });\n  // start the web server\n  server.begin();\n}\n\n\nvoid BcbAws::parseCommand(String command) {\n  \n  if (command == \"relay\") {\n    state-\u003erelay(!state-\u003erelay());\n    digitalWrite(2,state-\u003erelay());\n    notifyClients();\n  }\n  // file upload handler\n\n  if (command.substring(0, 4) == \"upld\") {\n    state-\u003efilename(command.substring(5));\n    deleteFile(SPIFFS, \"/temp.txt\");\n  }\n\n  if (command.substring(0, 4) == \"comp\") {\n    deleteFile(SPIFFS, (\"/\" + state-\u003efilename()).c_str());\n    renameFile(SPIFFS, \"/temp.txt\", (\"/\" + state-\u003efilename()).c_str());\n    state-\u003efilename(\"\");\n  }\n\n  if (command.substring(0, 4) == \"file\") {\n    String message = command.substring(5);\n    appendFile(SPIFFS, \"/temp.txt\", message.c_str());\n  }\n\n  if (command == \"reload\") {\n    state-\u003ereload(true);\n    notifyClients();\n    state-\u003ereload(false);\n  }\n}\n"}},"jsonrpc":"2.0"}Content-Length: 5746

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","languageId":"cpp","version":1,"text":"#ifndef BCBAWS\n#define BCBAWS\n#include \u003cArduino.h\u003e\n#include \u003cESPAsyncWebServer.h\u003e\n#include \"bcbsdcard.h\"\n#include \u003cSPIFFS.h\u003e\n#include \"State.h\"\n//#include \u003cHTTPClient.h\u003e\n\nAsyncWebServer server(80);\nAsyncWebSocket ws(\"/ws\");\n\nclass BcbAws{\n  public:\nBcbAws(State*istate);\nvoid parseCommand(String command);\nvoid notifyClients();\nvoid handleWebSocketMessage(void *arg, uint8_t *data, size_t len);\nvoid initWebSocket();\nvoid initWebServer();\nvoid onEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,\n             AwsEventType type, void *arg, uint8_t *data, size_t len);\n\n  private:\n//  AsyncWebServer server;\n//  AsyncWebSocket ws;\n  State* state;\n};\n// define functions\n//void parseCommand(String command);\n//void notifyClients();\n//void handleWebSocketMessage(void *arg, uint8_t *data, size_t len);\n//void initWebSocket();\n//void initWebServer();\n//void updateDB();\n\n// web server variables\n//AsyncWebServer server(80);\n//AsyncWebSocket ws(\"/ws\");\n// web client\n//HTTPClient http;\n//char req[450];\n\n//void notifyClients() {\n//  ws.textAll(state.getJSON());  // send non-slider updating data\n//}\n\n//void handleWebSocketMessage(void *arg, uint8_t *data, size_t len) { // receive the comm from the client and convert it into a string\n//  AwsFrameInfo *info = (AwsFrameInfo *)arg;\n//  if (info-\u003efinal \u0026\u0026 info-\u003eindex == 0 \u0026\u0026 info-\u003elen == len \u0026\u0026\n//      info-\u003eopcode == WS_TEXT) {\n//    data[len] = 0;\n//    parseCommand((char *)data);\n//  }\n//}\n\n\n// handle websocket connections\n//void onEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,\n//             AwsEventType type, void *arg, uint8_t *data, size_t len) {\n//  switch (type) {\n//    case WS_EVT_CONNECT:\n//      notifyClients();\n//      break;\n//    case WS_EVT_DISCONNECT:\n//      Serial.printf(\"WebSocket client #%u disconnected\\n\", client-\u003eid());\n//      break;\n//    case WS_EVT_DATA:\n//      handleWebSocketMessage(arg, data, len);\n//      break;\n//    case WS_EVT_PONG:\n//    case WS_EVT_ERROR:\n//      break;\n//  }\n//}\n\n// init websockets\n//void initWebSocket() {\n//  ws.onEvent(onEvent);\n//  server.addHandler(\u0026ws);\n//}\n\n// init webserver\n//void initWebServer() {\n//  // Route for root / web page served from spiffs\n//  // TODO add routines for dynamically updating index.htm\n//  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest * request) {\n//    request-\u003esend(SPIFFS, \"/index.htm\", \"text/html\");\n//  });    \n//  \n//  server.on(\"/config\", HTTP_GET, [](AsyncWebServerRequest * request) {\n//    request-\u003esend(SPIFFS, \"/config.htm\", \"text/html\");\n//  }); \n//  \n//  server.on(\"/json\", HTTP_GET, [](AsyncWebServerRequest * request) {\n//    request-\u003esend(200, \"application/json\", state.getJSON());\n//  });\n//  // start the web server\n//  server.begin();\n//}\n\n\n\n//// convert state to json\n//String getJson(bool b) {\n//\n//  String response = \"{\\\"moisture\\\":\"+String(state.moisture())+\",\\\"relay\\\":\"+(state.relay()?\"\\\"on\\\"\":\"\\\"off\\\"\")+\",\\\"initial\\\": \\\"true\\\"}\";\n//\n//  return response;\n//}\n\n//parse the command coming from the client(s)\n//void parseCommand(String command) {\n//  Serial.println(command);\n//\n//  \n//  \n//  if (command == \"relay\") {\n//    state.relay(!state.relay());\n//    digitalWrite(2,state.relay());\n//    notifyClients();\n//  }\n//  // file upload handler\n//\n//  if (command.substring(0, 4) == \"upld\") {\n//    state.filename(command.substring(5));\n//    deleteFile(SPIFFS, \"/temp.txt\");\n//  }\n//\n//  if (command.substring(0, 4) == \"comp\") {\n//    deleteFile(SPIFFS, (\"/\" + state.filename()).c_str());\n//    renameFile(SPIFFS, \"/temp.txt\", (\"/\" + state.filename()).c_str());\n//    state.filename(\"\");\n//  }\n//\n//  if (command.substring(0, 4) == \"file\") {\n//    String message = command.substring(5);\n//    appendFile(SPIFFS, \"/temp.txt\", message.c_str());\n//  }\n//\n//  if (command == \"reload\") {\n//    state.reload(true);\n//    notifyClients();\n//    state.reload(false);\n//  }\n//}\n\n//void updateDB(){\n//      Serial.println(\"[HTTP] begin...\\n\");\n//      strcpy(req, (\"http://192.168.1.177/~brian/esp32/mysql-data-logger/garden.php?temp=\" + String(state.temp()) + \"\u0026press=\" + String(state.pressure()) + \"\u0026p64=\" + String(state.pressure64()) + \"\u0026humid=\" + String(state.humidity())).c_str());\n//      Serial.println(String(state.temp()));\n//      Serial.println(String(state.pressure()));\n//      Serial.println(String(state.pressure64()));\n//      Serial.println(String(state.humidity()));\n//      Serial.println(String(req));\n//      http.begin(req); //HTTP\n//\n//      Serial.print(\"[HTTP] GET...\\n\");\n//      // start connection and send HTTP header\n//      int httpCode = http.GET();\n//\n//      // httpCode will be negative on error\n//      if (httpCode \u003e 0) {\n//        // HTTP header has been send and Server response header has been handled\n//        Serial.printf(\"[HTTP] GET... code: %d\\n\", httpCode);\n//\n//        // file found at server\n//        if (httpCode == HTTP_CODE_OK) {\n//          String payload = http.getString();\n//          Serial.println(payload);\n//        }\n//      } else {\n//        Serial.printf(\"[HTTP] GET... failed, error: %s\\n\", http.errorToString(httpCode).c_str());\n//      }\n//\n//      http.end();\n//    }\n\n\n\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 2495

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbsdcard.h","languageId":"cpp","version":1,"text":"#include \"FS.h\"\n#include \"SPIFFS.h\"\n#include \"State.h\"\n\n#ifndef BCBSD\n#define BCBSD\n#include \"defaulthtml.h\"\n\n\n// variables\nxSemaphoreHandle semFile = xSemaphoreCreateMutex(); // file operation lock\nvoid initSDCard() {\n  Serial.print(\"Initializing SD card...\");\n\n  if (!SPIFFS.begin(true)) {\n    Serial.println(\"initialization failed!\");\n    while (1);\n  }\n  Serial.println(\"initialization done.\");\n\n}\n\nvoid appendFile(fs::FS \u0026fs, const char * path, const char * message) {\n\n  if (xSemaphoreTake(semFile, 500)) {\n    File file = fs.open(path, FILE_APPEND);\n\n    if (!file) {\n      return;\n    }\n    file.print(message);\n    file.close();\n\n    xSemaphoreGive(semFile);\n  }\n}\n\nvoid writeFile(fs::FS \u0026fs, const char * path, const char * message) {\n\n  if (xSemaphoreTake(semFile, 500)) {\n    File file = fs.open(path, FILE_WRITE);\n\n    if (!file) {\n      return;\n    }\n    file.print(message);\n    file.close();\n\n    xSemaphoreGive(semFile);\n  }\n}\nString readFile(fs::FS \u0026fs, const char * path){\n    Serial.printf(\"Reading file: %s\\r\\n\", path);\n\n    File file = fs.open(path);\n    if(!file || file.isDirectory()){\n        Serial.println(\"- failed to open file for reading\");\n        return \"\";\n    }\n    String result;\n    Serial.println(\"- read from file:\");\n    while(file.available()){\n        result += String(char(file.read()));\n    }\n    file.close();\n    return result;\n}\n\nvoid renameFile(fs::FS \u0026fs, const char * path1, const char * path2) {\n  if (xSemaphoreTake(semFile, 500)) {\n    fs.rename(path1, path2);\n    xSemaphoreGive(semFile);\n  }\n}\n\nvoid deleteFile(fs::FS \u0026fs, const char * path) {\n  if (xSemaphoreTake(semFile, 500)) {\n    fs.remove(path);\n    xSemaphoreGive(semFile);\n  }\n}\n\n// write the default index.htm to SPIFFS\n//  check if index exists and only update if it doesn't\nvoid checkForIndex(){\n//  if(SPIFFS.exists(\"/data.json\")) {\n//    state.json(readFile(SPIFFS, \"/data.json\"));\n//    Serial.println(state.json());\n//  }\n  if(SPIFFS.exists(\"/index.htm\")) return; // \n  deleteFile(SPIFFS,\"/index.htm\");\n  delay(500);\n  File file = SPIFFS.open(\"/index.htm\", FILE_WRITE);\n    file.print(htmlCode);\n    file.close();\n    }\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 3695

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/defaulthtml.h","languageId":"cpp","version":1,"text":"//default html page if not in SPIFFS\n\n// beginning of default web page\nconst char htmlCode[]PROGMEM = R\"rawliteral(\n \u003c!DOCTYPE HTML\u003e\n\u003chtml\u003e\n\n\u003chead\u003e\n  \u003c! define meta data\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n    \u003c! define the style CSS of your page\u003e\n     \n\u003c/head\u003e\n\n\u003cbody\u003e\n\n\n\n    \u003cinput type='file' name='upload' id='upload' value=''\u003e\u003cspan id=\"percent\"\u003e\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cscript\u003e\n    var gateway = `ws://${window.location.hostname}/ws`;\n    var websocket;\n    var state = {};\n    var json = {};\n\n    window.addEventListener('load', onLoad);\n\n    function initWebSocket() {\n      console.log('Trying to open a WebSocket connection...');\n      websocket = new WebSocket(gateway);\n      websocket.onopen = onOpen;\n      websocket.onclose = onClose;\n      websocket.onmessage = onMessage;\n    }\n\n    function onOpen(event) {\n      console.log('Connection opened');\n    }\n\n    function onClose(event) {\n      console.log('Connection closed');\n      setTimeout(initWebSocket, 2000);\n    }\n\n    function toFixed(num, fixed) {\n      var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\n      return num.toString().match(re)[0];\n    }\n\n    function onMessage(event) {\n\n    }\n\n    // on page load\n    function onLoad(event) {\n      initWebSocket();\n      document.getElementById(\"upload\").addEventListener(\"change\", (e) =\u003e processFile(e));\n    }\n\n    function processFile(e) {\n      const reader = new FileReader();\n      reader.readAsText(e.path[0].files[0]);\n      var myfilename = e.path[0].files[0].name;\n\n      reader.onload = (e) =\u003e {\n        var myfile = e.target.result;\n        var myarray = myfile.split('');\n        var mylength = myfile.length;\n        i = 0;\n        k = 1;\n        var sendArray = [];\n        sendArray[0] = (\"upld:\" + myfilename);\n\n        function getChunk() {\n          var sendstring = '';\n          for (var j = 0; j \u003c 512; j++) {\n            if (i \u003c mylength) {\n              sendstring += myarray[i];\n            }\n            i++\n          }\n          return sendstring;\n        }\n\n        function loopThroughSplittedText(splittedText) {\n          splittedText.forEach(function (text, i) {\n            setTimeout(function () {\n              sendMessage(text, i);\n            }, i * 500)\n          })\n        }\n\n        while (i \u003c mylength) {\n\n          sendArray[k] = (\"file:\" + getChunk());\n          k++;\n        }\n        sendArray[k] = (\"comp\");\n        sendstring = '';\n        loopThroughSplittedText(sendArray);\n      };\n    }\n\n    function sendMessage(data, index) {\n      if (index) var percent = index / k * 100;\n      if (data.substring(0, 4) == 'file') document.getElementById('percent').innerHTML = percent + ' %';\n      if (data.substring(0, 4) == 'comp') {\n        document.getElementById('percent').innerHTML = \"completed\";\n        setTimeout(() =\u003e {\n          sendMessage(\"reload\");\n        }, 2000);\n      }\n      websocket.send(data);\n    }\n      function doTime() {\n        document.getElementById('time').innerHTML = new Date().toLocaleString();\n      }\n      setInterval(doTime, 1000);\n\n  \u003c/script\u003e\n\u003c/body\u003e\n\n\u003c/html\u003e\n)rawliteral\";\n\n// end of default web page\n"}},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/67","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/67","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/67","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 1131

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"misc-definitions-in-headers","message":"Variable 'ssid' defined in a header file; variable definitions in header files can lead to ODR violations","range":{"end":{"character":16,"line":2},"start":{"character":12,"line":2}},"severity":2,"source":"clang-tidy"},{"code":"misc-definitions-in-headers","message":"Variable 'password' defined in a header file; variable definitions in header files can lead to ODR violations","range":{"end":{"character":20,"line":4},"start":{"character":12,"line":4}},"severity":2,"source":"clang-tidy"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/WiFiCred.h","version":1}}Content-Length: 1132

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"misc-definitions-in-headers","message":"Variable 'ssid' defined in a header file; variable definitions in header files can lead to ODR violations","range":{"end":{"character":16,"line":1},"start":{"character":12,"line":1}},"severity":2,"source":"clang-tidy"},{"code":"misc-definitions-in-headers","message":"Variable 'password' defined in a header file; variable definitions in header files can lead to ODR violations","range":{"end":{"character":20,"line":2},"start":{"character":12,"line":2}},"severity":2,"source":"clang-tidy"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/WiFiCred1.h","version":1}}Content-Length: 1028

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":9,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/State.h","version":1}}Content-Length: 1031

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":17,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/State.cpp","version":1}}Content-Length: 1030

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":1}}Content-Length: 1073

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"typecheck_incomplete_array_needs_initializer","message":"Definition of variable with array type needs an explicit size or an initializer","range":{"end":{"character":19,"line":3},"start":{"character":11,"line":3}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":28,"line":3},"start":{"character":21,"line":3}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/defaulthtml.h","version":1}}Content-Length: 1033

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":15,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbsdcard.h","version":1}}Content-Length: 1694

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":20,"line":39},"start":{"character":13,"line":39}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":56},"start":{"character":43,"line":56}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":56},"start":{"character":48,"line":56}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":1}}Content-Length: 1036

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":1}}Content-Length: 3935

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"state","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":11,"line":14},"start":{"character":6,"line":14}}},{"kind":13,"name":"aws","range":{"end":{"character":18,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":7,"line":15}}},{"kind":13,"name":"ntpServer","range":{"end":{"character":38,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":21,"line":18},"start":{"character":12,"line":18}}},{"kind":13,"name":"gmtOffset_sec","range":{"end":{"character":33,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":24,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"daylightOffset_sec","range":{"end":{"character":35,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":28,"line":20},"start":{"character":10,"line":20}}},{"kind":13,"name":"wifiavail","range":{"end":{"character":22,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":14,"line":23},"start":{"character":5,"line":23}}},{"kind":12,"name":"printLocalTime","range":{"end":{"character":23,"line":27},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":21,"line":27},"start":{"character":7,"line":27}}},{"kind":12,"name":"printLocalHour","range":{"end":{"character":23,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":7,"line":29}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":31},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":10,"line":31},"start":{"character":5,"line":31}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":9,"line":33},"start":{"character":5,"line":33}}},{"kind":12,"name":"printLocalTime","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":21,"line":35},"start":{"character":7,"line":35}}},{"kind":12,"name":"printLocalHour","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":7,"line":43}}},{"kind":12,"name":"UpdateClients","range":{"end":{"character":38,"line":52},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":18,"line":52},"start":{"character":5,"line":52}}},{"kind":12,"name":"initWiFi","range":{"end":{"character":15,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":13,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"initTime","range":{"end":{"character":15,"line":55},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":13,"line":55},"start":{"character":5,"line":55}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":10,"line":58},"start":{"character":5,"line":58}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":145},"start":{"character":0,"line":140}},"selectionRange":{"end":{"character":9,"line":140},"start":{"character":5,"line":140}}},{"kind":12,"name":"UpdateClients","range":{"end":{"character":1,"line":153},"start":{"character":0,"line":147}},"selectionRange":{"end":{"character":18,"line":147},"start":{"character":5,"line":147}}},{"kind":12,"name":"initWiFi","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":169}},"selectionRange":{"end":{"character":13,"line":169},"start":{"character":5,"line":169}}},{"kind":12,"name":"initTime","range":{"end":{"character":1,"line":187},"start":{"character":0,"line":183}},"selectionRange":{"end":{"character":13,"line":183},"start":{"character":5,"line":183}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 260

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 258

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/State.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/67","percentage":2.9850746268656718}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/67","percentage":2.9850746268656718}}}Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/WiFiCred1.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 259

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/defaulthtml.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 683

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/WiFiCred1.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":4},"jsonrpc":"2.0"}Content-Length: 679

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/State.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/67","percentage":4.4776119402985071}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/67","percentage":4.4776119402985071}}}Content-Length: 37

{"id":11,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}Content-Length: 681

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":12,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/67","percentage":5.9701492537313436}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/67","percentage":5.9701492537313436}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/67","percentage":7.4626865671641793}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/67","percentage":7.4626865671641793}}}
>>>
Content-Length: 680

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":13,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 685

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/defaulthtml.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/67","percentage":8.9552238805970141}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/67","percentage":8.9552238805970141}}}Content-Length: 37

{"id":14,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 683

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 682

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 266

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"context":{"diagnostics":[]}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":17,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/67","percentage":10.447761194029852}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/67","percentage":10.447761194029852}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/67","percentage":11.940298507462687}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/67","percentage":11.940298507462687}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/67","percentage":13.432835820895523}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/67","percentage":13.432835820895523}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/67","percentage":14.925373134328359}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/67","percentage":14.925373134328359}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/67","percentage":16.417910447761194}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/67","percentage":16.417910447761194}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/67","percentage":17.910447761194028}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/67","percentage":17.910447761194028}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/67","percentage":19.402985074626866}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/67","percentage":19.402985074626866}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/67","percentage":20.895522388059703}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/67","percentage":20.895522388059703}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/67","percentage":22.388059701492537}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/67","percentage":22.388059701492537}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/67","percentage":23.880597014925375}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/67","percentage":23.880597014925375}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/67","percentage":25.373134328358208}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/67","percentage":25.373134328358208}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/67","percentage":26.865671641791046}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/67","percentage":26.865671641791046}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/67","percentage":28.35820895522388}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/67","percentage":28.35820895522388}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/67","percentage":29.850746268656717}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/67","percentage":29.850746268656717}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/67","percentage":31.343283582089551}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/67","percentage":31.343283582089551}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/67","percentage":32.835820895522389}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/67","percentage":32.835820895522389}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/67","percentage":34.328358208955223}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/67","percentage":34.328358208955223}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/67","percentage":35.820895522388057}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/67","percentage":35.820895522388057}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/67","percentage":37.313432835820898}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/67","percentage":37.313432835820898}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/67","percentage":38.805970149253731}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/67","percentage":38.805970149253731}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/67","percentage":40.298507462686565}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/67","percentage":40.298507462686565}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/67","percentage":41.791044776119406}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/67","percentage":41.791044776119406}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/67","percentage":43.28358208955224}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/67","percentage":43.28358208955224}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/67","percentage":44.776119402985074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/67","percentage":44.776119402985074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/67","percentage":46.268656716417908}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/67","percentage":46.268656716417908}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/67","percentage":47.761194029850749}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/67","percentage":47.761194029850749}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/67","percentage":49.253731343283583}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/67","percentage":49.253731343283583}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/67","percentage":50.746268656716417}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/67","percentage":50.746268656716417}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/67","percentage":52.238805970149251}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/67","percentage":52.238805970149251}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/67","percentage":53.731343283582092}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/67","percentage":53.731343283582092}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/67","percentage":55.223880597014926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/67","percentage":55.223880597014926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/67","percentage":56.71641791044776}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/67","percentage":56.71641791044776}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/67","percentage":58.208955223880594}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/67","percentage":58.208955223880594}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/67","percentage":59.701492537313435}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/67","percentage":59.701492537313435}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/67","percentage":61.194029850746269}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/67","percentage":61.194029850746269}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/67","percentage":62.686567164179102}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/67","percentage":62.686567164179102}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/67","percentage":64.179104477611943}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/67","percentage":64.179104477611943}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/67","percentage":65.671641791044777}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/67","percentage":65.671641791044777}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/67","percentage":67.164179104477611}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/67","percentage":67.164179104477611}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/67","percentage":68.656716417910445}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/67","percentage":68.656716417910445}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/67","percentage":70.149253731343279}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/67","percentage":70.149253731343279}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/67","percentage":71.641791044776113}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/67","percentage":71.641791044776113}}}
>>>
Content-Length: 202

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":19}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":18,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":19,"line":14},"start":{"character":13,"line":14}}}]}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":19}},"context":{"diagnostics":[]}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":19,"jsonrpc":"2.0","result":[]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/67","percentage":73.134328358208961}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/67","percentage":73.134328358208961}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/67","percentage":74.626865671641795}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/67","percentage":74.626865671641795}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/67","percentage":76.119402985074629}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/67","percentage":76.119402985074629}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/67","percentage":77.611940298507463}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/67","percentage":77.611940298507463}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/67","percentage":79.104477611940297}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/67","percentage":79.104477611940297}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/67","percentage":80.597014925373131}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/67","percentage":80.597014925373131}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/67","percentage":82.089552238805965}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/67","percentage":82.089552238805965}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/67","percentage":83.582089552238813}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/67","percentage":83.582089552238813}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/67","percentage":85.074626865671647}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/67","percentage":85.074626865671647}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"58/67","percentage":86.567164179104481}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"58/67","percentage":86.567164179104481}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"59/67","percentage":88.059701492537314}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"59/67","percentage":88.059701492537314}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"60/67","percentage":89.552238805970148}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"60/67","percentage":89.552238805970148}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"61/67","percentage":91.044776119402982}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"61/67","percentage":91.044776119402982}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"62/67","percentage":92.537313432835816}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"63/67","percentage":94.02985074626865}}}
>>>
Content-Length: 270

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":2},"contentChanges":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":19}},"text":","}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1205

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"},{"code":"missing_param","message":"Expected parameter declarator","range":{"end":{"character":21,"line":14},"start":{"character":20,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":2}}
>>>
Content-Length: 198

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":20}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 92

{"id":20,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 438

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":21}},"severity":1,"code":"missing_param","source":"clang","message":"Expected parameter declarator"}]}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":21,"jsonrpc":"2.0","result":[]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"64/67","percentage":95.522388059701498}}}
>>>
Content-Length: 270

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":3},"contentChanges":[{"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":20}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1205

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"},{"code":"missing_param","message":"Expected parameter declarator","range":{"end":{"character":22,"line":14},"start":{"character":21,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":3}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"65/67","percentage":97.014925373134332}}}
>>>
Content-Length: 438

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":22}},"severity":1,"code":"missing_param","source":"clang","message":"Expected parameter declarator"}]}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":22,"jsonrpc":"2.0","result":[]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"66/67","percentage":98.507462686567166}}}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 201

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":9,"character":21}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 123

{"id":23,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":21,"line":9},"start":{"character":15,"line":9}}}]}
>>>
Content-Length: 261

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":21}},"context":{"diagnostics":[]}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":24,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":19}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":25,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":24},"jsonrpc":"2.0"}Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":20}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":26,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":25},"jsonrpc":"2.0"}Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":19}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":27,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":26},"jsonrpc":"2.0"}Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":20}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":28,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":27},"jsonrpc":"2.0"}Content-Length: 438

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":22}},"severity":1,"code":"missing_param","source":"clang","message":"Expected parameter declarator"}]}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 290

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":4},"contentChanges":[{"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":21}},"text":"AsyncWebServer server"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":14,"character":42},"end":{"line":14,"character":42}},"context":{"diagnostics":[]}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":30,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"}},"jsonrpc":"2.0"}Content-Length: 270

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":5},"contentChanges":[{"range":{"start":{"line":14,"character":42},"end":{"line":14,"character":42}},"text":","}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":29},"jsonrpc":"2.0"}Content-Length: 198

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":43}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 1030

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":4}}Content-Length: 1205

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"},{"code":"missing_param","message":"Expected parameter declarator","range":{"end":{"character":44,"line":14},"start":{"character":43,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":5}}Content-Length: 92

{"id":31,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":14,"character":43},"end":{"line":14,"character":43}},"context":{"diagnostics":[]}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":32,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"}},"jsonrpc":"2.0"}Content-Length: 270

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":6},"contentChanges":[{"range":{"start":{"line":14,"character":43},"end":{"line":14,"character":43}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":31},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":30},"jsonrpc":"2.0"}Content-Length: 198

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":44}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 92

{"id":33,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":14,"character":44},"end":{"line":14,"character":44}},"context":{"diagnostics":[]}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 1205

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"},{"code":"missing_param","message":"Expected parameter declarator","range":{"end":{"character":45,"line":14},"start":{"character":44,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":6}}Content-Length: 37

{"id":34,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":10,"character":17}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":35,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":10},"start":{"character":15,"line":10}}}]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":34},"jsonrpc":"2.0"}Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"context":{"diagnostics":[]}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":36,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"context":{"diagnostics":[]}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":37,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":42}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":38,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":42}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":39,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":43}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":40,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":43}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":41,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":43}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":42,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 438

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":14,"character":44},"end":{"line":14,"character":44}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":44},"end":{"line":14,"character":45}},"severity":1,"code":"missing_param","source":"clang","message":"Expected parameter declarator"}]}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":43,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 286

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":7},"contentChanges":[{"range":{"start":{"line":14,"character":44},"end":{"line":14,"character":44}},"text":"AsyncWebSocket ws"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":14,"character":61},"end":{"line":14,"character":61}},"context":{"diagnostics":[]}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":44,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 1030

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":7}}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":14,"character":61},"end":{"line":14,"character":61}},"context":{"diagnostics":[]}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":45,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":61}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":46,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":14,"character":60}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":47,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":61,"line":14},"start":{"character":59,"line":14}}}]}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":9},"end":{"line":14,"character":61}},"context":{"diagnostics":[]}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":48,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":61}},"context":{"diagnostics":[]}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":49,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":28}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 209

{"id":50,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":28,"line":2},"start":{"character":22,"line":2}}},{"kind":2,"range":{"end":{"character":14,"line":3},"start":{"character":8,"line":3}}}]}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":28},"end":{"line":2,"character":28}},"context":{"diagnostics":[]}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":51,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":2},"contentChanges":[{"range":{"start":{"line":2,"character":28},"end":{"line":2,"character":28}},"text":"AsyncWebServer server, AsyncWebSocket ws"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":68},"end":{"line":2,"character":68}},"context":{"diagnostics":[]}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":52,"jsonrpc":"2.0","result":[]}Content-Length: 2375

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected ')'\n\nbcbaws.cpp:3:15: note: to match this '('","range":{"end":{"character":49,"line":2},"start":{"character":43,"line":2}},"severity":1,"source":"clang"},{"message":"To match this '('\n\nbcbaws.cpp:3:44: error: expected ')'","range":{"end":{"character":15,"line":2},"start":{"character":14,"line":2}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'istate'; did you mean 'state'? (fix available)\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:28:10:\nnote: 'state' declared here","range":{"end":{"character":14,"line":3},"start":{"character":8,"line":3}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":20,"line":39},"start":{"character":13,"line":39}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":56},"start":{"character":43,"line":56}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":56},"start":{"character":48,"line":56}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":2}}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":28}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 123

{"id":53,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":42,"line":2},"start":{"character":22,"line":2}}}]}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":28},"end":{"line":2,"character":28}},"context":{"diagnostics":[]}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":54,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":51},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":28},"end":{"line":2,"character":28}},"context":{"diagnostics":[]}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":55,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 270

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":3},"contentChanges":[{"range":{"start":{"line":2,"character":28},"end":{"line":2,"character":28}},"text":","}]},"jsonrpc":"2.0"}Content-Length: 199

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":29}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 1927

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":20,"line":39},"start":{"character":13,"line":39}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":56},"start":{"character":43,"line":56}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":56},"start":{"character":48,"line":56}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":3}}Content-Length: 92

{"id":56,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":29},"end":{"line":2,"character":29}},"context":{"diagnostics":[]}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":57,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":29},"end":{"line":2,"character":29}},"context":{"diagnostics":[]}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":58,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":11}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"id":59,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### constructor `BcbAws::BcbAws`  \n\n---\n```cpp\n// In BcbAws\npublic: BcbAws::BcbAws(State *istate, AsyncWebServer server, AsyncWebSocket ws)\n```"},"range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}}}}
>>>
Content-Length: 495

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'"}]}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":60,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":71},"end":{"line":2,"character":71}},"context":{"diagnostics":[]}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":61,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":15}},"context":{"diagnostics":[]}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":62,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":41}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 227

{"id":63,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `AsyncWebServer`  \n\n---\n```cpp\nclass AsyncWebServer {}\n```"},"range":{"end":{"character":43,"line":2},"start":{"character":29,"line":2}}}}
>>>
Content-Length: 262

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":9}},"context":{"diagnostics":[]}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":64,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":10,"character":25},"end":{"line":10,"character":25}},"context":{"diagnostics":[]}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":65,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":10,"character":25},"end":{"line":11,"character":0}},"context":{"diagnostics":[]}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":66,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":25}},"context":{"diagnostics":[]}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":67,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":9,"character":0},"end":{"line":10,"character":25}},"context":{"diagnostics":[]}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":68,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 284

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":8},"contentChanges":[{"range":{"start":{"line":9,"character":0},"end":{"line":10,"character":25}},"rangeLength":52,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1030

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":8}}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"}},"jsonrpc":"2.0"}Content-Length: 194

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":7,"character":2}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":69,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":11,"character":4}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":70,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":13,"character":21}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 241

{"id":71,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `ARDUINO_RUNNING_CORE`  \n\n---\n```cpp\n#define ARDUINO_RUNNING_CORE 1\n```"},"range":{"end":{"character":28,"line":13},"start":{"character":8,"line":13}}}}
>>>
Content-Length: 208

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":13,"character":30}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":72,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":13,"character":30},"end":{"line":13,"character":30}},"context":{"diagnostics":[]}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":73,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":13,"character":30},"end":{"line":13,"character":30}},"text":"\n"}]},"jsonrpc":"2.0"}Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":15,"character":8}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 240

{"id":74,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `state`  \n\n---\nType: `class State`  \n\n---\n```cpp\nState state\n```"},"range":{"end":{"character":11,"line":15},"start":{"character":6,"line":15}}}}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":73},"jsonrpc":"2.0"}
<<<
Content-Length: 1036

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":2}}
>>>
Content-Length: 5945

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":3},"contentChanges":[{"text":"#line 1 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\n#include \u003cArduino.h\u003e\n#include \"State.h\"\n#include \"bcbaws.h\"\n#include \"bcbsdcard.h\"\n#include \"time.h\"\n#include \"WiFiCred1.h\"\n#include \u003cArduinoJson.h\u003e\n#include \u003cArduinoOTA.h\u003e\n#include \u003cESPmDNS.h\u003e\n#include \u003cWiFi.h\u003e\n#include \u003cWiFiUdp.h\u003e\n\n#define ARDUINO_RUNNING_CORE 1\n\nState state;\nBcbAws aws(\u0026state);\n\n// internal rtc variables\nconst char *ntpServer = \"pool.ntp.org\";\nconst long gmtOffset_sec = -18000;\nconst int daylightOffset_sec = 3600;\n\n\nbool wifiavail = false;\n\n// localtime from internal rtc\n#line 27 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalTime();\n#line 35 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalHour();\n#line 50 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nvoid setup();\n#line 132 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nvoid loop();\n#line 27 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalTime() {\n  struct tm timeinfo;\n  if (!getLocalTime(\u0026timeinfo)) {\n    return (\"\");\n  }\n  return (asctime(\u0026timeinfo));\n}\n\nString printLocalHour() {\n  struct tm timeinfo;\n  if (!getLocalTime(\u0026timeinfo)) {\n    return (\"\");\n  }\n  return (String(asctime(\u0026timeinfo)).substring(11, 16) + \" \");\n}\n\n// define functions\nvoid UpdateClients(void *pvParameters); // maintains the websocket display\n//void UpdateDatabase(void *pvParameters); // maintains the websocket display\nvoid initWiFi();\nvoid initTime();\n\n\nvoid setup() {\n  // start the serial interface\n  Serial.begin(115200);\n  delay(500);\n  initWiFi();\n  initTime();\n  aws.initWebServer();\n  aws.initWebSocket();\n  initSDCard();\n  checkForIndex();\n  digitalWrite(2, LOW);\n  pinMode(2, OUTPUT);\n  state.relay(false);\n  \n  xTaskCreatePinnedToCore(UpdateClients, // function name \n                          \"updateClients\" // A name just for humans\n                          ,\n                          4096 // This stack size can be checked \u0026 adjusted by\n                          // reading the Stack Highwater\n                          ,\n                          NULL,// task input parameter\n                          2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n                          // being the highest, and 0 being the lowest.\n                          ,\n                          NULL, // task handle\n                          ARDUINO_RUNNING_CORE);\n//\n//  xTaskCreatePinnedToCore(UpdateDatabase, \"updateDatabase\" // A name just for humans\n//                          ,\n//                          4096 // This stack size can be checked \u0026 adjusted by\n//                          // reading the Stack Highwater\n//                          ,\n//                          NULL, 2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n//                          // being the highest, and 0 being the lowest.\n//                          ,\n//                          NULL, ARDUINO_RUNNING_CORE);\n\n  ArduinoOTA\n  .onStart([]() {\n    String type;\n    if (ArduinoOTA.getCommand() == U_FLASH)\n      type = \"sketch\";\n    else // U_SPIFFS\n      type = \"filesystem\";\n\n    // NOTE: if updating SPIFFS this would be the place to unmount SPIFFS\n    SPIFFS.end();\n // Disable client connections    \n    ws.enable(false);\n\n    // Advertise connected clients what's going on\n    ws.textAll(\"OTA Update Started\");\n\n    // Close them\n    ws.closeAll();\n    state.setOta(true);\n\n    \n    Serial.println(\"Start updating \" + type);\n  })\n  .onEnd([]() {\n    Serial.println(\"\\nEnd\");\n  })\n  .onProgress([](unsigned int progress, unsigned int total) {\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\n  })\n  .onError([](ota_error_t error) {\n    Serial.printf(\"Error[%u]: \", error);\n    if (error == OTA_AUTH_ERROR)\n      Serial.println(\"Auth Failed\");\n    else if (error == OTA_BEGIN_ERROR)\n      Serial.println(\"Begin Failed\");\n    else if (error == OTA_CONNECT_ERROR)\n      Serial.println(\"Connect Failed\");\n    else if (error == OTA_RECEIVE_ERROR)\n      Serial.println(\"Receive Failed\");\n    else if (error == OTA_END_ERROR)\n      Serial.println(\"End Failed\");\n  });\n  ArduinoOTA.begin();\n}\n\nvoid loop() {\n  ArduinoOTA.handle(); // check if an update is available\n  if (WiFi.status() != WL_CONNECTED) // check if wifi is still connected, if not, reconnect\n    initWiFi();\n  vTaskDelay(60);\n}\n\nvoid UpdateClients(void *pvParameters) { // handle websocket and oled displays\n  (void)pvParameters;\n  for (;;) {\n    if(!state.getOta()) {aws.notifyClients();} // send state to the client as a json string\n    vTaskDelay(10000);\n  }\n}\n\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() \u003e 3400 \u0026\u0026 state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}\n\n\n\n\nvoid initWiFi() {\n  Serial.println(\"connecting to wifi\");\n  // connect to wifi\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  if (WiFi.waitForConnectResult() != WL_CONNECTED) {\n  Serial.println(\"connecting to wifi failed\");\n  delay(500);\n  initWiFi();\n  }\n  Serial.println(\"wifi connected\");\n  wifiavail = true;\n}\n\nvoid initTime() {\n  // set the clock from ntp server\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n  printLocalTime();\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":0}},"text":"AsyncWebServer server(80);\nAsyncWebSocket ws(\"/ws\");"}]},"jsonrpc":"2.0"}Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":15,"character":25},"end":{"line":15,"character":25}},"context":{"diagnostics":[]}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 37

{"id":75,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":17}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 247

{"id":76,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### constructor `BcbAws`  \n\n---\n```cpp\n// In BcbAws\npublic: BcbAws(State *istate)\n```"},"range":{"end":{"character":17,"line":17},"start":{"character":12,"line":17}}}}
>>>
Content-Length: 208

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":17}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":77,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":17},"start":{"character":7,"line":17}}}]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":75},"jsonrpc":"2.0"}Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":17},"end":{"line":17,"character":17}},"context":{"diagnostics":[]}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":78,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":74},"jsonrpc":"2.0"}Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":20,"character":20}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 335

{"id":79,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `ntpServer`  \n\n---\nType: `const char *`  \nValue = `&\"pool.ntp.org\"[0]`  \ninternal rtc variables  \n\n---\n```cpp\nconst char *ntpServer = \"pool.ntp.org\"\n```"},"range":{"end":{"character":21,"line":20},"start":{"character":12,"line":20}}}}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":78},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":76},"jsonrpc":"2.0"}Content-Length: 167

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"}},"id":80,"jsonrpc":"2.0"}Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":17,"character":17},"end":{"line":17,"character":17}},"text":","}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":77},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":18}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 4316

{"id":80,"jsonrpc":"2.0","result":[{"kind":13,"name":"server","range":{"end":{"character":21,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":21,"line":14},"start":{"character":15,"line":14}}},{"kind":13,"name":"ws","range":{"end":{"character":17,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":17,"line":15},"start":{"character":15,"line":15}}},{"kind":13,"name":"state","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":11,"line":16},"start":{"character":6,"line":16}}},{"kind":13,"name":"aws","range":{"end":{"character":18,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":7,"line":17}}},{"kind":13,"name":"ntpServer","range":{"end":{"character":38,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":21,"line":20},"start":{"character":12,"line":20}}},{"kind":13,"name":"gmtOffset_sec","range":{"end":{"character":33,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":24,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"daylightOffset_sec","range":{"end":{"character":35,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":28,"line":22},"start":{"character":10,"line":22}}},{"kind":13,"name":"wifiavail","range":{"end":{"character":22,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":14,"line":25},"start":{"character":5,"line":25}}},{"kind":12,"name":"printLocalTime","range":{"end":{"character":23,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":7,"line":29}}},{"kind":12,"name":"printLocalHour","range":{"end":{"character":23,"line":31},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":21,"line":31},"start":{"character":7,"line":31}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":10,"line":33},"start":{"character":5,"line":33}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":9,"line":35},"start":{"character":5,"line":35}}},{"kind":12,"name":"printLocalTime","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":37}},"selectionRange":{"end":{"character":21,"line":37},"start":{"character":7,"line":37}}},{"kind":12,"name":"printLocalHour","range":{"end":{"character":1,"line":51},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":21,"line":45},"start":{"character":7,"line":45}}},{"kind":12,"name":"UpdateClients","range":{"end":{"character":38,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":18,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"initWiFi","range":{"end":{"character":15,"line":56},"start":{"character":0,"line":56}},"selectionRange":{"end":{"character":13,"line":56},"start":{"character":5,"line":56}}},{"kind":12,"name":"initTime","range":{"end":{"character":15,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":13,"line":57},"start":{"character":5,"line":57}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":140},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":10,"line":60},"start":{"character":5,"line":60}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":147},"start":{"character":0,"line":142}},"selectionRange":{"end":{"character":9,"line":142},"start":{"character":5,"line":142}}},{"kind":12,"name":"UpdateClients","range":{"end":{"character":1,"line":155},"start":{"character":0,"line":149}},"selectionRange":{"end":{"character":18,"line":149},"start":{"character":5,"line":149}}},{"kind":12,"name":"initWiFi","range":{"end":{"character":1,"line":183},"start":{"character":0,"line":171}},"selectionRange":{"end":{"character":13,"line":171},"start":{"character":5,"line":171}}},{"kind":12,"name":"initTime","range":{"end":{"character":1,"line":189},"start":{"character":0,"line":185}},"selectionRange":{"end":{"character":13,"line":185},"start":{"character":5,"line":185}}}]}Content-Length: 92

{"id":81,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":18}},"context":{"diagnostics":[]}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":82,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":20,"character":21}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 335

{"id":83,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `ntpServer`  \n\n---\nType: `const char *`  \nValue = `&\"pool.ntp.org\"[0]`  \ninternal rtc variables  \n\n---\n```cpp\nconst char *ntpServer = \"pool.ntp.org\"\n```"},"range":{"end":{"character":21,"line":20},"start":{"character":12,"line":20}}}}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":81},"jsonrpc":"2.0"}Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":18}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":80},"jsonrpc":"2.0"}Content-Length: 229

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":19},"context":{"triggerKind":1}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 54153

{"id":84,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"detail":"State","filterText":"state","insertText":"state","insertTextFormat":2,"kind":6,"label":" state","score":16.54463005065918,"sortText":"3e7ba499state","textEdit":{"newText":"state","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WString.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"filterText":"String","insertText":"String","insertTextFormat":2,"kind":7,"label":"•String","score":14.309270858764648,"sortText":"3e9b0d3aString","textEdit":{"newText":"String","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <cstddef>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `<cstddef>`"},"filterText":"size_t","insertText":"size_t","insertTextFormat":2,"kind":8,"label":"•size_t","score":12.124225616455078,"sortText":"3ebe032csize_t","textEdit":{"newText":"size_t","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"documentation":{"kind":"markdown","value":"set initial state"},"filterText":"State","insertText":"State","insertTextFormat":2,"kind":7,"label":" State","score":8.5657854080200195,"sortText":"3ef6f28bState","textEdit":{"newText":"State","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"filterText":"short","insertText":"short","insertTextFormat":2,"kind":14,"label":" short","score":8,"sortText":"3f000000short","textEdit":{"newText":"short","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"filterText":"signed","insertText":"signed","insertTextFormat":2,"kind":14,"label":" signed","score":8,"sortText":"3f000000signed","textEdit":{"newText":"signed","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"detail":"size_t","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"kind":15,"label":" sizeof(expression-or-type)","score":8,"sortText":"3f000000sizeof","textEdit":{"newText":"sizeof(${0:expression-or-type})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"detail":"size_t","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"kind":15,"label":" sizeof...(parameter-pack)","score":8,"sortText":"3f000000sizeof...","textEdit":{"newText":"sizeof...(${0:parameter-pack})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"filterText":"static_cast","insertText":"static_cast<${1:type}>(${0:expression})","insertTextFormat":2,"kind":15,"label":" static_cast<type>(expression)","score":8,"sortText":"3f000000static_cast","textEdit":{"newText":"static_cast<${1:type}>(${0:expression})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"filterText":"struct","insertText":"struct","insertTextFormat":2,"kind":14,"label":" struct","score":8,"sortText":"3f000000struct","textEdit":{"newText":"struct","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"filterText":"SemaphoreHandle_t","insertText":"SemaphoreHandle_t","insertTextFormat":2,"kind":8,"label":" SemaphoreHandle_t","score":7.2600007057189941,"sortText":"3f17ae13SemaphoreHandle_t","textEdit":{"newText":"SemaphoreHandle_t","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"detail":"[3 overloads]","filterText":"State","insertText":"State($0)","insertTextFormat":2,"kind":4,"label":" State(…)","score":6.6000003814697266,"sortText":"3f2cccccState","textEdit":{"newText":"State($0)","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"detail":"AsyncWebServer","filterText":"server","insertText":"server","insertTextFormat":2,"kind":6,"label":" server","score":6.6000003814697266,"sortText":"3f2cccccserver","textEdit":{"newText":"server","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"detail":"SemaphoreHandle_t","documentation":{"kind":"markdown","value":"file operation lock"},"filterText":"semFile","insertText":"semFile","insertTextFormat":2,"kind":6,"label":" semFile","score":5.1494083404541016,"sortText":"3f5b380csemFile","textEdit":{"newText":"semFile","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"detail":"const char *","documentation":{"kind":"markdown","value":"wifi connection credentials"},"filterText":"ssid","insertText":"ssid","insertTextFormat":2,"kind":6,"label":" ssid","score":4.8400001525878906,"sortText":"3f651eb8ssid","textEdit":{"newText":"ssid","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"detail":"[13 overloads]","filterText":"String","insertText":"String($0)","insertTextFormat":2,"kind":4,"label":" String(…)","score":4.4000000953674316,"sortText":"3f733333String","textEdit":{"newText":"String($0)","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"HardwareSerial","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"Serial","insertText":"Serial","insertTextFormat":2,"kind":6,"label":"•Serial","score":3.6670997142791748,"sortText":"3f954e3dSerial","textEdit":{"newText":"Serial","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"filterText":"std","insertText":"std","insertTextFormat":2,"kind":9,"label":" std","score":3.5200002193450928,"sortText":"3f9eb851std","textEdit":{"newText":"std","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"setup","insertText":"setup()","insertTextFormat":2,"kind":3,"label":" setup()","score":2.0746676921844482,"sortText":"3ffb38a5setup","textEdit":{"newText":"setup()","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"kind":3,"label":"•strlen(const char *)","score":2.0665140151977539,"sortText":"3ffbbe3cstrlen","textEdit":{"newText":"strlen(${1:const char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WString.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"kind":7,"label":"•StringSumHelper","score":1.9189802408218384,"sortText":"400a5edbStringSumHelper","textEdit":{"newText":"StringSumHelper","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"sprintf","insertText":"sprintf(${1:char *}, ${2:const char *, ...})","insertTextFormat":2,"kind":3,"label":"•sprintf(char *, const char *, ...)","score":1.9009603261947632,"sortText":"400cad55sprintf","textEdit":{"newText":"sprintf(${1:char *}, ${2:const char *, ...})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-spi.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp32-hal-spi.h\"`"},"filterText":"spi_t","insertText":"spi_t","insertTextFormat":2,"kind":8,"label":"•spi_t","score":1.7842658758163452,"sortText":"401b9d2dspi_t","textEdit":{"newText":"spi_t","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Stream.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \ncompatability macros for testing  \n#define getInt() parseInt()  \n#define getInt(skipChar) parseInt(skipchar)  \n#define getFloat() parseFloat()  \n#define getFloat(skipChar) parseFloat(skipChar)  \n#define getString( pre_string, post_string, buffer, length) readBytesBetween( pre_string, terminator, buffer, length)"},"filterText":"Stream","insertText":"Stream","insertTextFormat":2,"kind":7,"label":"•Stream","score":1.7557684183120728,"sortText":"401f42fbStream","textEdit":{"newText":"Stream","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":"•strcpy(char *, const char *)","score":1.5094624757766724,"sortText":"403ec9efstrcpy","textEdit":{"newText":"strcpy(${1:char *}, ${2:const char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"pins_arduino.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"const uint8_t","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"filterText":"SDA","insertText":"SDA","insertTextFormat":2,"kind":6,"label":"•SDA","score":1.5037370920181274,"sortText":"403f858bSDA","textEdit":{"newText":"SDA","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"SPIFFS.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"fs::SPIFFSFS","documentation":{"kind":"markdown","value":"From `\"SPIFFS.h\"`"},"filterText":"SPIFFS","insertText":"SPIFFS","insertTextFormat":2,"kind":6,"label":"•SPIFFS","score":1.5037370920181274,"sortText":"403f858bSPIFFS","textEdit":{"newText":"SPIFFS","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"STA_CONNECTED_BIT","insertText":"STA_CONNECTED_BIT","insertTextFormat":2,"kind":6,"label":"•STA_CONNECTED_BIT","score":1.5037370920181274,"sortText":"403f858bSTA_CONNECTED_BIT","textEdit":{"newText":"STA_CONNECTED_BIT","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"STA_HAS_IP6_BIT","insertText":"STA_HAS_IP6_BIT","insertTextFormat":2,"kind":6,"label":"•STA_HAS_IP6_BIT","score":1.5037370920181274,"sortText":"403f858bSTA_HAS_IP6_BIT","textEdit":{"newText":"STA_HAS_IP6_BIT","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"STA_HAS_IP_BIT","insertText":"STA_HAS_IP_BIT","insertTextFormat":2,"kind":6,"label":"•STA_HAS_IP_BIT","score":1.5037370920181274,"sortText":"403f858bSTA_HAS_IP_BIT","textEdit":{"newText":"STA_HAS_IP_BIT","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"STA_STARTED_BIT","insertText":"STA_STARTED_BIT","insertTextFormat":2,"kind":6,"label":"•STA_STARTED_BIT","score":1.5037370920181274,"sortText":"403f858bSTA_STARTED_BIT","textEdit":{"newText":"STA_STARTED_BIT","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"scanf","insertText":"scanf(${1:const char *, ...})","insertTextFormat":2,"kind":3,"label":"•scanf(const char *, ...)","score":1.5037370920181274,"sortText":"403f858bscanf","textEdit":{"newText":"scanf(${1:const char *, ...})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"snprintf","insertText":"snprintf(${1:char *}, ${2:size_t}, ${3:const char *, ...})","insertTextFormat":2,"kind":3,"label":"•snprintf(char *, size_t, const char *, ...)","score":1.5037370920181274,"sortText":"403f858bsnprintf","textEdit":{"newText":"snprintf(${1:char *}, ${2:size_t}, ${3:const char *, ...})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"stdlib.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"filterText":"srand","insertText":"srand(${1:unsigned int __seed})","insertTextFormat":2,"kind":3,"label":"•srand(unsigned int __seed)","score":1.5037370920181274,"sortText":"403f858bsrand","textEdit":{"newText":"srand(${1:unsigned int __seed})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"stpcpy","insertText":"stpcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":"•stpcpy(char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstpcpy","textEdit":{"newText":"stpcpy(${1:char *}, ${2:const char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"stpncpy","insertText":"stpncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":"•stpncpy(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstpncpy","textEdit":{"newText":"stpncpy(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":"•strcasecmp(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcasecmp","textEdit":{"newText":"strcasecmp(${1:const char *}, ${2:const char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strcasestr","insertText":"strcasestr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":"•strcasestr(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcasestr","textEdit":{"newText":"strcasestr(${1:const char *}, ${2:const char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"kind":3,"label":"•strchr(const char *, int)","score":1.5037370920181274,"sortText":"403f858bstrchr","textEdit":{"newText":"strchr(${1:const char *}, ${2:int})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strchrnul","insertText":"strchrnul(${1:const char *}, ${2:int})","insertTextFormat":2,"kind":3,"label":"•strchrnul(const char *, int)","score":1.5037370920181274,"sortText":"403f858bstrchrnul","textEdit":{"newText":"strchrnul(${1:const char *}, ${2:int})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":"•strcmp(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcmp","textEdit":{"newText":"strcmp(${1:const char *}, ${2:const char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strcoll","insertText":"strcoll(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":"•strcoll(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcoll","textEdit":{"newText":"strcoll(${1:const char *}, ${2:const char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strcspn","insertText":"strcspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":"•strcspn(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcspn","textEdit":{"newText":"strcspn(${1:const char *}, ${2:const char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strdup","insertText":"strdup(${1:const char *})","insertTextFormat":2,"kind":3,"label":"•strdup(const char *)","score":1.5037370920181274,"sortText":"403f858bstrdup","textEdit":{"newText":"strdup(${1:const char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strerror_r","insertText":"strerror_r(${1:int}, ${2:char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":"•strerror_r(int, char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrerror_r","textEdit":{"newText":"strerror_r(${1:int}, ${2:char *}, ${3:size_t})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":"•strlcat(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrlcat","textEdit":{"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strlwr","insertText":"strlwr(${1:char *})","insertTextFormat":2,"kind":3,"label":"•strlwr(char *)","score":1.5037370920181274,"sortText":"403f858bstrlwr","textEdit":{"newText":"strlwr(${1:char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":"•strncmp(const char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncmp","textEdit":{"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strncpy","insertText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":"•strncpy(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncpy","textEdit":{"newText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strnlen","insertText":"strnlen(${1:const char *}, ${2:size_t})","insertTextFormat":2,"kind":3,"label":"•strnlen(const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrnlen","textEdit":{"newText":"strnlen(${1:const char *}, ${2:size_t})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strpbrk","insertText":"strpbrk(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":"•strpbrk(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrpbrk","textEdit":{"newText":"strpbrk(${1:const char *}, ${2:const char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"kind":3,"label":"•strrchr(const char *, int)","score":1.5037370920181274,"sortText":"403f858bstrrchr","textEdit":{"newText":"strrchr(${1:const char *}, ${2:int})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strsignal","insertText":"strsignal(${1:int __signo})","insertTextFormat":2,"kind":3,"label":"•strsignal(int __signo)","score":1.5037370920181274,"sortText":"403f858bstrsignal","textEdit":{"newText":"strsignal(${1:int __signo})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strspn","insertText":"strspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":"•strspn(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrspn","textEdit":{"newText":"strspn(${1:const char *}, ${2:const char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":"•strstr(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrstr","textEdit":{"newText":"strstr(${1:const char *}, ${2:const char *})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"string.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"string.h\"`"},"filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"kind":3,"label":"•strtok_r(char *, const char *, char **)","score":1.5037370920181274,"sortText":"403f858bstrtok_r","textEdit":{"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"system_prov_event_t","insertText":"system_prov_event_t","insertTextFormat":2,"kind":8,"label":"•system_prov_event_t","score":1.5037370920181274,"sortText":"403f858bsystem_prov_event_t","textEdit":{"newText":"system_prov_event_t","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/sockets.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"lwip/sockets.h\"`"},"filterText":"socket","insertText":"socket(${1:int domain}, ${2:int type}, ${3:int protocol})","insertTextFormat":2,"kind":3,"label":"•socket(int domain, int type, int protocol)","score":1.451268196105957,"sortText":"40463cd8socket","textEdit":{"newText":"socket(${1:int domain}, ${2:int type}, ${3:int protocol})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"StreamString.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"StreamString.h\"`"},"filterText":"StreamString","insertText":"StreamString","insertTextFormat":2,"kind":7,"label":"•StreamString","score":1.3747211694717407,"sortText":"40500923StreamString","textEdit":{"newText":"StreamString","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-sigmadelta.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"esp32-hal-sigmadelta.h\"`"},"filterText":"sigmaDeltaAttachPin","insertText":"sigmaDeltaAttachPin(${1:uint8_t pin}, ${2:uint8_t channel})","insertTextFormat":2,"kind":3,"label":"•sigmaDeltaAttachPin(uint8_t pin, uint8_t channel)","score":1.3747211694717407,"sortText":"40500923sigmaDeltaAttachPin","textEdit":{"newText":"sigmaDeltaAttachPin(${1:uint8_t pin}, ${2:uint8_t channel})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"math.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"float","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"filterText":"sinhf","insertText":"sinhf(${1:float})","insertTextFormat":2,"kind":3,"label":"•sinhf(float)","score":1.3747211694717407,"sortText":"40500923sinhf","textEdit":{"newText":"sinhf(${1:float})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-spi.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-spi.h\"`  \nHelper functions to translate frequency to clock divider and back"},"filterText":"spiFrequencyToClockDiv","insertText":"spiFrequencyToClockDiv(${1:uint32_t freq})","insertTextFormat":2,"kind":3,"label":"•spiFrequencyToClockDiv(uint32_t freq)","score":1.3747211694717407,"sortText":"40500923spiFrequencyToClockDiv","textEdit":{"newText":"spiFrequencyToClockDiv(${1:uint32_t freq})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-spi.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"esp32-hal-spi.h\"`  \nDeactivate enabled SPI_CSx pins"},"filterText":"spiSSClear","insertText":"spiSSClear(${1:spi_t *spi})","insertTextFormat":2,"kind":3,"label":"•spiSSClear(spi_t *spi)","score":1.3747211694717407,"sortText":"40500923spiSSClear","textEdit":{"newText":"spiSSClear(${1:spi_t *spi})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-spi.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"esp32-hal-spi.h\"`  \nEnable/Disable hardware control of SPI_CSx pins"},"filterText":"spiSSEnable","insertText":"spiSSEnable(${1:spi_t *spi})","insertTextFormat":2,"kind":3,"label":"•spiSSEnable(spi_t *spi)","score":1.3747211694717407,"sortText":"40500923spiSSEnable","textEdit":{"newText":"spiSSEnable(${1:spi_t *spi})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-spi.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"esp32-hal-spi.h\"`"},"filterText":"spiWriteWord","insertText":"spiWriteWord(${1:spi_t *spi}, ${2:uint16_t data})","insertTextFormat":2,"kind":3,"label":"•spiWriteWord(spi_t *spi, uint16_t data)","score":1.3747211694717407,"sortText":"40500923spiWriteWord","textEdit":{"newText":"spiWriteWord(${1:spi_t *spi}, ${2:uint16_t data})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"FS.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"FS.h\"`"},"filterText":"SeekEnd","insertText":"SeekEnd","insertTextFormat":2,"kind":18,"label":"•SeekEnd","score":1.3670337200164795,"sortText":"4051050aSeekEnd","textEdit":{"newText":"SeekEnd","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"sys/unistd.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void *","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"filterText":"sbrk","insertText":"sbrk(${1:ptrdiff_t __incr})","insertTextFormat":2,"kind":3,"label":"•sbrk(ptrdiff_t __incr)","score":1.2690916061401367,"sortText":"405d8e68sbrk","textEdit":{"newText":"sbrk(${1:ptrdiff_t __incr})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <sys/select.h>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `<sys/select.h>`"},"filterText":"select","insertText":"select(${1:int nfds}, ${2:_types_fd_set *readfds}, ${3:_types_fd_set *writefds}, ${4:_types_fd_set *errorfds}, ${5:struct timeval *timeout})","insertTextFormat":2,"kind":3,"label":"•select(int nfds, _types_fd_set *readfds, _types_fd_set *writefds, _types_fd_set *errorfds, struct timeval *timeout)","score":1.2690916061401367,"sortText":"405d8e68select","textEdit":{"newText":"select(${1:int nfds}, ${2:_types_fd_set *readfds}, ${3:_types_fd_set *writefds}, ${4:_types_fd_set *errorfds}, ${5:struct timeval *timeout})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <sys/stat.h>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `<sys/stat.h>`"},"filterText":"stat","insertText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})","insertTextFormat":2,"kind":3,"label":"•stat(const char *__path, struct stat *__sbuf)","score":1.2690916061401367,"sortText":"405d8e68stat","textEdit":{"newText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"libb64/cencode.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"filterText":"step_A","insertText":"step_A","insertTextFormat":2,"kind":20,"label":"•step_A","score":1.2690916061401367,"sortText":"405d8e68step_A","textEdit":{"newText":"step_A","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"libb64/cencode.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"filterText":"step_B","insertText":"step_B","insertTextFormat":2,"kind":20,"label":"•step_B","score":1.2690916061401367,"sortText":"405d8e68step_B","textEdit":{"newText":"step_B","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"libb64/cencode.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"base64_encodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cencode.h\"`"},"filterText":"step_C","insertText":"step_C","insertTextFormat":2,"kind":20,"label":"•step_C","score":1.2690916061401367,"sortText":"405d8e68step_C","textEdit":{"newText":"step_C","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"libb64/cdecode.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"base64_decodestep","documentation":{"kind":"markdown","value":"From `\"libb64/cdecode.h\"`"},"filterText":"step_a","insertText":"step_a","insertTextFormat":2,"kind":20,"label":"•step_a","score":1.2690916061401367,"sortText":"405d8e68step_a","textEdit":{"newText":"step_a","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_event_loop.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_event_loop.h\"`  \n@brief Application specified event callback function  \n@param void \\*ctx : reserved for user  \n@param system_event_t \\*event : event type defined in this file  \n@return ESP_OK : succeed  \n@return others : fail"},"filterText":"system_event_cb_t","insertText":"system_event_cb_t","insertTextFormat":2,"kind":8,"label":"•system_event_cb_t","score":1.2690916061401367,"sortText":"405d8e68system_event_cb_t","textEdit":{"newText":"system_event_cb_t","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"SPIFFS.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"SPIFFS.h\"`"},"filterText":"SPIFFSFS","insertText":"fs::SPIFFSFS","insertTextFormat":2,"kind":7,"label":"•fs::SPIFFSFS","score":1.2578854560852051,"sortText":"405efd9cSPIFFSFS","textEdit":{"newText":"fs::SPIFFSFS","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, bool>::__type","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"signbit","insertText":"std::signbit(${1:_Tp __x})","insertTextFormat":2,"kind":3,"label":"•std::signbit(_Tp __x)","score":1.2531143426895142,"sortText":"405f99f3signbit","textEdit":{"newText":"std::signbit(${1:_Tp __x})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"float","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"sinh","insertText":"std::sinh(${1:float __x})","insertTextFormat":2,"kind":3,"label":"•std::sinh(float __x)","score":1.2531143426895142,"sortText":"405f99f3sinh","textEdit":{"newText":"std::sinh(${1:float __x})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"soc/gpio_sd_struct.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"gpio_sd_dev_t","documentation":{"kind":"markdown","value":"From `\"soc/gpio_sd_struct.h\"`"},"filterText":"SIGMADELTA","insertText":"SIGMADELTA","insertTextFormat":2,"kind":6,"label":"•SIGMADELTA","score":1.1871124505996704,"sortText":"40680cb3SIGMADELTA","textEdit":{"newText":"SIGMADELTA","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"soc/spi_struct.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"spi_dev_t","documentation":{"kind":"markdown","value":"From `\"soc/spi_struct.h\"`  \nSPI0 IS FOR INTERNAL USE"},"filterText":"SPI0","insertText":"SPI0","insertTextFormat":2,"kind":6,"label":"•SPI0","score":1.1826096773147583,"sortText":"4068a03fSPI0","textEdit":{"newText":"SPI0","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"SPIFFSEditor.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"SPIFFSEditor.h\"`"},"filterText":"SPIFFSEditor","insertText":"SPIFFSEditor","insertTextFormat":2,"kind":7,"label":"•SPIFFSEditor","score":1.1826096773147583,"sortText":"4068a03fSPIFFSEditor","textEdit":{"newText":"SPIFFSEditor","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"soc/spi_struct.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"soc/spi_struct.h\"`"},"filterText":"spi_dev_t","insertText":"spi_dev_t","insertTextFormat":2,"kind":8,"label":"•spi_dev_t","score":1.1826096773147583,"sortText":"4068a03fspi_dev_t","textEdit":{"newText":"spi_dev_t","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"scalbln","insertText":"std::scalbln","insertTextFormat":2,"kind":18,"label":"•std::scalbln","score":1.1391948461532593,"sortText":"406e2eddscalbln","textEdit":{"newText":"std::scalbln","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"scalblnf","insertText":"std::scalblnf","insertTextFormat":2,"kind":18,"label":"•std::scalblnf","score":1.1391948461532593,"sortText":"406e2eddscalblnf","textEdit":{"newText":"std::scalblnf","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_event_legacy.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"system_event_id_t","documentation":{"kind":"markdown","value":"From `\"esp_event_legacy.h\"`  \nESP32 soft-AP stop"},"filterText":"SYSTEM_EVENT_AP_STOP","insertText":"SYSTEM_EVENT_AP_STOP","insertTextFormat":2,"kind":20,"label":"•SYSTEM_EVENT_AP_STOP","score":1.1118042469024658,"sortText":"4071b066SYSTEM_EVENT_AP_STOP","textEdit":{"newText":"SYSTEM_EVENT_AP_STOP","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_event_legacy.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"system_event_id_t","documentation":{"kind":"markdown","value":"From `\"esp_event_legacy.h\"`  \nESP32 station stop"},"filterText":"SYSTEM_EVENT_STA_STOP","insertText":"SYSTEM_EVENT_STA_STOP","insertTextFormat":2,"kind":20,"label":"•SYSTEM_EVENT_STA_STOP","score":1.1118042469024658,"sortText":"4071b066SYSTEM_EVENT_STA_STOP","textEdit":{"newText":"SYSTEM_EVENT_STA_STOP","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_event_legacy.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"system_event_id_t","documentation":{"kind":"markdown","value":"From `\"esp_event_legacy.h\"`  \nESP32 station wps fails in enrollee mode"},"filterText":"SYSTEM_EVENT_STA_WPS_ER_FAILED","insertText":"SYSTEM_EVENT_STA_WPS_ER_FAILED","insertTextFormat":2,"kind":20,"label":"•SYSTEM_EVENT_STA_WPS_ER_FAILED","score":1.1118042469024658,"sortText":"4071b066SYSTEM_EVENT_STA_WPS_ER_FAILED","textEdit":{"newText":"SYSTEM_EVENT_STA_WPS_ER_FAILED","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_event_legacy.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_event_legacy.h\"`"},"filterText":"system_event_id_t","insertText":"system_event_id_t","insertTextFormat":2,"kind":8,"label":"•system_event_id_t","score":1.1118042469024658,"sortText":"4071b066system_event_id_t","textEdit":{"newText":"system_event_id_t","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_event_legacy.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_event_legacy.h\"`"},"filterText":"system_event_t","insertText":"system_event_t","insertTextFormat":2,"kind":8,"label":"•system_event_t","score":1.1118042469024658,"sortText":"4071b066system_event_t","textEdit":{"newText":"system_event_t","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/sockets.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/sockets.h\"`  \nmembers are in network byte order"},"filterText":"sockaddr_in","insertText":"sockaddr_in","insertTextFormat":2,"kind":22,"label":"•sockaddr_in","score":1.0630577802658081,"sortText":"4077edb9sockaddr_in","textEdit":{"newText":"sockaddr_in","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Json/PrettyJsonSerializer.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Json/PrettyJsonSerializer.hpp\"`"},"filterText":"serializeJsonPretty","insertText":"ArduinoJson6173_91::serializeJsonPretty($0)","insertTextFormat":2,"kind":3,"label":"•ArduinoJson6173_91::serializeJsonPretty(…)","score":1.0575764179229736,"sortText":"4078a156serializeJsonPretty","textEdit":{"newText":"ArduinoJson6173_91::serializeJsonPretty($0)","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/MsgPack/MsgPackSerializer.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/MsgPack/MsgPackSerializer.hpp\"`"},"filterText":"serializeMsgPack","insertText":"ArduinoJson6173_91::serializeMsgPack(${1:const TSource &source}, ${2:void *output}, ${3:size_t size})","insertTextFormat":2,"kind":3,"label":"•ArduinoJson6173_91::serializeMsgPack(const TSource &source, void *output, size_t size)","score":1.0575764179229736,"sortText":"4078a156serializeMsgPack","textEdit":{"newText":"ArduinoJson6173_91::serializeMsgPack(${1:const TSource &source}, ${2:void *output}, ${3:size_t size})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <bits/c++config.h>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `<bits/c++config.h>`"},"filterText":"size_t","insertText":"std::size_t","insertTextFormat":2,"kind":8,"label":"•std::size_t","score":1.0575764179229736,"sortText":"4078a156size_t","textEdit":{"newText":"std::size_t","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_smartconfig.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"smartconfig_status_t","documentation":{"kind":"markdown","value":"From `\"esp_smartconfig.h\"`  \nGetting SSID and password of target AP"},"filterText":"SC_STATUS_GETTING_SSID_PSWD","insertText":"SC_STATUS_GETTING_SSID_PSWD","insertTextFormat":2,"kind":20,"label":"•SC_STATUS_GETTING_SSID_PSWD","score":1.0538334846496582,"sortText":"40791bfcSC_STATUS_GETTING_SSID_PSWD","textEdit":{"newText":"SC_STATUS_GETTING_SSID_PSWD","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_smartconfig.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"smartconfig_status_t","documentation":{"kind":"markdown","value":"From `\"esp_smartconfig.h\"`  \nConnected to AP successfully"},"filterText":"SC_STATUS_LINK_OVER","insertText":"SC_STATUS_LINK_OVER","insertTextFormat":2,"kind":20,"label":"•SC_STATUS_LINK_OVER","score":1.0538334846496582,"sortText":"40791bfcSC_STATUS_LINK_OVER","textEdit":{"newText":"SC_STATUS_LINK_OVER","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_smartconfig.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_smartconfig.h\"`  \n@brief The callback of SmartConfig, executed when smart-config status changed.  \n@param status Status of SmartConfig:  \n\\- SC_STATUS_GETTING_SSID_PSWD : pdata is a pointer of smartconfig_type_t, means config type.  \n\\- SC_STATUS_LINK : pdata is a pointer to wifi_config_t.  \n\\- SC_STATUS_LINK_OVER : pdata is a pointer of phone's IP address(4 bytes) if pdata unequal NULL.  \n\\- otherwise : parameter void \\*pdata is NULL.  \n@param pdata According to the different status have different values."},"filterText":"sc_callback_t","insertText":"sc_callback_t","insertTextFormat":2,"kind":8,"label":"•sc_callback_t","score":1.0538334846496582,"sortText":"40791bfcsc_callback_t","textEdit":{"newText":"sc_callback_t","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"rom/uart.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"STATUS","documentation":{"kind":"markdown","value":"From `\"rom/uart.h\"`  \n@brief Send an packet to download tool, with SLIP escaping.  \nPlease do not call this function in SDK.  \n@param uint8_t \\*pData : the pointer to input string.  \n@param uint16_t DataLen : the string length.  \n@return OK for successful.  \nFAIL for failed."},"filterText":"SendMsg","insertText":"SendMsg(${1:uint8_t *pData}, ${2:uint16_t DataLen})","insertTextFormat":2,"kind":3,"label":"•SendMsg(uint8_t *pData, uint16_t DataLen)","score":1.0063711404800415,"sortText":"407f2f3bSendMsg","textEdit":{"newText":"SendMsg(${1:uint8_t *pData}, ${2:uint16_t DataLen})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/sockets.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/sockets.h\"`"},"filterText":"sockaddr","insertText":"sockaddr","insertTextFormat":2,"kind":22,"label":"•sockaddr","score":0.98771214485168457,"sortText":"4083254csockaddr","textEdit":{"newText":"sockaddr","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Polyfills/safe_strcmp.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Polyfills/safe_strcmp.hpp\"`"},"filterText":"safe_strcmp","insertText":"ArduinoJson6173_91::safe_strcmp(${1:const char *a}, ${2:const char *b})","insertTextFormat":2,"kind":3,"label":"•ArduinoJson6173_91::safe_strcmp(const char *a, const char *b)","score":0.98550808429718018,"sortText":"4083b5besafe_strcmp","textEdit":{"newText":"ArduinoJson6173_91::safe_strcmp(${1:const char *a}, ${2:const char *b})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Polyfills/safe_strcmp.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Polyfills/safe_strcmp.hpp\"`"},"filterText":"safe_strncmp","insertText":"ArduinoJson6173_91::safe_strncmp(${1:const char *a}, ${2:const char *b}, ${3:size_t n})","insertTextFormat":2,"kind":3,"label":"•ArduinoJson6173_91::safe_strncmp(const char *a, const char *b, size_t n)","score":0.98550808429718018,"sortText":"4083b5besafe_strncmp","textEdit":{"newText":"ArduinoJson6173_91::safe_strncmp(${1:const char *a}, ${2:const char *b}, ${3:size_t n})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <exception>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"terminate_handler","documentation":{"kind":"markdown","value":"From `<exception>`  \nTakes a new handler function as an argument, returns the old function."},"filterText":"set_terminate","insertText":"std::set_terminate(${1:terminate_handler})","insertTextFormat":2,"kind":3,"label":"•std::set_terminate(terminate_handler)","score":0.98550808429718018,"sortText":"4083b5beset_terminate","textEdit":{"newText":"std::set_terminate(${1:terminate_handler})","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}}}}]}}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":79},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":19}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 92

{"id":85,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":17,"character":19},"end":{"line":17,"character":19}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":83},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":20}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 92

{"id":86,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":17,"character":20},"end":{"line":17,"character":20}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":84},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":21}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 92

{"id":87,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":21}},"context":{"diagnostics":[]}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":88,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":21}},"text":"v"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":86},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":85},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":22}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 92

{"id":89,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":22}},"context":{"diagnostics":[]}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":90,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":22}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":88},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":87},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":23}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 92

{"id":91,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":17,"character":23},"end":{"line":17,"character":23}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":89},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":24}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 92

{"id":92,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":24},"end":{"line":17,"character":24}},"context":{"diagnostics":[]}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":93,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":17,"character":24},"end":{"line":17,"character":24}},"text":","}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":91},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":90},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":25}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 92

{"id":94,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":25}},"context":{"diagnostics":[]}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":95,"jsonrpc":"2.0","result":[]}Content-Length: 1803

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_init","message":"No matching constructor for initialization of 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'State *' to 'const BcbAws' for 1st argument\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit move constructor) not viable: no known conversion from 'State *' to 'BcbAws' for 1st argument\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:1:\nnote: candidate constructor not viable: requires 3 arguments, but 1 was provided","range":{"end":{"character":10,"line":17},"start":{"character":7,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":4}}Content-Length: 1208

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":12}}
>>>
Content-Length: 440

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":26}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":96,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":25}},"text":"w"}]},"jsonrpc":"2.0"}Content-Length: 229

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":26},"context":{"triggerKind":1}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 58059

{"id":97,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"detail":"AsyncWebSocket","filterText":"ws","insertText":"ws","insertTextFormat":2,"kind":6,"label":" ws","score":50.723854064941406,"sortText":"3db51ac6ws","textEdit":{"newText":"ws","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"filterText":"wchar_t","insertText":"wchar_t","insertTextFormat":2,"kind":14,"label":" wchar_t","score":8,"sortText":"3f000000wchar_t","textEdit":{"newText":"wchar_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiClient.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiClient.h\"`"},"filterText":"WiFiClientSocketHandle","insertText":"WiFiClientSocketHandle","insertTextFormat":2,"kind":7,"label":"•WiFiClientSocketHandle","score":7.2600007057189941,"sortText":"3f17ae13WiFiClientSocketHandle","textEdit":{"newText":"WiFiClientSocketHandle","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiClient.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiClient.h\"`"},"filterText":"WiFiClientRxBuffer","insertText":"WiFiClientRxBuffer","insertTextFormat":2,"kind":7,"label":"•WiFiClientRxBuffer","score":4.8400001525878906,"sortText":"3f651eb8WiFiClientRxBuffer","textEdit":{"newText":"WiFiClientRxBuffer","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"detail":"WiFiClass","documentation":{"kind":"markdown","value":"From `\"WiFi.h\"`"},"filterText":"WiFi","insertText":"WiFi","insertTextFormat":2,"kind":6,"label":" WiFi","score":3.5120944976806641,"sortText":"3f9f39d8WiFi","textEdit":{"newText":"WiFi","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiServer.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiServer.h\"`"},"filterText":"WiFiServer","insertText":"WiFiServer","insertTextFormat":2,"kind":7,"label":"•WiFiServer","score":2.337836742401123,"sortText":"3fea60e2WiFiServer","textEdit":{"newText":"WiFiServer","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"documentation":{"kind":"markdown","value":"From `\"WiFiUdp.h\"`"},"filterText":"WiFiUDP","insertText":"WiFiUDP","insertTextFormat":2,"kind":7,"label":" WiFiUDP","score":2.1509909629821777,"sortText":"3ff6562aWiFiUDP","textEdit":{"newText":"WiFiUDP","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WiFiGenericClass","insertText":"WiFiGenericClass","insertTextFormat":2,"kind":7,"label":"•WiFiGenericClass","score":2.0888233184814453,"sortText":"3ffa50b8WiFiGenericClass","textEdit":{"newText":"WiFiGenericClass","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiSTA.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiSTA.h\"`"},"filterText":"WiFiSTAClass","insertText":"WiFiSTAClass","insertTextFormat":2,"kind":7,"label":"•WiFiSTAClass","score":1.9517171382904053,"sortText":"40062e22WiFiSTAClass","textEdit":{"newText":"WiFiSTAClass","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiClient.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiClient.h\"`"},"filterText":"WiFiClient","insertText":"WiFiClient","insertTextFormat":2,"kind":7,"label":"•WiFiClient","score":1.9189802408218384,"sortText":"400a5edbWiFiClient","textEdit":{"newText":"WiFiClient","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Get state of Wi-Fi Station during provisioning  \n@param[out] state Pointer to wifi_prov_sta_state_t variable to be filled  \n@return  \n\\- ESP_OK : Successfully retrieved Wi-Fi state  \n\\- ESP_FAIL : Provisioning app not running"},"filterText":"wifi_prov_mgr_get_wifi_state","insertText":"wifi_prov_mgr_get_wifi_state(${1:wifi_prov_sta_state_t *state})","insertTextFormat":2,"kind":3,"label":"•wifi_prov_mgr_get_wifi_state(wifi_prov_sta_state_t *state)","score":1.9036375284194946,"sortText":"400c559bwifi_prov_mgr_get_wifi_state","textEdit":{"newText":"wifi_prov_mgr_get_wifi_state(${1:wifi_prov_sta_state_t *state})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiScan.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiScan.h\"`"},"filterText":"WiFiScanClass","insertText":"WiFiScanClass","insertTextFormat":2,"kind":7,"label":"•WiFiScanClass","score":1.8882294893264771,"sortText":"400e4e7fWiFiScanClass","textEdit":{"newText":"WiFiScanClass","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"documentation":{"kind":"markdown","value":"From `\"WiFi.h\"`"},"filterText":"WiFiClass","insertText":"WiFiClass","insertTextFormat":2,"kind":7,"label":" WiFiClass","score":1.8537870645523071,"sortText":"4012b71bWiFiClass","textEdit":{"newText":"WiFiClass","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"word","insertText":"word","insertTextFormat":2,"kind":8,"label":" word","score":1.8537870645523071,"sortText":"4012b71bword","textEdit":{"newText":"word","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"detail":"void","filterText":"writeFile","insertText":"writeFile(${1:fs::FS &fs}, ${2:const char *path}, ${3:const char *message})","insertTextFormat":2,"kind":3,"label":" writeFile(fs::FS &fs, const char *path, const char *message)","score":1.8537870645523071,"sortText":"4012b71bwriteFile","textEdit":{"newText":"writeFile(${1:fs::FS &fs}, ${2:const char *path}, ${3:const char *message})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"WL_CONNECTED","insertText":"WL_CONNECTED","insertTextFormat":2,"kind":20,"label":"•WL_CONNECTED","score":1.6893165111541748,"sortText":"4027c47aWL_CONNECTED","textEdit":{"newText":"WL_CONNECTED","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/wifi_config.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/wifi_config.h\"`  \n@brief WiFi STA status for conveying back to the provisioning master"},"filterText":"wifi_prov_sta_state_t","insertText":"wifi_prov_sta_state_t","insertTextFormat":2,"kind":8,"label":"•wifi_prov_sta_state_t","score":1.6677062511444092,"sortText":"402a889awifi_prov_sta_state_t","textEdit":{"newText":"wifi_prov_sta_state_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiAP.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiAP.h\"`"},"filterText":"WiFiAPClass","insertText":"WiFiAPClass","insertTextFormat":2,"kind":7,"label":"•WiFiAPClass","score":1.6185917854309082,"sortText":"4030d1fcWiFiAPClass","textEdit":{"newText":"WiFiAPClass","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"WL_CONNECT_FAILED","insertText":"WL_CONNECT_FAILED","insertTextFormat":2,"kind":20,"label":"•WL_CONNECT_FAILED","score":1.5800995826721191,"sortText":"4035bf4cWL_CONNECT_FAILED","textEdit":{"newText":"WL_CONNECT_FAILED","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_0MS"},"filterText":"WDTO_0MS","insertText":"WDTO_0MS","insertTextFormat":2,"kind":20,"label":"•WDTO_0MS","score":1.5037370920181274,"sortText":"403f858bWDTO_0MS","textEdit":{"newText":"WDTO_0MS","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_120MS"},"filterText":"WDTO_120MS","insertText":"WDTO_120MS","insertTextFormat":2,"kind":20,"label":"•WDTO_120MS","score":1.5037370920181274,"sortText":"403f858bWDTO_120MS","textEdit":{"newText":"WDTO_120MS","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_15MS"},"filterText":"WDTO_15MS","insertText":"WDTO_15MS","insertTextFormat":2,"kind":20,"label":"•WDTO_15MS","score":1.5037370920181274,"sortText":"403f858bWDTO_15MS","textEdit":{"newText":"WDTO_15MS","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_1S"},"filterText":"WDTO_1S","insertText":"WDTO_1S","insertTextFormat":2,"kind":20,"label":"•WDTO_1S","score":1.5037370920181274,"sortText":"403f858bWDTO_1S","textEdit":{"newText":"WDTO_1S","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_250MS"},"filterText":"WDTO_250MS","insertText":"WDTO_250MS","insertTextFormat":2,"kind":20,"label":"•WDTO_250MS","score":1.5037370920181274,"sortText":"403f858bWDTO_250MS","textEdit":{"newText":"WDTO_250MS","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_2S"},"filterText":"WDTO_2S","insertText":"WDTO_2S","insertTextFormat":2,"kind":20,"label":"•WDTO_2S","score":1.5037370920181274,"sortText":"403f858bWDTO_2S","textEdit":{"newText":"WDTO_2S","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_30MS"},"filterText":"WDTO_30MS","insertText":"WDTO_30MS","insertTextFormat":2,"kind":20,"label":"•WDTO_30MS","score":1.5037370920181274,"sortText":"403f858bWDTO_30MS","textEdit":{"newText":"WDTO_30MS","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_4S"},"filterText":"WDTO_4S","insertText":"WDTO_4S","insertTextFormat":2,"kind":20,"label":"•WDTO_4S","score":1.5037370920181274,"sortText":"403f858bWDTO_4S","textEdit":{"newText":"WDTO_4S","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_500MS"},"filterText":"WDTO_500MS","insertText":"WDTO_500MS","insertTextFormat":2,"kind":20,"label":"•WDTO_500MS","score":1.5037370920181274,"sortText":"403f858bWDTO_500MS","textEdit":{"newText":"WDTO_500MS","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_60MS"},"filterText":"WDTO_60MS","insertText":"WDTO_60MS","insertTextFormat":2,"kind":20,"label":"•WDTO_60MS","score":1.5037370920181274,"sortText":"403f858bWDTO_60MS","textEdit":{"newText":"WDTO_60MS","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"WDTO_t","documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nWDTO_8S"},"filterText":"WDTO_8S","insertText":"WDTO_8S","insertTextFormat":2,"kind":20,"label":"•WDTO_8S","score":1.5037370920181274,"sortText":"403f858bWDTO_8S","textEdit":{"newText":"WDTO_8S","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nAVR macros for WDT managment"},"filterText":"WDTO_t","insertText":"WDTO_t","insertTextFormat":2,"kind":8,"label":"•WDTO_t","score":1.5037370920181274,"sortText":"403f858bWDTO_t","textEdit":{"newText":"WDTO_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WIFI_DNS_DONE_BIT","insertText":"WIFI_DNS_DONE_BIT","insertTextFormat":2,"kind":6,"label":"•WIFI_DNS_DONE_BIT","score":1.5037370920181274,"sortText":"403f858bWIFI_DNS_DONE_BIT","textEdit":{"newText":"WIFI_DNS_DONE_BIT","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WIFI_DNS_IDLE_BIT","insertText":"WIFI_DNS_IDLE_BIT","insertTextFormat":2,"kind":6,"label":"•WIFI_DNS_IDLE_BIT","score":1.5037370920181274,"sortText":"403f858bWIFI_DNS_IDLE_BIT","textEdit":{"newText":"WIFI_DNS_IDLE_BIT","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n11dBm"},"filterText":"WIFI_POWER_11dBm","insertText":"WIFI_POWER_11dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_11dBm","score":1.5037370920181274,"sortText":"403f858bWIFI_POWER_11dBm","textEdit":{"newText":"WIFI_POWER_11dBm","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n13dBm"},"filterText":"WIFI_POWER_13dBm","insertText":"WIFI_POWER_13dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_13dBm","score":1.5037370920181274,"sortText":"403f858bWIFI_POWER_13dBm","textEdit":{"newText":"WIFI_POWER_13dBm","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n15dBm"},"filterText":"WIFI_POWER_15dBm","insertText":"WIFI_POWER_15dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_15dBm","score":1.5037370920181274,"sortText":"403f858bWIFI_POWER_15dBm","textEdit":{"newText":"WIFI_POWER_15dBm","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n17dBm"},"filterText":"WIFI_POWER_17dBm","insertText":"WIFI_POWER_17dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_17dBm","score":1.5037370920181274,"sortText":"403f858bWIFI_POWER_17dBm","textEdit":{"newText":"WIFI_POWER_17dBm","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n18.5dBm"},"filterText":"WIFI_POWER_18_5dBm","insertText":"WIFI_POWER_18_5dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_18_5dBm","score":1.5037370920181274,"sortText":"403f858bWIFI_POWER_18_5dBm","textEdit":{"newText":"WIFI_POWER_18_5dBm","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n19.5dBm"},"filterText":"WIFI_POWER_19_5dBm","insertText":"WIFI_POWER_19_5dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_19_5dBm","score":1.5037370920181274,"sortText":"403f858bWIFI_POWER_19_5dBm","textEdit":{"newText":"WIFI_POWER_19_5dBm","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n19dBm"},"filterText":"WIFI_POWER_19dBm","insertText":"WIFI_POWER_19dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_19dBm","score":1.5037370920181274,"sortText":"403f858bWIFI_POWER_19dBm","textEdit":{"newText":"WIFI_POWER_19dBm","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n2dBm"},"filterText":"WIFI_POWER_2dBm","insertText":"WIFI_POWER_2dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_2dBm","score":1.5037370920181274,"sortText":"403f858bWIFI_POWER_2dBm","textEdit":{"newText":"WIFI_POWER_2dBm","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n5dBm"},"filterText":"WIFI_POWER_5dBm","insertText":"WIFI_POWER_5dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_5dBm","score":1.5037370920181274,"sortText":"403f858bWIFI_POWER_5dBm","textEdit":{"newText":"WIFI_POWER_5dBm","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n7dBm"},"filterText":"WIFI_POWER_7dBm","insertText":"WIFI_POWER_7dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_7dBm","score":1.5037370920181274,"sortText":"403f858bWIFI_POWER_7dBm","textEdit":{"newText":"WIFI_POWER_7dBm","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n8.5dBm"},"filterText":"WIFI_POWER_8_5dBm","insertText":"WIFI_POWER_8_5dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_8_5dBm","score":1.5037370920181274,"sortText":"403f858bWIFI_POWER_8_5dBm","textEdit":{"newText":"WIFI_POWER_8_5dBm","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n-1dBm"},"filterText":"WIFI_POWER_MINUS_1dBm","insertText":"WIFI_POWER_MINUS_1dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_MINUS_1dBm","score":1.5037370920181274,"sortText":"403f858bWIFI_POWER_MINUS_1dBm","textEdit":{"newText":"WIFI_POWER_MINUS_1dBm","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WIFI_SCANNING_BIT","insertText":"WIFI_SCANNING_BIT","insertTextFormat":2,"kind":6,"label":"•WIFI_SCANNING_BIT","score":1.5037370920181274,"sortText":"403f858bWIFI_SCANNING_BIT","textEdit":{"newText":"WIFI_SCANNING_BIT","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WIFI_SCAN_DONE_BIT","insertText":"WIFI_SCAN_DONE_BIT","insertTextFormat":2,"kind":6,"label":"•WIFI_SCAN_DONE_BIT","score":1.5037370920181274,"sortText":"403f858bWIFI_SCAN_DONE_BIT","textEdit":{"newText":"WIFI_SCAN_DONE_BIT","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"WL_DISCONNECTED","insertText":"WL_DISCONNECTED","insertTextFormat":2,"kind":20,"label":"•WL_DISCONNECTED","score":1.5037370920181274,"sortText":"403f858bWL_DISCONNECTED","textEdit":{"newText":"WL_DISCONNECTED","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"WL_NO_SSID_AVAIL","insertText":"WL_NO_SSID_AVAIL","insertTextFormat":2,"kind":20,"label":"•WL_NO_SSID_AVAIL","score":1.5037370920181274,"sortText":"403f858bWL_NO_SSID_AVAIL","textEdit":{"newText":"WL_NO_SSID_AVAIL","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"WL_SCAN_COMPLETED","insertText":"WL_SCAN_COMPLETED","insertTextFormat":2,"kind":20,"label":"•WL_SCAN_COMPLETED","score":1.5037370920181274,"sortText":"403f858bWL_SCAN_COMPLETED","textEdit":{"newText":"WL_SCAN_COMPLETED","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"ESPAsyncWebServer.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ESPAsyncWebServer.h\"`"},"filterText":"WebRequestMethodComposite","insertText":"WebRequestMethodComposite","insertTextFormat":2,"kind":8,"label":"•WebRequestMethodComposite","score":1.5037370920181274,"sortText":"403f858bWebRequestMethodComposite","textEdit":{"newText":"WebRequestMethodComposite","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WiFiEventCb","insertText":"WiFiEventCb","insertTextFormat":2,"kind":8,"label":"•WiFiEventCb","score":1.5037370920181274,"sortText":"403f858bWiFiEventCb","textEdit":{"newText":"WiFiEventCb","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WiFiEventFuncCb","insertText":"WiFiEventFuncCb","insertTextFormat":2,"kind":8,"label":"•WiFiEventFuncCb","score":1.5037370920181274,"sortText":"403f858bWiFiEventFuncCb","textEdit":{"newText":"WiFiEventFuncCb","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WiFiEventSysCb","insertText":"WiFiEventSysCb","insertTextFormat":2,"kind":8,"label":"•WiFiEventSysCb","score":1.5037370920181274,"sortText":"403f858bWiFiEventSysCb","textEdit":{"newText":"WiFiEventSysCb","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WiFiProvEventCb","insertText":"WiFiProvEventCb","insertTextFormat":2,"kind":8,"label":"•WiFiProvEventCb","score":1.5037370920181274,"sortText":"403f858bWiFiProvEventCb","textEdit":{"newText":"WiFiProvEventCb","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"inttypes.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"intmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"filterText":"wcstoimax","insertText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"kind":3,"label":"•wcstoimax(const wchar_t *, wchar_t **, int)","score":1.5037370920181274,"sortText":"403f858bwcstoimax","textEdit":{"newText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"stdlib.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"filterText":"wcstombs","insertText":"wcstombs(${1:char *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":"•wcstombs(char *, const wchar_t *, size_t)","score":1.5037370920181274,"sortText":"403f858bwcstombs","textEdit":{"newText":"wcstombs(${1:char *}, ${2:const wchar_t *}, ${3:size_t})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"inttypes.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"uintmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"filterText":"wcstoumax","insertText":"wcstoumax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"kind":3,"label":"•wcstoumax(const wchar_t *, wchar_t **, int)","score":1.5037370920181274,"sortText":"403f858bwcstoumax","textEdit":{"newText":"wcstoumax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"stdlib.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdlib.h\"`"},"filterText":"wctomb","insertText":"wctomb(${1:char *}, ${2:wchar_t})","insertTextFormat":2,"kind":3,"label":"•wctomb(char *, wchar_t)","score":1.5037370920181274,"sortText":"403f858bwctomb","textEdit":{"newText":"wctomb(${1:char *}, ${2:wchar_t})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"wifi_event_id_t","insertText":"wifi_event_id_t","insertTextFormat":2,"kind":8,"label":"•wifi_event_id_t","score":1.5037370920181274,"sortText":"403f858bwifi_event_id_t","textEdit":{"newText":"wifi_event_id_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"wifi_power_t","insertText":"wifi_power_t","insertTextFormat":2,"kind":8,"label":"•wifi_power_t","score":1.5037370920181274,"sortText":"403f858bwifi_power_t","textEdit":{"newText":"wifi_power_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"wifi_prov_event_t","insertText":"wifi_prov_event_t","insertTextFormat":2,"kind":8,"label":"•wifi_prov_event_t","score":1.5037370920181274,"sortText":"403f858bwifi_prov_event_t","textEdit":{"newText":"wifi_prov_event_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"wl_status_t","insertText":"wl_status_t","insertTextFormat":2,"kind":8,"label":"•wl_status_t","score":1.5037370920181274,"sortText":"403f858bwl_status_t","textEdit":{"newText":"wl_status_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiMulti.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiMulti.h\"`"},"filterText":"WiFiMulti","insertText":"WiFiMulti","insertTextFormat":2,"kind":7,"label":"•WiFiMulti","score":1.3747211694717407,"sortText":"40500923WiFiMulti","textEdit":{"newText":"WiFiMulti","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiMulti.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiMulti.h\"`"},"filterText":"WifiAPlist_t","insertText":"WifiAPlist_t","insertTextFormat":2,"kind":8,"label":"•WifiAPlist_t","score":1.3747211694717407,"sortText":"40500923WifiAPlist_t","textEdit":{"newText":"WifiAPlist_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcsftime","insertText":"wcsftime(${1:wchar_t *}, ${2:size_t}, ${3:const wchar_t *}, ${4:const struct tm *})","insertTextFormat":2,"kind":3,"label":"•wcsftime(wchar_t *, size_t, const wchar_t *, const struct tm *)","score":1.3747211694717407,"sortText":"40500923wcsftime","textEdit":{"newText":"wcsftime(${1:wchar_t *}, ${2:size_t}, ${3:const wchar_t *}, ${4:const struct tm *})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcslcpy","insertText":"wcslcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":"•wcslcpy(wchar_t *, const wchar_t *, size_t)","score":1.3747211694717407,"sortText":"40500923wcslcpy","textEdit":{"newText":"wcslcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcsnrtombs","insertText":"wcsnrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:size_t}, ${5:mbstate_t *})","insertTextFormat":2,"kind":3,"label":"•wcsnrtombs(char *, const wchar_t **, size_t, size_t, mbstate_t *)","score":1.3747211694717407,"sortText":"40500923wcsnrtombs","textEdit":{"newText":"wcsnrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:size_t}, ${5:mbstate_t *})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"double","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcstod","insertText":"wcstod(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"kind":3,"label":"•wcstod(const wchar_t *, wchar_t **)","score":1.3747211694717407,"sortText":"40500923wcstod","textEdit":{"newText":"wcstod(${1:const wchar_t *}, ${2:wchar_t **})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"float","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcstof","insertText":"wcstof(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"kind":3,"label":"•wcstof(const wchar_t *, wchar_t **)","score":1.3747211694717407,"sortText":"40500923wcstof","textEdit":{"newText":"wcstof(${1:const wchar_t *}, ${2:wchar_t **})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"long","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcstol","insertText":"wcstol(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"kind":3,"label":"•wcstol(const wchar_t *, wchar_t **, int)","score":1.3747211694717407,"sortText":"40500923wcstol","textEdit":{"newText":"wcstol(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcwidth","insertText":"wcwidth(${1:const wchar_t})","insertTextFormat":2,"kind":3,"label":"•wcwidth(const wchar_t)","score":1.3747211694717407,"sortText":"40500923wcwidth","textEdit":{"newText":"wcwidth(${1:const wchar_t})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wmemchr","insertText":"wmemchr(${1:const wchar_t *}, ${2:wchar_t}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":"•wmemchr(const wchar_t *, wchar_t, size_t)","score":1.3747211694717407,"sortText":"40500923wmemchr","textEdit":{"newText":"wmemchr(${1:const wchar_t *}, ${2:wchar_t}, ${3:size_t})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nnull mode"},"filterText":"WIFI_MODE_NULL","insertText":"WIFI_MODE_NULL","insertTextFormat":2,"kind":20,"label":"•WIFI_MODE_NULL","score":1.3531471490859985,"sortText":"4052cc13WIFI_MODE_NULL","textEdit":{"newText":"WIFI_MODE_NULL","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Configuration data for ESP32 AP or STA.  \nThe usage of this union (for ap or sta configuration) is determined by the accompanying interface argument passed to esp_wifi_set_config() or esp_wifi_get_config()"},"filterText":"wifi_config_t","insertText":"wifi_config_t","insertTextFormat":2,"kind":8,"label":"•wifi_config_t","score":1.2727916240692139,"sortText":"405d152awifi_config_t","textEdit":{"newText":"wifi_config_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nEmitted when device fails to connect to the AP of which the credentials were received earlier on event `WIFI_PROV_CRED_RECV`.  \nThe event data in this case is a pointer to the disconnection reason code with type `wifi_prov_sta_fail_reason_t`"},"filterText":"WIFI_PROV_CRED_FAIL","insertText":"WIFI_PROV_CRED_FAIL","insertTextFormat":2,"kind":20,"label":"•WIFI_PROV_CRED_FAIL","score":1.2690916061401367,"sortText":"405d8e68WIFI_PROV_CRED_FAIL","textEdit":{"newText":"WIFI_PROV_CRED_FAIL","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nEmitted when Wi-Fi AP credentials are received via `protocomm` endpoint `wifi_config`. The event data in this case is a pointer to the corresponding `wifi_sta_config_t` structure"},"filterText":"WIFI_PROV_CRED_RECV","insertText":"WIFI_PROV_CRED_RECV","insertTextFormat":2,"kind":20,"label":"•WIFI_PROV_CRED_RECV","score":1.2690916061401367,"sortText":"405d8e68WIFI_PROV_CRED_RECV","textEdit":{"newText":"WIFI_PROV_CRED_RECV","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nEmitted when device successfully connects to the AP of which the credentials were received earlier on event `WIFI_PROV_CRED_RECV`"},"filterText":"WIFI_PROV_CRED_SUCCESS","insertText":"WIFI_PROV_CRED_SUCCESS","insertTextFormat":2,"kind":20,"label":"•WIFI_PROV_CRED_SUCCESS","score":1.2690916061401367,"sortText":"405d8e68WIFI_PROV_CRED_SUCCESS","textEdit":{"newText":"WIFI_PROV_CRED_SUCCESS","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nSignals that manager has been de-initialized"},"filterText":"WIFI_PROV_DEINIT","insertText":"WIFI_PROV_DEINIT","insertTextFormat":2,"kind":20,"label":"•WIFI_PROV_DEINIT","score":1.2690916061401367,"sortText":"405d8e68WIFI_PROV_DEINIT","textEdit":{"newText":"WIFI_PROV_DEINIT","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nSignals that provisioning service has stopped"},"filterText":"WIFI_PROV_END","insertText":"WIFI_PROV_END","insertTextFormat":2,"kind":20,"label":"•WIFI_PROV_END","score":1.2690916061401367,"sortText":"405d8e68WIFI_PROV_END","textEdit":{"newText":"WIFI_PROV_END","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nEmitted when the manager is initialized"},"filterText":"WIFI_PROV_INIT","insertText":"WIFI_PROV_INIT","insertTextFormat":2,"kind":20,"label":"•WIFI_PROV_INIT","score":1.2690916061401367,"sortText":"405d8e68WIFI_PROV_INIT","textEdit":{"newText":"WIFI_PROV_INIT","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_prov_security","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nNo security (plain-text communication)"},"filterText":"WIFI_PROV_SECURITY_0","insertText":"WIFI_PROV_SECURITY_0","insertTextFormat":2,"kind":20,"label":"•WIFI_PROV_SECURITY_0","score":1.2690916061401367,"sortText":"405d8e68WIFI_PROV_SECURITY_0","textEdit":{"newText":"WIFI_PROV_SECURITY_0","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_prov_security","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nThis secure communication mode consists of X25519 key exchange + proof of possession (pop) based authentication + AES-CTR encryption"},"filterText":"WIFI_PROV_SECURITY_1","insertText":"WIFI_PROV_SECURITY_1","insertTextFormat":2,"kind":20,"label":"•WIFI_PROV_SECURITY_1","score":1.2690916061401367,"sortText":"405d8e68WIFI_PROV_SECURITY_1","textEdit":{"newText":"WIFI_PROV_SECURITY_1","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nIndicates that provisioning has started"},"filterText":"WIFI_PROV_START","insertText":"WIFI_PROV_START","insertTextFormat":2,"kind":20,"label":"•WIFI_PROV_START","score":1.2690916061401367,"sortText":"405d8e68WIFI_PROV_START","textEdit":{"newText":"WIFI_PROV_START","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_CONNECTED","insertText":"WS_CONNECTED","insertTextFormat":2,"kind":20,"label":"•WS_CONNECTED","score":1.2690916061401367,"sortText":"405d8e68WS_CONNECTED","textEdit":{"newText":"WS_CONNECTED","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_DISCONNECT","insertText":"WS_DISCONNECT","insertTextFormat":2,"kind":20,"label":"•WS_DISCONNECT","score":1.2690916061401367,"sortText":"405d8e68WS_DISCONNECT","textEdit":{"newText":"WS_DISCONNECT","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_DATA","insertText":"WS_EVT_DATA","insertTextFormat":2,"kind":20,"label":"•WS_EVT_DATA","score":1.2690916061401367,"sortText":"405d8e68WS_EVT_DATA","textEdit":{"newText":"WS_EVT_DATA","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_DISCONNECT","insertText":"WS_EVT_DISCONNECT","insertTextFormat":2,"kind":20,"label":"•WS_EVT_DISCONNECT","score":1.2690916061401367,"sortText":"405d8e68WS_EVT_DISCONNECT","textEdit":{"newText":"WS_EVT_DISCONNECT","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MSG_ERROR","insertText":"WS_MSG_ERROR","insertTextFormat":2,"kind":20,"label":"•WS_MSG_ERROR","score":1.2690916061401367,"sortText":"405d8e68WS_MSG_ERROR","textEdit":{"newText":"WS_MSG_ERROR","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MSG_SENDING","insertText":"WS_MSG_SENDING","insertTextFormat":2,"kind":20,"label":"•WS_MSG_SENDING","score":1.2690916061401367,"sortText":"405d8e68WS_MSG_SENDING","textEdit":{"newText":"WS_MSG_SENDING","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MSG_SENT","insertText":"WS_MSG_SENT","insertTextFormat":2,"kind":20,"label":"•WS_MSG_SENT","score":1.2690916061401367,"sortText":"405d8e68WS_MSG_SENT","textEdit":{"newText":"WS_MSG_SENT","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_PING","insertText":"WS_PING","insertTextFormat":2,"kind":20,"label":"•WS_PING","score":1.2690916061401367,"sortText":"405d8e68WS_PING","textEdit":{"newText":"WS_PING","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_PONG","insertText":"WS_PONG","insertTextFormat":2,"kind":20,"label":"•WS_PONG","score":1.2690916061401367,"sortText":"405d8e68WS_PONG","textEdit":{"newText":"WS_PONG","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Events generated by manager  \nThese events are generated in order of declaration and, for the stretch of time between initialization and de-initialization of the manager, each event is signaled only once"},"filterText":"wifi_prov_cb_event_t","insertText":"wifi_prov_cb_event_t","insertTextFormat":2,"kind":8,"label":"•wifi_prov_cb_event_t","score":1.2690916061401367,"sortText":"405d8e68wifi_prov_cb_event_t","textEdit":{"newText":"wifi_prov_cb_event_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`"},"filterText":"wifi_prov_cb_func_t","insertText":"wifi_prov_cb_func_t","insertTextFormat":2,"kind":8,"label":"•wifi_prov_cb_func_t","score":1.2690916061401367,"sortText":"405d8e68wifi_prov_cb_func_t","textEdit":{"newText":"wifi_prov_cb_func_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Event handler that is used by the manager while provisioning service is active"},"filterText":"wifi_prov_event_handler_t","insertText":"wifi_prov_event_handler_t","insertTextFormat":2,"kind":8,"label":"•wifi_prov_event_handler_t","score":1.2690916061401367,"sortText":"405d8e68wifi_prov_event_handler_t","textEdit":{"newText":"wifi_prov_event_handler_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Structure for specifying the manager configuration"},"filterText":"wifi_prov_mgr_config_t","insertText":"wifi_prov_mgr_config_t","insertTextFormat":2,"kind":8,"label":"•wifi_prov_mgr_config_t","score":1.2690916061401367,"sortText":"405d8e68wifi_prov_mgr_config_t","textEdit":{"newText":"wifi_prov_mgr_config_t","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Runs Wi-Fi as Station with the supplied configuration  \nConfigures the Wi-Fi station mode to connect to the AP with SSID and password specified in config structure and sets Wi-Fi to run as station.  \nThis is automatically called by provisioning service upon receiving new credentials.  \nIf credentials are to be supplied to the manager via a different mode other than through protocomm, then this API needs to be called.  \nEvent WIFI_PROV_CRED_RECV is emitted after credentials have been applied and Wi-Fi station started  \n@param[in] wifi_cfg Pointer to Wi-Fi configuration structure  \n@return  \n\\- ESP_OK : Wi-Fi configured and started successfully  \n\\- ESP_FAIL : Failed to set configuration"},"filterText":"wifi_prov_mgr_configure_sta","insertText":"wifi_prov_mgr_configure_sta(${1:wifi_config_t *wifi_cfg})","insertTextFormat":2,"kind":3,"label":"•wifi_prov_mgr_configure_sta(wifi_config_t *wifi_cfg)","score":1.2690916061401367,"sortText":"405d8e68wifi_prov_mgr_configure_sta","textEdit":{"newText":"wifi_prov_mgr_configure_sta(${1:wifi_config_t *wifi_cfg})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Stop provisioning (if running) and release resource used by the manager  \nEvent WIFI_PROV_DEINIT is emitted right after de-initialization is finished  \nIf provisioning service is still active when this API is called,  \nit first stops the service, hence emitting WIFI_PROV_END, and then performs the de-initialization"},"filterText":"wifi_prov_mgr_deinit","insertText":"wifi_prov_mgr_deinit()","insertTextFormat":2,"kind":3,"label":"•wifi_prov_mgr_deinit()","score":1.2690916061401367,"sortText":"405d8e68wifi_prov_mgr_deinit","textEdit":{"newText":"wifi_prov_mgr_deinit()","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Disable auto stopping of provisioning service upon completion  \nBy default, once provisioning is complete, the provisioning service is automatically stopped, and all endpoints (along with those registered by main application) are deactivated.  \nThis API is useful in the case when main application wishes to close provisioning service only after it receives some protocomm command from the client side app. For example, after connecting to Wi-Fi, the device may want to connect to the cloud, and only once that is successfully, the device is said to be fully configured. But, then it is upto the main application to explicitly call wifi_prov_mgr_stop_provisioning() later when the device is fully configured and the provisioning service is no longer required.  \n@note This must be called before executing wifi_prov_mgr_start_provisioning()  \n@param[in] cleanup_delay Sets the delay after which the actual cleanup of transport related resources is done after a call to wifi_prov_mgr_stop_provisioning() returns. Minimum allowed value is 100ms. If not specified, this will default to 1000ms.  \n@return  \n\\- ESP_OK : Success  \n\\- ESP_ERR_INVALID_STATE : Manager not initialized or provisioning service already started"},"filterText":"wifi_prov_mgr_disable_auto_stop","insertText":"wifi_prov_mgr_disable_auto_stop(${1:uint32_t cleanup_delay})","insertTextFormat":2,"kind":3,"label":"•wifi_prov_mgr_disable_auto_stop(uint32_t cleanup_delay)","score":1.2690916061401367,"sortText":"405d8e68wifi_prov_mgr_disable_auto_stop","textEdit":{"newText":"wifi_prov_mgr_disable_auto_stop(${1:uint32_t cleanup_delay})","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}}}}]}}Content-Length: 1220

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'w'","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":13}}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":17,"character":26},"end":{"line":17,"character":26}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 229

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":27},"context":{"triggerKind":3}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 33430

{"id":98,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"AsyncWebSocket","filterText":"ws","insertText":"ws","insertTextFormat":2,"kind":6,"label":" ws","score":50.723854064941406,"sortText":"3d351ac6ws","textEdit":{"newText":"ws","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"filterText":"WiFiClientSocketHandle","insertText":"WiFiClientSocketHandle","insertTextFormat":2,"kind":7,"label":" WiFiClientSocketHandle","score":7.2600007057189941,"sortText":"3f97ae13WiFiClientSocketHandle","textEdit":{"newText":"WiFiClientSocketHandle","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <istream>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"basic_istream<_CharT, _Traits> &","documentation":{"kind":"markdown","value":"From `<istream>`  \n@brief Quick and easy way to eat whitespace  \nThis manipulator extracts whitespace characters, stopping when the next character is non-whitespace, or when the input sequence is empty.  \nIf the sequence is empty, @c eofbit is set in the stream, but not  \n@c failbit.  \nThe current locale is used to distinguish whitespace characters.  \nExample:  \n@code MyClass mc;  \nstd::cin >> std::ws >> mc;  \n@endcode will skip leading whitespace before calling operator>> on cin and your object. Note that the same effect can be achieved by creating a std::basic_istream::sentry inside your definition of operator>>."},"filterText":"ws","insertText":"std::ws(${1:basic_istream<_CharT, _Traits> &__is})","insertTextFormat":2,"kind":3,"label":"•std::ws(basic_istream<_CharT, _Traits> &__is)","score":0.98550808429718018,"sortText":"4003b5bews","textEdit":{"newText":"std::ws(${1:basic_istream<_CharT, _Traits> &__is})","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wscanf","insertText":"wscanf(${1:const wchar_t *, ...})","insertTextFormat":2,"kind":3,"label":"•wscanf(const wchar_t *, ...)","score":1.3747211694717407,"sortText":"40500923wscanf","textEdit":{"newText":"wscanf(${1:const wchar_t *, ...})","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WIFI_SCANNING_BIT","insertText":"WIFI_SCANNING_BIT","insertTextFormat":2,"kind":6,"label":"•WIFI_SCANNING_BIT","score":1.5037373304367065,"sortText":"406fa427WIFI_SCANNING_BIT","textEdit":{"newText":"WIFI_SCANNING_BIT","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WIFI_SCAN_DONE_BIT","insertText":"WIFI_SCAN_DONE_BIT","insertTextFormat":2,"kind":6,"label":"•WIFI_SCAN_DONE_BIT","score":1.5037373304367065,"sortText":"406fa427WIFI_SCAN_DONE_BIT","textEdit":{"newText":"WIFI_SCAN_DONE_BIT","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"WL_SCAN_COMPLETED","insertText":"WL_SCAN_COMPLETED","insertTextFormat":2,"kind":20,"label":"•WL_SCAN_COMPLETED","score":1.5037373304367065,"sortText":"406fa427WL_SCAN_COMPLETED","textEdit":{"newText":"WL_SCAN_COMPLETED","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"wl_status_t","insertText":"wl_status_t","insertTextFormat":2,"kind":8,"label":"•wl_status_t","score":1.5037373304367065,"sortText":"406fa427wl_status_t","textEdit":{"newText":"wl_status_t","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_BINARY","insertText":"WS_BINARY","insertTextFormat":2,"kind":20,"label":"•WS_BINARY","score":1.2690916061401367,"sortText":"4071dc9bWS_BINARY","textEdit":{"newText":"WS_BINARY","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_CONNECTED","insertText":"WS_CONNECTED","insertTextFormat":2,"kind":20,"label":"•WS_CONNECTED","score":1.2690916061401367,"sortText":"4071dc9bWS_CONNECTED","textEdit":{"newText":"WS_CONNECTED","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_CONTINUATION","insertText":"WS_CONTINUATION","insertTextFormat":2,"kind":20,"label":"•WS_CONTINUATION","score":1.2690916061401367,"sortText":"4071dc9bWS_CONTINUATION","textEdit":{"newText":"WS_CONTINUATION","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_DISCONNECT","insertText":"WS_DISCONNECT","insertTextFormat":2,"kind":20,"label":"•WS_DISCONNECT","score":1.2690916061401367,"sortText":"4071dc9bWS_DISCONNECT","textEdit":{"newText":"WS_DISCONNECT","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_DISCONNECTED","insertText":"WS_DISCONNECTED","insertTextFormat":2,"kind":20,"label":"•WS_DISCONNECTED","score":1.2690916061401367,"sortText":"4071dc9bWS_DISCONNECTED","textEdit":{"newText":"WS_DISCONNECTED","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_DISCONNECTING","insertText":"WS_DISCONNECTING","insertTextFormat":2,"kind":20,"label":"•WS_DISCONNECTING","score":1.2690916061401367,"sortText":"4071dc9bWS_DISCONNECTING","textEdit":{"newText":"WS_DISCONNECTING","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_CONNECT","insertText":"WS_EVT_CONNECT","insertTextFormat":2,"kind":20,"label":"•WS_EVT_CONNECT","score":1.2690916061401367,"sortText":"4071dc9bWS_EVT_CONNECT","textEdit":{"newText":"WS_EVT_CONNECT","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_DATA","insertText":"WS_EVT_DATA","insertTextFormat":2,"kind":20,"label":"•WS_EVT_DATA","score":1.2690916061401367,"sortText":"4071dc9bWS_EVT_DATA","textEdit":{"newText":"WS_EVT_DATA","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_DISCONNECT","insertText":"WS_EVT_DISCONNECT","insertTextFormat":2,"kind":20,"label":"•WS_EVT_DISCONNECT","score":1.2690916061401367,"sortText":"4071dc9bWS_EVT_DISCONNECT","textEdit":{"newText":"WS_EVT_DISCONNECT","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_ERROR","insertText":"WS_EVT_ERROR","insertTextFormat":2,"kind":20,"label":"•WS_EVT_ERROR","score":1.2690916061401367,"sortText":"4071dc9bWS_EVT_ERROR","textEdit":{"newText":"WS_EVT_ERROR","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_PONG","insertText":"WS_EVT_PONG","insertTextFormat":2,"kind":20,"label":"•WS_EVT_PONG","score":1.2690916061401367,"sortText":"4071dc9bWS_EVT_PONG","textEdit":{"newText":"WS_EVT_PONG","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MSG_ERROR","insertText":"WS_MSG_ERROR","insertTextFormat":2,"kind":20,"label":"•WS_MSG_ERROR","score":1.2690916061401367,"sortText":"4071dc9bWS_MSG_ERROR","textEdit":{"newText":"WS_MSG_ERROR","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MSG_SENDING","insertText":"WS_MSG_SENDING","insertTextFormat":2,"kind":20,"label":"•WS_MSG_SENDING","score":1.2690916061401367,"sortText":"4071dc9bWS_MSG_SENDING","textEdit":{"newText":"WS_MSG_SENDING","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MSG_SENT","insertText":"WS_MSG_SENT","insertTextFormat":2,"kind":20,"label":"•WS_MSG_SENT","score":1.2690916061401367,"sortText":"4071dc9bWS_MSG_SENT","textEdit":{"newText":"WS_MSG_SENT","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_PING","insertText":"WS_PING","insertTextFormat":2,"kind":20,"label":"•WS_PING","score":1.2690916061401367,"sortText":"4071dc9bWS_PING","textEdit":{"newText":"WS_PING","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_PONG","insertText":"WS_PONG","insertTextFormat":2,"kind":20,"label":"•WS_PONG","score":1.2690916061401367,"sortText":"4071dc9bWS_PONG","textEdit":{"newText":"WS_PONG","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_TEXT","insertText":"WS_TEXT","insertTextFormat":2,"kind":20,"label":"•WS_TEXT","score":1.2690916061401367,"sortText":"4071dc9bWS_TEXT","textEdit":{"newText":"WS_TEXT","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <streambuf>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `<streambuf>`  \nBase class for @c wchar_t buffers."},"filterText":"wstreambuf","insertText":"std::wstreambuf","insertTextFormat":2,"kind":8,"label":"•std::wstreambuf","score":0.98550808429718018,"sortText":"4083b5bewstreambuf","textEdit":{"newText":"std::wstreambuf","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <sstream>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `<sstream>`  \nClass for @c wchar_t memory buffers."},"filterText":"wstringbuf","insertText":"std::wstringbuf","insertTextFormat":2,"kind":8,"label":"•std::wstringbuf","score":0.98550808429718018,"sortText":"4083b5bewstringbuf","textEdit":{"newText":"std::wstringbuf","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <sstream>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `<sstream>`  \nClass for @c wchar_t mixed input and output memory streams."},"filterText":"wstringstream","insertText":"std::wstringstream","insertTextFormat":2,"kind":8,"label":"•std::wstringstream","score":0.98550808429718018,"sortText":"4083b5bewstringstream","textEdit":{"newText":"std::wstringstream","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <ios>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `<ios>`  \nFile position for wchar_t streams."},"filterText":"wstreampos","insertText":"std::wstreampos","insertTextFormat":2,"kind":8,"label":"•std::wstreampos","score":0.92650353908538818,"sortText":"4092d0aawstreampos","textEdit":{"newText":"std::wstreampos","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <string>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `<string>`  \nA string of @c wchar_t"},"filterText":"wstring","insertText":"std::wstring","insertTextFormat":2,"kind":8,"label":"•std::wstring","score":0.92650353908538818,"sortText":"4092d0aawstring","textEdit":{"newText":"std::wstring","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"filterText":"AsyncWebServer","insertText":"AsyncWebServer","insertTextFormat":2,"kind":7,"label":" AsyncWebServer","score":7.2600007057189941,"sortText":"4097ae13AsyncWebServer","textEdit":{"newText":"AsyncWebServer","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"filterText":"AsyncWebServerRequest","insertText":"AsyncWebServerRequest","insertTextFormat":2,"kind":7,"label":" AsyncWebServerRequest","score":7.2600007057189941,"sortText":"4097ae13AsyncWebServerRequest","textEdit":{"newText":"AsyncWebServerRequest","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"filterText":"AsyncWebSocket","insertText":"AsyncWebSocket","insertTextFormat":2,"kind":7,"label":" AsyncWebSocket","score":7.2600007057189941,"sortText":"4097ae13AsyncWebSocket","textEdit":{"newText":"AsyncWebSocket","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"filterText":"AsyncWebSocketClient","insertText":"AsyncWebSocketClient","insertTextFormat":2,"kind":7,"label":" AsyncWebSocketClient","score":7.2600007057189941,"sortText":"4097ae13AsyncWebSocketClient","textEdit":{"newText":"AsyncWebSocketClient","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"filterText":"AsyncWebSocketControl","insertText":"AsyncWebSocketControl","insertTextFormat":2,"kind":7,"label":" AsyncWebSocketControl","score":7.2600007057189941,"sortText":"4097ae13AsyncWebSocketControl","textEdit":{"newText":"AsyncWebSocketControl","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"filterText":"AsyncWebSocketMessage","insertText":"AsyncWebSocketMessage","insertTextFormat":2,"kind":7,"label":" AsyncWebSocketMessage","score":7.2600007057189941,"sortText":"4097ae13AsyncWebSocketMessage","textEdit":{"newText":"AsyncWebSocketMessage","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"filterText":"AsyncWebSocketMessageBuffer","insertText":"AsyncWebSocketMessageBuffer","insertTextFormat":2,"kind":7,"label":" AsyncWebSocketMessageBuffer","score":7.2600007057189941,"sortText":"4097ae13AsyncWebSocketMessageBuffer","textEdit":{"newText":"AsyncWebSocketMessageBuffer","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include <cwchar>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `<cwchar>`"},"filterText":"wscanf","insertText":"std::wscanf","insertTextFormat":2,"kind":18,"label":"•std::wscanf","score":0.8959164023399353,"sortText":"409aa539wscanf","textEdit":{"newText":"std::wscanf","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_scan_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nactive scan"},"filterText":"WIFI_SCAN_TYPE_ACTIVE","insertText":"WIFI_SCAN_TYPE_ACTIVE","insertTextFormat":2,"kind":20,"label":"•WIFI_SCAN_TYPE_ACTIVE","score":1.1118041276931763,"sortText":"40aa889bWIFI_SCAN_TYPE_ACTIVE","textEdit":{"newText":"WIFI_SCAN_TYPE_ACTIVE","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_scan_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \npassive scan"},"filterText":"WIFI_SCAN_TYPE_PASSIVE","insertText":"WIFI_SCAN_TYPE_PASSIVE","insertTextFormat":2,"kind":20,"label":"•WIFI_SCAN_TYPE_PASSIVE","score":1.1118041276931763,"sortText":"40aa889bWIFI_SCAN_TYPE_PASSIVE","textEdit":{"newText":"WIFI_SCAN_TYPE_PASSIVE","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_second_chan_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe channel width is HT40 and the secondary channel is above the primary channel"},"filterText":"WIFI_SECOND_CHAN_ABOVE","insertText":"WIFI_SECOND_CHAN_ABOVE","insertTextFormat":2,"kind":20,"label":"•WIFI_SECOND_CHAN_ABOVE","score":1.1118041276931763,"sortText":"40aa889bWIFI_SECOND_CHAN_ABOVE","textEdit":{"newText":"WIFI_SECOND_CHAN_ABOVE","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_second_chan_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe channel width is HT40 and the secondary channel is below the primary channel"},"filterText":"WIFI_SECOND_CHAN_BELOW","insertText":"WIFI_SECOND_CHAN_BELOW","insertTextFormat":2,"kind":20,"label":"•WIFI_SECOND_CHAN_BELOW","score":1.1118041276931763,"sortText":"40aa889bWIFI_SECOND_CHAN_BELOW","textEdit":{"newText":"WIFI_SECOND_CHAN_BELOW","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_second_chan_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe channel width is HT20"},"filterText":"WIFI_SECOND_CHAN_NONE","insertText":"WIFI_SECOND_CHAN_NONE","insertTextFormat":2,"kind":20,"label":"•WIFI_SECOND_CHAN_NONE","score":1.1118041276931763,"sortText":"40aa889bWIFI_SECOND_CHAN_NONE","textEdit":{"newText":"WIFI_SECOND_CHAN_NONE","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_storage_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nall configuration will strore in both memory and flash"},"filterText":"WIFI_STORAGE_FLASH","insertText":"WIFI_STORAGE_FLASH","insertTextFormat":2,"kind":20,"label":"•WIFI_STORAGE_FLASH","score":1.1118041276931763,"sortText":"40aa889bWIFI_STORAGE_FLASH","textEdit":{"newText":"WIFI_STORAGE_FLASH","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"wifi_storage_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nall configuration will only store in the memory"},"filterText":"WIFI_STORAGE_RAM","insertText":"WIFI_STORAGE_RAM","insertTextFormat":2,"kind":20,"label":"•WIFI_STORAGE_RAM","score":1.1118041276931763,"sortText":"40aa889bWIFI_STORAGE_RAM","textEdit":{"newText":"WIFI_STORAGE_RAM","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Parameters for an SSID scan."},"filterText":"wifi_scan_config_t","insertText":"wifi_scan_config_t","insertTextFormat":2,"kind":8,"label":"•wifi_scan_config_t","score":1.1118041276931763,"sortText":"40aa889bwifi_scan_config_t","textEdit":{"newText":"wifi_scan_config_t","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_scan_method_t","insertText":"wifi_scan_method_t","insertTextFormat":2,"kind":8,"label":"•wifi_scan_method_t","score":1.1118041276931763,"sortText":"40aa889bwifi_scan_method_t","textEdit":{"newText":"wifi_scan_method_t","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_scan_threshold_t","insertText":"wifi_scan_threshold_t","insertTextFormat":2,"kind":8,"label":"•wifi_scan_threshold_t","score":1.1118041276931763,"sortText":"40aa889bwifi_scan_threshold_t","textEdit":{"newText":"wifi_scan_threshold_t","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Aggregate of active & passive scan time per channel"},"filterText":"wifi_scan_time_t","insertText":"wifi_scan_time_t","insertTextFormat":2,"kind":8,"label":"•wifi_scan_time_t","score":1.1118041276931763,"sortText":"40aa889bwifi_scan_time_t","textEdit":{"newText":"wifi_scan_time_t","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_scan_type_t","insertText":"wifi_scan_type_t","insertTextFormat":2,"kind":8,"label":"•wifi_scan_type_t","score":1.1118041276931763,"sortText":"40aa889bwifi_scan_type_t","textEdit":{"newText":"wifi_scan_type_t","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_second_chan_t","insertText":"wifi_second_chan_t","insertTextFormat":2,"kind":8,"label":"•wifi_second_chan_t","score":1.1118041276931763,"sortText":"40aa889bwifi_second_chan_t","textEdit":{"newText":"wifi_second_chan_t","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_sort_method_t","insertText":"wifi_sort_method_t","insertTextFormat":2,"kind":8,"label":"•wifi_sort_method_t","score":1.1118041276931763,"sortText":"40aa889bwifi_sort_method_t","textEdit":{"newText":"wifi_sort_method_t","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief STA configuration settings for the ESP32"},"filterText":"wifi_sta_config_t","insertText":"wifi_sta_config_t","insertTextFormat":2,"kind":8,"label":"•wifi_sta_config_t","score":1.1118041276931763,"sortText":"40aa889bwifi_sta_config_t","textEdit":{"newText":"wifi_sta_config_t","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Description of STA associated with AP"},"filterText":"wifi_sta_info_t","insertText":"wifi_sta_info_t","insertTextFormat":2,"kind":8,"label":"•wifi_sta_info_t","score":1.1118041276931763,"sortText":"40aa889bwifi_sta_info_t","textEdit":{"newText":"wifi_sta_info_t","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief List of stations associated with the ESP32 Soft-AP"},"filterText":"wifi_sta_list_t","insertText":"wifi_sta_list_t","insertTextFormat":2,"kind":8,"label":"•wifi_sta_list_t","score":1.1118041276931763,"sortText":"40aa889bwifi_sta_list_t","textEdit":{"newText":"wifi_sta_list_t","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_storage_t","insertText":"wifi_storage_t","insertTextFormat":2,"kind":8,"label":"•wifi_storage_t","score":1.1118041276931763,"sortText":"40aa889bwifi_storage_t","textEdit":{"newText":"wifi_storage_t","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"detail":"[2 overloads]","filterText":"AsyncWebServer","insertText":"AsyncWebServer($0)","insertTextFormat":2,"kind":4,"label":" AsyncWebServer(…)","score":6.6000003814697266,"sortText":"40acccccAsyncWebServer","textEdit":{"newText":"AsyncWebServer($0)","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"detail":"[2 overloads]","filterText":"AsyncWebServerRequest","insertText":"AsyncWebServerRequest($0)","insertTextFormat":2,"kind":4,"label":" AsyncWebServerRequest(…)","score":6.6000003814697266,"sortText":"40acccccAsyncWebServerRequest","textEdit":{"newText":"AsyncWebServerRequest($0)","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"detail":"[2 overloads]","filterText":"AsyncWebSocket","insertText":"AsyncWebSocket($0)","insertTextFormat":2,"kind":4,"label":" AsyncWebSocket(…)","score":6.6000003814697266,"sortText":"40acccccAsyncWebSocket","textEdit":{"newText":"AsyncWebSocket($0)","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"detail":"[2 overloads]","filterText":"AsyncWebSocketClient","insertText":"AsyncWebSocketClient($0)","insertTextFormat":2,"kind":4,"label":" AsyncWebSocketClient(…)","score":6.6000003814697266,"sortText":"40acccccAsyncWebSocketClient","textEdit":{"newText":"AsyncWebSocketClient($0)","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"detail":"[2 overloads]","filterText":"AsyncWebSocketMessage","insertText":"AsyncWebSocketMessage($0)","insertTextFormat":2,"kind":4,"label":" AsyncWebSocketMessage(…)","score":6.6000003814697266,"sortText":"40acccccAsyncWebSocketMessage","textEdit":{"newText":"AsyncWebSocketMessage($0)","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"detail":"[5 overloads]","filterText":"AsyncWebSocketMessageBuffer","insertText":"AsyncWebSocketMessageBuffer($0)","insertTextFormat":2,"kind":4,"label":" AsyncWebSocketMessageBuffer(…)","score":6.6000003814697266,"sortText":"40acccccAsyncWebSocketMessageBuffer","textEdit":{"newText":"AsyncWebSocketMessageBuffer($0)","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"rom/uart.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"RcvMsgState","documentation":{"kind":"markdown","value":"From `\"rom/uart.h\"`"},"filterText":"WAIT_SYNC_FRM","insertText":"WAIT_SYNC_FRM","insertTextFormat":2,"kind":20,"label":"•WAIT_SYNC_FRM","score":1.0063711404800415,"sortText":"40bec6d9WAIT_SYNC_FRM","textEdit":{"newText":"WAIT_SYNC_FRM","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MAX_QUEUED_MESSAGES","insertText":"WS_MAX_QUEUED_MESSAGES","insertTextFormat":2,"kind":1,"label":"•WS_MAX_QUEUED_MESSAGES","score":0.57685983180999756,"sortText":"40fec88dWS_MAX_QUEUED_MESSAGES","textEdit":{"newText":"WS_MAX_QUEUED_MESSAGES","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}},{"additionalTextEdits":[{"newText":"#include \"soc/cpu.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"soc/cpu.h\"`"},"filterText":"WSR","insertText":"WSR(${1:reg}, ${2:newval})","insertTextFormat":2,"kind":1,"label":"•WSR(reg, newval)","score":0.53754985332489014,"sortText":"410f2d7bWSR","textEdit":{"newText":"WSR(${1:reg}, ${2:newval})","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}}]}}
>>>
Content-Length: 167

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"}},"id":99,"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":14}}Content-Length: 4316

{"id":99,"jsonrpc":"2.0","result":[{"kind":13,"name":"server","range":{"end":{"character":25,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":21,"line":14},"start":{"character":15,"line":14}}},{"kind":13,"name":"ws","range":{"end":{"character":24,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":17,"line":15},"start":{"character":15,"line":15}}},{"kind":13,"name":"state","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":11,"line":16},"start":{"character":6,"line":16}}},{"kind":13,"name":"aws","range":{"end":{"character":28,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":7,"line":17}}},{"kind":13,"name":"ntpServer","range":{"end":{"character":38,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":21,"line":20},"start":{"character":12,"line":20}}},{"kind":13,"name":"gmtOffset_sec","range":{"end":{"character":33,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":24,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"daylightOffset_sec","range":{"end":{"character":35,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":28,"line":22},"start":{"character":10,"line":22}}},{"kind":13,"name":"wifiavail","range":{"end":{"character":22,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":14,"line":25},"start":{"character":5,"line":25}}},{"kind":12,"name":"printLocalTime","range":{"end":{"character":23,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":7,"line":29}}},{"kind":12,"name":"printLocalHour","range":{"end":{"character":23,"line":31},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":21,"line":31},"start":{"character":7,"line":31}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":10,"line":33},"start":{"character":5,"line":33}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":9,"line":35},"start":{"character":5,"line":35}}},{"kind":12,"name":"printLocalTime","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":37}},"selectionRange":{"end":{"character":21,"line":37},"start":{"character":7,"line":37}}},{"kind":12,"name":"printLocalHour","range":{"end":{"character":1,"line":51},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":21,"line":45},"start":{"character":7,"line":45}}},{"kind":12,"name":"UpdateClients","range":{"end":{"character":38,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":18,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"initWiFi","range":{"end":{"character":15,"line":56},"start":{"character":0,"line":56}},"selectionRange":{"end":{"character":13,"line":56},"start":{"character":5,"line":56}}},{"kind":12,"name":"initTime","range":{"end":{"character":15,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":13,"line":57},"start":{"character":5,"line":57}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":140},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":10,"line":60},"start":{"character":5,"line":60}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":147},"start":{"character":0,"line":142}},"selectionRange":{"end":{"character":9,"line":142},"start":{"character":5,"line":142}}},{"kind":12,"name":"UpdateClients","range":{"end":{"character":1,"line":155},"start":{"character":0,"line":149}},"selectionRange":{"end":{"character":18,"line":149},"start":{"character":5,"line":149}}},{"kind":12,"name":"initWiFi","range":{"end":{"character":1,"line":183},"start":{"character":0,"line":171}},"selectionRange":{"end":{"character":13,"line":171},"start":{"character":5,"line":171}}},{"kind":12,"name":"initTime","range":{"end":{"character":1,"line":189},"start":{"character":0,"line":185}},"selectionRange":{"end":{"character":13,"line":185},"start":{"character":5,"line":185}}}]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":27},"end":{"line":17,"character":27}},"context":{"diagnostics":[]}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":100,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":19,"character":22}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":101,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":29},"end":{"line":17,"character":29}},"context":{"diagnostics":[]}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":102,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":8,"character":1}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":103,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":9,"character":8}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":104,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":17}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"id":105,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### constructor `BcbAws`  \n\n---\n```cpp\n// In BcbAws\npublic: BcbAws(State *istate, AsyncWebServer server, AsyncWebSocket ws)\n```"},"range":{"end":{"character":17,"line":17},"start":{"character":12,"line":17}}}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":15,"character":18}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":106,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":19}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"id":107,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `server`  \n\n---\nType: `class AsyncWebServer`  \n\n---\n```cpp\nAsyncWebServer server(80)\n```"},"range":{"end":{"character":24,"line":17},"start":{"character":18,"line":17}}}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":26}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"id":108,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `ws`  \n\n---\nType: `class AsyncWebSocket`  \n\n---\n```cpp\nAsyncWebSocket ws(\"/ws\")\n```"},"range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}}}}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":6}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 246

{"id":109,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include <HTTPClient.h>  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"end":{"character":6,"line":17},"start":{"character":0,"line":17}}}}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":5}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 246

{"id":110,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include <HTTPClient.h>  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"end":{"character":6,"line":17},"start":{"character":0,"line":17}}}}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":8}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 259

{"id":111,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `aws`  \n\n---\nType: `class BcbAws`  \n\n---\n```cpp\nBcbAws aws(&state, server, ws)\n```"},"range":{"end":{"character":10,"line":17},"start":{"character":7,"line":17}}}}
>>>
Content-Length: 203

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":13,"character":35}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 126

{"id":112,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":35,"line":13},"start":{"character":21,"line":13}}}]}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":35},"end":{"line":13,"character":35}},"context":{"diagnostics":[]}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":113,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":13,"character":35}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":114,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `AsyncWebServer`  \n\n---\n```cpp\nclass AsyncWebServer {}\n```"},"range":{"end":{"character":35,"line":13},"start":{"character":21,"line":13}}}}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":111},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":13,"character":36}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"id":115,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `server`  \n\n---\nType: `class AsyncWebServer`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer server\n```"},"range":{"end":{"character":42,"line":13},"start":{"character":36,"line":13}}}}
>>>
Content-Length: 270

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":9},"contentChanges":[{"range":{"start":{"line":13,"character":35},"end":{"line":13,"character":35}},"text":"*"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":36},"end":{"line":13,"character":36}},"context":{"diagnostics":[]}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":116,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":13,"character":45}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"id":117,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `AsyncWebSocket`  \n\n---\nWebServer Handler implementation that plays the role of a socket server  \n\n---\n```cpp\nclass AsyncWebSocket : public AsyncWebHandler {}\n```"},"range":{"end":{"character":59,"line":13},"start":{"character":45,"line":13}}}}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":114},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":13,"character":58}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"id":118,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `AsyncWebSocket`  \n\n---\nWebServer Handler implementation that plays the role of a socket server  \n\n---\n```cpp\nclass AsyncWebSocket : public AsyncWebHandler {}\n```"},"range":{"end":{"character":59,"line":13},"start":{"character":45,"line":13}}}}
>>>
Content-Length: 203

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":13,"character":59}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"id":119,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":59,"line":13},"start":{"character":45,"line":13}}},{"kind":1,"range":{"end":{"character":27,"line":19},"start":{"character":13,"line":19}}}]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":115},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":59},"end":{"line":13,"character":59}},"context":{"diagnostics":[]}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":120,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":113},"jsonrpc":"2.0"}Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":10},"contentChanges":[{"range":{"start":{"line":13,"character":59},"end":{"line":13,"character":59}},"text":"*"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":116},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":117},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":60},"end":{"line":13,"character":60}},"context":{"diagnostics":[]}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":121,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 1033

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":15,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbsdcard.h","version":1}}Content-Length: 1031

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":17,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/State.cpp","version":1}}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":43}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 228

{"id":122,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `AsyncWebServer`  \n\n---\n```cpp\nclass AsyncWebServer {}\n```"},"range":{"end":{"character":43,"line":2},"start":{"character":29,"line":2}}}}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":119},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":42}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 228

{"id":123,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `AsyncWebServer`  \n\n---\n```cpp\nclass AsyncWebServer {}\n```"},"range":{"end":{"character":43,"line":2},"start":{"character":29,"line":2}}}}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":43}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":124,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":43,"line":2},"start":{"character":29,"line":2}}}]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":120},"jsonrpc":"2.0"}Content-Length: 682

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":125,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 684

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":126,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":43},"end":{"line":2,"character":43}},"context":{"diagnostics":[]}},"id":127,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":127,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 270

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":4},"contentChanges":[{"range":{"start":{"line":2,"character":43},"end":{"line":2,"character":43}},"text":"*"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":44},"end":{"line":2,"character":44}},"context":{"diagnostics":[]}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":128,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":67}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 335

{"id":129,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `AsyncWebSocket`  \n\n---\nWebServer Handler implementation that plays the role of a socket server  \n\n---\n```cpp\nclass AsyncWebSocket : public AsyncWebHandler {}\n```"},"range":{"end":{"character":67,"line":2},"start":{"character":53,"line":2}}}}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":67}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"id":130,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":67,"line":2},"start":{"character":53,"line":2}}},{"kind":1,"range":{"end":{"character":35,"line":19},"start":{"character":21,"line":19}}}]}
>>>
Content-Length: 270

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":5},"contentChanges":[{"range":{"start":{"line":2,"character":67},"end":{"line":2,"character":67}},"text":"*"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1030

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":9}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":68},"end":{"line":2,"character":68}},"context":{"diagnostics":[]}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 1031

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":10}}Content-Length: 2962

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":7},"start":{"character":2,"line":7}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":39},"start":{"character":2,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":40},"start":{"character":21,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":51},"start":{"character":2,"line":51}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":55},"start":{"character":2,"line":55}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":56},"start":{"character":43,"line":56}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":56},"start":{"character":48,"line":56}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":59},"start":{"character":2,"line":59}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":3}}Content-Length: 3377

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":7},"start":{"character":2,"line":7}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":39},"start":{"character":2,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":40},"start":{"character":21,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":51},"start":{"character":2,"line":51}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":55},"start":{"character":2,"line":55}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":56},"start":{"character":43,"line":56}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":56},"start":{"character":48,"line":56}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":59},"start":{"character":2,"line":59}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":4}}Content-Length: 38

{"id":131,"jsonrpc":"2.0","result":[]}Content-Length: 3377

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":7},"start":{"character":2,"line":7}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":39},"start":{"character":2,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":40},"start":{"character":21,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":51},"start":{"character":2,"line":51}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":55},"start":{"character":2,"line":55}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":56},"start":{"character":43,"line":56}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":56},"start":{"character":48,"line":56}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":59},"start":{"character":2,"line":59}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":5}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":60},"end":{"line":13,"character":60}},"context":{"diagnostics":[]}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":132,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":68},"end":{"line":2,"character":68}},"context":{"diagnostics":[]}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":133,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":24,"character":21}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":134,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":23,"character":20}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":135,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":23,"character":7}},"id":136,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":136,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":24,"character":3}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":137,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":24,"character":2}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":138,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":2}},"context":{"diagnostics":[]}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":139,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 284

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":11},"contentChanges":[{"range":{"start":{"line":24,"character":1},"end":{"line":24,"character":2}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":24,"character":1},"end":{"line":24,"character":1}},"context":{"diagnostics":[]}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 1246

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"},{"code":"expected_member_name_or_semi","message":"Expected member name or ';' after declaration specifiers","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":24}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":11}}Content-Length: 38

{"id":140,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 284

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":12},"contentChanges":[{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1031

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":12}}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"}},"jsonrpc":"2.0"}Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":23,"character":1}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":141,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":2}},"context":{"diagnostics":[]}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":142,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 284

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":13},"contentChanges":[{"range":{"start":{"line":23,"character":1},"end":{"line":23,"character":2}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1246

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"},{"code":"expected_member_name_or_semi","message":"Expected member name or ';' after declaration specifiers","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":23}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":13}}
>>>
Content-Length: 284

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":14},"contentChanges":[{"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1031

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":14}}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":24,"character":14}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 336

{"id":143,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `AsyncWebSocket`  \n\n---\nWebServer Handler implementation that plays the role of a socket server  \n\n---\n```cpp\nclass AsyncWebSocket : public AsyncWebHandler {}\n```"},"range":{"end":{"character":16,"line":24},"start":{"character":2,"line":24}}}}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":23,"character":16}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 229

{"id":144,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `AsyncWebServer`  \n\n---\n```cpp\nclass AsyncWebServer {}\n```"},"range":{"end":{"character":16,"line":23},"start":{"character":2,"line":23}}}}
>>>
Content-Length: 203

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":23,"character":16}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"id":145,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":35,"line":13},"start":{"character":21,"line":13}}},{"kind":1,"range":{"end":{"character":16,"line":23},"start":{"character":2,"line":23}}}]}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":23,"character":16},"end":{"line":23,"character":16}},"context":{"diagnostics":[]}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":146,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":15},"contentChanges":[{"range":{"start":{"line":23,"character":16},"end":{"line":23,"character":16}},"text":"*"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1031

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":15}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":23,"character":17},"end":{"line":23,"character":17}},"context":{"diagnostics":[]}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":147,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":24,"character":15}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 336

{"id":148,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `AsyncWebSocket`  \n\n---\nWebServer Handler implementation that plays the role of a socket server  \n\n---\n```cpp\nclass AsyncWebSocket : public AsyncWebHandler {}\n```"},"range":{"end":{"character":16,"line":24},"start":{"character":2,"line":24}}}}
>>>
Content-Length: 203

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"position":{"line":24,"character":16}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":149,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":59,"line":13},"start":{"character":45,"line":13}}},{"kind":1,"range":{"end":{"character":27,"line":19},"start":{"character":13,"line":19}}},{"kind":1,"range":{"end":{"character":16,"line":24},"start":{"character":2,"line":24}}}]}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":24,"character":16},"end":{"line":24,"character":16}},"context":{"diagnostics":[]}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":150,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":16},"contentChanges":[{"range":{"start":{"line":24,"character":16},"end":{"line":24,"character":16}},"text":"*"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1031

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":16}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":24,"character":17},"end":{"line":24,"character":17}},"context":{"diagnostics":[]}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":151,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"}},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":15}},"context":{"diagnostics":[]}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":152,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 273

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":6},"contentChanges":[{"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":15}},"text":"\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3377

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":6}}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":7},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"text":"w"}]},"jsonrpc":"2.0"}Content-Length: 224

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":3},"context":{"triggerKind":1}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 3556

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'w'","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":7}}Content-Length: 56738

{"id":153,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"detail":"AsyncWebSocket *","filterText":"ws","insertText":"ws","insertTextFormat":2,"kind":6,"label":" ws","score":26.400001525878906,"sortText":"3e2cccccws","textEdit":{"newText":"ws","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"filterText":"wchar_t","insertText":"wchar_t","insertTextFormat":2,"kind":14,"label":" wchar_t","score":8,"sortText":"3f000000wchar_t","textEdit":{"newText":"wchar_t","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"filterText":"while","insertText":"while (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"kind":15,"label":" while (condition) {statements}","score":8,"sortText":"3f000000while","textEdit":{"newText":"while (${1:condition}) {\n${0:statements}\n}","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"ESPAsyncWebServer.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"ESPAsyncWebServer.h\"`  \nRESPONSE :: One instance is created for each Request (attached by the Handler)"},"filterText":"WebResponseState","insertText":"WebResponseState","insertTextFormat":2,"kind":8,"label":"•WebResponseState","score":2.2556054592132568,"sortText":"3fefa429WebResponseState","textEdit":{"newText":"WebResponseState","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiServer.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiServer.h\"`"},"filterText":"WiFiServer","insertText":"WiFiServer","insertTextFormat":2,"kind":7,"label":"•WiFiServer","score":1.7285047769546509,"sortText":"4022c05bWiFiServer","textEdit":{"newText":"WiFiServer","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiClient.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiClient.h\"`"},"filterText":"WiFiClientSocketHandle","insertText":"WiFiClientSocketHandle","insertTextFormat":2,"kind":7,"label":"•WiFiClientSocketHandle","score":1.6677062511444092,"sortText":"402a889aWiFiClientSocketHandle","textEdit":{"newText":"WiFiClientSocketHandle","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"detail":"void","filterText":"writeFile","insertText":"writeFile(${1:fs::FS &fs}, ${2:const char *path}, ${3:const char *message})","insertTextFormat":2,"kind":3,"label":" writeFile(fs::FS &fs, const char *path, const char *message)","score":1.6613177061080933,"sortText":"402b59f1writeFile","textEdit":{"newText":"writeFile(${1:fs::FS &fs}, ${2:const char *path}, ${3:const char *message})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFi.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"WiFiClass","documentation":{"kind":"markdown","value":"From `\"WiFi.h\"`"},"filterText":"WiFi","insertText":"WiFi","insertTextFormat":2,"kind":6,"label":"•WiFi","score":1.5642313957214355,"sortText":"4037c744WiFi","textEdit":{"newText":"WiFi","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WiFiGenericClass","insertText":"WiFiGenericClass","insertTextFormat":2,"kind":7,"label":"•WiFiGenericClass","score":1.5443940162658691,"sortText":"403a514cWiFiGenericClass","textEdit":{"newText":"WiFiGenericClass","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"ESPAsyncWebServer.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"ESPAsyncWebServer.h\"`"},"filterText":"WebRequestMethod","insertText":"WebRequestMethod","insertTextFormat":2,"kind":8,"label":"•WebRequestMethod","score":1.5037370920181274,"sortText":"403f858bWebRequestMethod","textEdit":{"newText":"WebRequestMethod","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"ESPAsyncWebServer.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"ESPAsyncWebServer.h\"`"},"filterText":"WebRequestMethodComposite","insertText":"WebRequestMethodComposite","insertTextFormat":2,"kind":8,"label":"•WebRequestMethodComposite","score":1.5037370920181274,"sortText":"403f858bWebRequestMethodComposite","textEdit":{"newText":"WebRequestMethodComposite","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiSTA.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiSTA.h\"`"},"filterText":"WiFiSTAClass","insertText":"WiFiSTAClass","insertTextFormat":2,"kind":7,"label":"•WiFiSTAClass","score":1.4430230855941772,"sortText":"40474b05WiFiSTAClass","textEdit":{"newText":"WiFiSTAClass","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiClient.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiClient.h\"`"},"filterText":"WiFiClient","insertText":"WiFiClient","insertTextFormat":2,"kind":7,"label":"•WiFiClient","score":1.4188187122344971,"sortText":"404a6426WiFiClient","textEdit":{"newText":"WiFiClient","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/wifi_config.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/wifi_config.h\"`  \n@brief WiFi STA status for conveying back to the provisioning master"},"filterText":"wifi_prov_sta_state_t","insertText":"wifi_prov_sta_state_t","insertTextFormat":2,"kind":8,"label":"•wifi_prov_sta_state_t","score":1.4035457372665405,"sortText":"404c589dwifi_prov_sta_state_t","textEdit":{"newText":"wifi_prov_sta_state_t","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiScan.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiScan.h\"`"},"filterText":"WiFiScanClass","insertText":"WiFiScanClass","insertTextFormat":2,"kind":7,"label":"•WiFiScanClass","score":1.396082878112793,"sortText":"404d4d28WiFiScanClass","textEdit":{"newText":"WiFiScanClass","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiUdp.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiUdp.h\"`"},"filterText":"WiFiUDP","insertText":"WiFiUDP","insertTextFormat":2,"kind":7,"label":"•WiFiUDP","score":1.2900515794754028,"sortText":"405adf97WiFiUDP","textEdit":{"newText":"WiFiUDP","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"Esp.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"Esp.h\"`  \nAVR macros for WDT managment"},"filterText":"WDTO_t","insertText":"WDTO_t","insertTextFormat":2,"kind":8,"label":"•WDTO_t","score":1.2690916061401367,"sortText":"405d8e68WDTO_t","textEdit":{"newText":"WDTO_t","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_BINARY","insertText":"WS_BINARY","insertTextFormat":2,"kind":20,"label":"•WS_BINARY","score":1.2690916061401367,"sortText":"405d8e68WS_BINARY","textEdit":{"newText":"WS_BINARY","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_CONNECTED","insertText":"WS_CONNECTED","insertTextFormat":2,"kind":20,"label":"•WS_CONNECTED","score":1.2690916061401367,"sortText":"405d8e68WS_CONNECTED","textEdit":{"newText":"WS_CONNECTED","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_CONTINUATION","insertText":"WS_CONTINUATION","insertTextFormat":2,"kind":20,"label":"•WS_CONTINUATION","score":1.2690916061401367,"sortText":"405d8e68WS_CONTINUATION","textEdit":{"newText":"WS_CONTINUATION","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_DISCONNECT","insertText":"WS_DISCONNECT","insertTextFormat":2,"kind":20,"label":"•WS_DISCONNECT","score":1.2690916061401367,"sortText":"405d8e68WS_DISCONNECT","textEdit":{"newText":"WS_DISCONNECT","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_DISCONNECTED","insertText":"WS_DISCONNECTED","insertTextFormat":2,"kind":20,"label":"•WS_DISCONNECTED","score":1.2690916061401367,"sortText":"405d8e68WS_DISCONNECTED","textEdit":{"newText":"WS_DISCONNECTED","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_DISCONNECTING","insertText":"WS_DISCONNECTING","insertTextFormat":2,"kind":20,"label":"•WS_DISCONNECTING","score":1.2690916061401367,"sortText":"405d8e68WS_DISCONNECTING","textEdit":{"newText":"WS_DISCONNECTING","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_CONNECT","insertText":"WS_EVT_CONNECT","insertTextFormat":2,"kind":20,"label":"•WS_EVT_CONNECT","score":1.2690916061401367,"sortText":"405d8e68WS_EVT_CONNECT","textEdit":{"newText":"WS_EVT_CONNECT","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_DATA","insertText":"WS_EVT_DATA","insertTextFormat":2,"kind":20,"label":"•WS_EVT_DATA","score":1.2690916061401367,"sortText":"405d8e68WS_EVT_DATA","textEdit":{"newText":"WS_EVT_DATA","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_DISCONNECT","insertText":"WS_EVT_DISCONNECT","insertTextFormat":2,"kind":20,"label":"•WS_EVT_DISCONNECT","score":1.2690916061401367,"sortText":"405d8e68WS_EVT_DISCONNECT","textEdit":{"newText":"WS_EVT_DISCONNECT","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_ERROR","insertText":"WS_EVT_ERROR","insertTextFormat":2,"kind":20,"label":"•WS_EVT_ERROR","score":1.2690916061401367,"sortText":"405d8e68WS_EVT_ERROR","textEdit":{"newText":"WS_EVT_ERROR","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_PONG","insertText":"WS_EVT_PONG","insertTextFormat":2,"kind":20,"label":"•WS_EVT_PONG","score":1.2690916061401367,"sortText":"405d8e68WS_EVT_PONG","textEdit":{"newText":"WS_EVT_PONG","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MSG_ERROR","insertText":"WS_MSG_ERROR","insertTextFormat":2,"kind":20,"label":"•WS_MSG_ERROR","score":1.2690916061401367,"sortText":"405d8e68WS_MSG_ERROR","textEdit":{"newText":"WS_MSG_ERROR","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MSG_SENDING","insertText":"WS_MSG_SENDING","insertTextFormat":2,"kind":20,"label":"•WS_MSG_SENDING","score":1.2690916061401367,"sortText":"405d8e68WS_MSG_SENDING","textEdit":{"newText":"WS_MSG_SENDING","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MSG_SENT","insertText":"WS_MSG_SENT","insertTextFormat":2,"kind":20,"label":"•WS_MSG_SENT","score":1.2690916061401367,"sortText":"405d8e68WS_MSG_SENT","textEdit":{"newText":"WS_MSG_SENT","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_PING","insertText":"WS_PING","insertTextFormat":2,"kind":20,"label":"•WS_PING","score":1.2690916061401367,"sortText":"405d8e68WS_PING","textEdit":{"newText":"WS_PING","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_PONG","insertText":"WS_PONG","insertTextFormat":2,"kind":20,"label":"•WS_PONG","score":1.2690916061401367,"sortText":"405d8e68WS_PONG","textEdit":{"newText":"WS_PONG","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_TEXT","insertText":"WS_TEXT","insertTextFormat":2,"kind":20,"label":"•WS_TEXT","score":1.2690916061401367,"sortText":"405d8e68WS_TEXT","textEdit":{"newText":"WS_TEXT","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFi.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFi.h\"`"},"filterText":"WiFiClass","insertText":"WiFiClass","insertTextFormat":2,"kind":7,"label":"•WiFiClass","score":1.2690916061401367,"sortText":"405d8e68WiFiClass","textEdit":{"newText":"WiFiClass","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"inttypes.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"intmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"filterText":"wcstoimax","insertText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"kind":3,"label":"•wcstoimax(const wchar_t *, wchar_t **, int)","score":1.2690916061401367,"sortText":"405d8e68wcstoimax","textEdit":{"newText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"inttypes.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"uintmax_t","documentation":{"kind":"markdown","value":"From `\"inttypes.h\"`"},"filterText":"wcstoumax","insertText":"wcstoumax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"kind":3,"label":"•wcstoumax(const wchar_t *, wchar_t **, int)","score":1.2690916061401367,"sortText":"405d8e68wcstoumax","textEdit":{"newText":"wcstoumax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <cstddef>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<cstddef>`"},"filterText":"wint_t","insertText":"wint_t","insertTextFormat":2,"kind":8,"label":"•wint_t","score":1.2690916061401367,"sortText":"405d8e68wint_t","textEdit":{"newText":"wint_t","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiAP.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiAP.h\"`"},"filterText":"WiFiAPClass","insertText":"WiFiAPClass","insertTextFormat":2,"kind":7,"label":"•WiFiAPClass","score":1.1967232227325439,"sortText":"4066d1c6WiFiAPClass","textEdit":{"newText":"WiFiAPClass","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nnull mode"},"filterText":"WIFI_MODE_NULL","insertText":"WIFI_MODE_NULL","insertTextFormat":2,"kind":20,"label":"•WIFI_MODE_NULL","score":1.1775331497192383,"sortText":"40694698WIFI_MODE_NULL","textEdit":{"newText":"WIFI_MODE_NULL","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"WL_CONNECT_FAILED","insertText":"WL_CONNECT_FAILED","insertTextFormat":2,"kind":20,"label":"•WL_CONNECT_FAILED","score":1.1682635545730591,"sortText":"406a7657WL_CONNECT_FAILED","textEdit":{"newText":"WL_CONNECT_FAILED","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"WL_CONNECTED","insertText":"WL_CONNECTED","insertTextFormat":2,"kind":20,"label":"•WL_CONNECTED","score":1.1160373687744141,"sortText":"407125b0WL_CONNECTED","textEdit":{"newText":"WL_CONNECTED","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WIFI_DNS_DONE_BIT","insertText":"WIFI_DNS_DONE_BIT","insertTextFormat":2,"kind":6,"label":"•WIFI_DNS_DONE_BIT","score":1.1118042469024658,"sortText":"4071b066WIFI_DNS_DONE_BIT","textEdit":{"newText":"WIFI_DNS_DONE_BIT","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WIFI_DNS_IDLE_BIT","insertText":"WIFI_DNS_IDLE_BIT","insertTextFormat":2,"kind":6,"label":"•WIFI_DNS_IDLE_BIT","score":1.1118042469024658,"sortText":"4071b066WIFI_DNS_IDLE_BIT","textEdit":{"newText":"WIFI_DNS_IDLE_BIT","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n18.5dBm"},"filterText":"WIFI_POWER_18_5dBm","insertText":"WIFI_POWER_18_5dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_18_5dBm","score":1.1118042469024658,"sortText":"4071b066WIFI_POWER_18_5dBm","textEdit":{"newText":"WIFI_POWER_18_5dBm","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n19.5dBm"},"filterText":"WIFI_POWER_19_5dBm","insertText":"WIFI_POWER_19_5dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_19_5dBm","score":1.1118042469024658,"sortText":"4071b066WIFI_POWER_19_5dBm","textEdit":{"newText":"WIFI_POWER_19_5dBm","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n19dBm"},"filterText":"WIFI_POWER_19dBm","insertText":"WIFI_POWER_19dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_19dBm","score":1.1118042469024658,"sortText":"4071b066WIFI_POWER_19dBm","textEdit":{"newText":"WIFI_POWER_19dBm","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_power_t","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`  \n5dBm"},"filterText":"WIFI_POWER_5dBm","insertText":"WIFI_POWER_5dBm","insertTextFormat":2,"kind":20,"label":"•WIFI_POWER_5dBm","score":1.1118042469024658,"sortText":"4071b066WIFI_POWER_5dBm","textEdit":{"newText":"WIFI_POWER_5dBm","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WIFI_SCANNING_BIT","insertText":"WIFI_SCANNING_BIT","insertTextFormat":2,"kind":6,"label":"•WIFI_SCANNING_BIT","score":1.1118042469024658,"sortText":"4071b066WIFI_SCANNING_BIT","textEdit":{"newText":"WIFI_SCANNING_BIT","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WIFI_SCAN_DONE_BIT","insertText":"WIFI_SCAN_DONE_BIT","insertTextFormat":2,"kind":6,"label":"•WIFI_SCAN_DONE_BIT","score":1.1118042469024658,"sortText":"4071b066WIFI_SCAN_DONE_BIT","textEdit":{"newText":"WIFI_SCAN_DONE_BIT","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"WL_DISCONNECTED","insertText":"WL_DISCONNECTED","insertTextFormat":2,"kind":20,"label":"•WL_DISCONNECTED","score":1.1118042469024658,"sortText":"4071b066WL_DISCONNECTED","textEdit":{"newText":"WL_DISCONNECTED","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"WL_NO_SSID_AVAIL","insertText":"WL_NO_SSID_AVAIL","insertTextFormat":2,"kind":20,"label":"•WL_NO_SSID_AVAIL","score":1.1118042469024658,"sortText":"4071b066WL_NO_SSID_AVAIL","textEdit":{"newText":"WL_NO_SSID_AVAIL","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"WL_SCAN_COMPLETED","insertText":"WL_SCAN_COMPLETED","insertTextFormat":2,"kind":20,"label":"•WL_SCAN_COMPLETED","score":1.1118042469024658,"sortText":"4071b066WL_SCAN_COMPLETED","textEdit":{"newText":"WL_SCAN_COMPLETED","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiClient.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiClient.h\"`"},"filterText":"WiFiClientRxBuffer","insertText":"WiFiClientRxBuffer","insertTextFormat":2,"kind":7,"label":"•WiFiClientRxBuffer","score":1.1118042469024658,"sortText":"4071b066WiFiClientRxBuffer","textEdit":{"newText":"WiFiClientRxBuffer","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WiFiEventCb","insertText":"WiFiEventCb","insertTextFormat":2,"kind":8,"label":"•WiFiEventCb","score":1.1118042469024658,"sortText":"4071b066WiFiEventCb","textEdit":{"newText":"WiFiEventCb","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WiFiEventSysCb","insertText":"WiFiEventSysCb","insertTextFormat":2,"kind":8,"label":"•WiFiEventSysCb","score":1.1118042469024658,"sortText":"4071b066WiFiEventSysCb","textEdit":{"newText":"WiFiEventSysCb","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"wifi_event_id_t","insertText":"wifi_event_id_t","insertTextFormat":2,"kind":8,"label":"•wifi_event_id_t","score":1.1118042469024658,"sortText":"4071b066wifi_event_id_t","textEdit":{"newText":"wifi_event_id_t","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"wifi_power_t","insertText":"wifi_power_t","insertTextFormat":2,"kind":8,"label":"•wifi_power_t","score":1.1118042469024658,"sortText":"4071b066wifi_power_t","textEdit":{"newText":"wifi_power_t","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"wl_status_t","insertText":"wl_status_t","insertTextFormat":2,"kind":8,"label":"•wl_status_t","score":1.1118042469024658,"sortText":"4071b066wl_status_t","textEdit":{"newText":"wl_status_t","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Configuration data for ESP32 AP or STA.  \nThe usage of this union (for ap or sta configuration) is determined by the accompanying interface argument passed to esp_wifi_set_config() or esp_wifi_get_config()"},"filterText":"wifi_config_t","insertText":"wifi_config_t","insertTextFormat":2,"kind":8,"label":"•wifi_config_t","score":1.1076064109802246,"sortText":"407239f4wifi_config_t","textEdit":{"newText":"wifi_config_t","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Description of a WiFi AP"},"filterText":"wifi_ap_record_t","insertText":"wifi_ap_record_t","insertTextFormat":2,"kind":8,"label":"•wifi_ap_record_t","score":1.099573016166687,"sortText":"40734131wifi_ap_record_t","textEdit":{"newText":"wifi_ap_record_t","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiMulti.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiMulti.h\"`"},"filterText":"WiFiMulti","insertText":"WiFiMulti","insertTextFormat":2,"kind":7,"label":"•WiFiMulti","score":1.0538334846496582,"sortText":"40791bfcWiFiMulti","textEdit":{"newText":"WiFiMulti","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiMulti.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiMulti.h\"`"},"filterText":"WifiAPlist_t","insertText":"WifiAPlist_t","insertTextFormat":2,"kind":8,"label":"•WifiAPlist_t","score":1.0538334846496582,"sortText":"40791bfcWifiAPlist_t","textEdit":{"newText":"WifiAPlist_t","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcsftime","insertText":"wcsftime(${1:wchar_t *}, ${2:size_t}, ${3:const wchar_t *}, ${4:const struct tm *})","insertTextFormat":2,"kind":3,"label":"•wcsftime(wchar_t *, size_t, const wchar_t *, const struct tm *)","score":1.0538334846496582,"sortText":"40791bfcwcsftime","textEdit":{"newText":"wcsftime(${1:wchar_t *}, ${2:size_t}, ${3:const wchar_t *}, ${4:const struct tm *})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcslcpy","insertText":"wcslcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":"•wcslcpy(wchar_t *, const wchar_t *, size_t)","score":1.0538334846496582,"sortText":"40791bfcwcslcpy","textEdit":{"newText":"wcslcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcsnrtombs","insertText":"wcsnrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:size_t}, ${5:mbstate_t *})","insertTextFormat":2,"kind":3,"label":"•wcsnrtombs(char *, const wchar_t **, size_t, size_t, mbstate_t *)","score":1.0538334846496582,"sortText":"40791bfcwcsnrtombs","textEdit":{"newText":"wcsnrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:size_t}, ${5:mbstate_t *})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"double","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcstod","insertText":"wcstod(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"kind":3,"label":"•wcstod(const wchar_t *, wchar_t **)","score":1.0538334846496582,"sortText":"40791bfcwcstod","textEdit":{"newText":"wcstod(${1:const wchar_t *}, ${2:wchar_t **})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"float","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcstof","insertText":"wcstof(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"kind":3,"label":"•wcstof(const wchar_t *, wchar_t **)","score":1.0538334846496582,"sortText":"40791bfcwcstof","textEdit":{"newText":"wcstof(${1:const wchar_t *}, ${2:wchar_t **})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"long","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcstol","insertText":"wcstol(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"kind":3,"label":"•wcstol(const wchar_t *, wchar_t **, int)","score":1.0538334846496582,"sortText":"40791bfcwcstol","textEdit":{"newText":"wcstol(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wcwidth","insertText":"wcwidth(${1:const wchar_t})","insertTextFormat":2,"kind":3,"label":"•wcwidth(const wchar_t)","score":1.0538334846496582,"sortText":"40791bfcwcwidth","textEdit":{"newText":"wcwidth(${1:const wchar_t})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wmemchr","insertText":"wmemchr(${1:const wchar_t *}, ${2:wchar_t}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":"•wmemchr(const wchar_t *, wchar_t, size_t)","score":1.0538334846496582,"sortText":"40791bfcwmemchr","textEdit":{"newText":"wmemchr(${1:const wchar_t *}, ${2:wchar_t}, ${3:size_t})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nEmitted when device fails to connect to the AP of which the credentials were received earlier on event `WIFI_PROV_CRED_RECV`.  \nThe event data in this case is a pointer to the disconnection reason code with type `wifi_prov_sta_fail_reason_t`"},"filterText":"WIFI_PROV_CRED_FAIL","insertText":"WIFI_PROV_CRED_FAIL","insertTextFormat":2,"kind":20,"label":"•WIFI_PROV_CRED_FAIL","score":1.0063711404800415,"sortText":"407f2f3bWIFI_PROV_CRED_FAIL","textEdit":{"newText":"WIFI_PROV_CRED_FAIL","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_prov_cb_event_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \nEmitted when device successfully connects to the AP of which the credentials were received earlier on event `WIFI_PROV_CRED_RECV`"},"filterText":"WIFI_PROV_CRED_SUCCESS","insertText":"WIFI_PROV_CRED_SUCCESS","insertTextFormat":2,"kind":20,"label":"•WIFI_PROV_CRED_SUCCESS","score":1.0063711404800415,"sortText":"407f2f3bWIFI_PROV_CRED_SUCCESS","textEdit":{"newText":"WIFI_PROV_CRED_SUCCESS","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Event handler that is used by the manager while provisioning service is active"},"filterText":"wifi_prov_event_handler_t","insertText":"wifi_prov_event_handler_t","insertTextFormat":2,"kind":8,"label":"•wifi_prov_event_handler_t","score":1.0063711404800415,"sortText":"407f2f3bwifi_prov_event_handler_t","textEdit":{"newText":"wifi_prov_event_handler_t","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Get reason code in case of Wi-Fi station disconnection during provisioning  \n@param[out] reason Pointer to wifi_prov_sta_fail_reason_t variable to be filled  \n@return  \n\\- ESP_OK : Successfully retrieved Wi-Fi disconnect reason  \n\\- ESP_FAIL : Provisioning app not running"},"filterText":"wifi_prov_mgr_get_wifi_disconnect_reason","insertText":"wifi_prov_mgr_get_wifi_disconnect_reason(${1:wifi_prov_sta_fail_reason_t *reason})","insertTextFormat":2,"kind":3,"label":"•wifi_prov_mgr_get_wifi_disconnect_reason(wifi_prov_sta_fail_reason_t *reason)","score":1.0063711404800415,"sortText":"407f2f3bwifi_prov_mgr_get_wifi_disconnect_reason","textEdit":{"newText":"wifi_prov_mgr_get_wifi_disconnect_reason(${1:wifi_prov_sta_fail_reason_t *reason})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wifi_provisioning/manager.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"wifi_provisioning/manager.h\"`  \n@brief Checks if device is provisioned  \nThis checks if Wi-Fi credentials are present on the NVS  \nThe Wi-Fi credentials are assumed to be kept in the same NVS namespace as used by esp_wifi component  \nIf one were to call esp_wifi_set_config() directly instead of going through the provisioning process, this function will still yield true (i.e. device will be found to be provisioned)  \n@note Calling wifi_prov_mgr_start_provisioning() automatically resets the provision state, irrespective of what the state was prior to making the call.  \n@param[out] provisioned True if provisioned, else false  \n@return  \n\\- ESP_OK : Retrieved provision state successfully  \n\\- ESP_FAIL : Wi-Fi not initialized  \n\\- ESP_ERR_INVALID_ARG : Null argument supplied  \n\\- ESP_ERR_INVALID_STATE : Manager not initialized"},"filterText":"wifi_prov_mgr_is_provisioned","insertText":"wifi_prov_mgr_is_provisioned(${1:bool *provisioned})","insertTextFormat":2,"kind":3,"label":"•wifi_prov_mgr_is_provisioned(bool *provisioned)","score":1.0063711404800415,"sortText":"407f2f3bwifi_prov_mgr_is_provisioned","textEdit":{"newText":"wifi_prov_mgr_is_provisioned(${1:bool *provisioned})","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nWiFi station mode"},"filterText":"WIFI_MODE_STA","insertText":"WIFI_MODE_STA","insertTextFormat":2,"kind":20,"label":"•WIFI_MODE_STA","score":1.0027841329574585,"sortText":"407fa4c5WIFI_MODE_STA","textEdit":{"newText":"WIFI_MODE_STA","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_mode_t","insertText":"wifi_mode_t","insertTextFormat":2,"kind":8,"label":"•wifi_mode_t","score":1.0027841329574585,"sortText":"407fa4c5wifi_mode_t","textEdit":{"newText":"wifi_mode_t","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"filterText":"WITH_POSIX","insertText":"WITH_POSIX","insertTextFormat":2,"kind":1,"label":" WITH_POSIX","score":1,"sortText":"40800000WITH_POSIX","textEdit":{"newText":"WITH_POSIX","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_ant_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nWiFi antenna 1"},"filterText":"WIFI_ANT_ANT1","insertText":"WIFI_ANT_ANT1","insertTextFormat":2,"kind":20,"label":"•WIFI_ANT_ANT1","score":0.96751219034194946,"sortText":"4088511fWIFI_ANT_ANT1","textEdit":{"newText":"WIFI_ANT_ANT1","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_ant_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nEnable WiFi antenna 0 and 1, automatically select an antenna"},"filterText":"WIFI_ANT_MODE_AUTO","insertText":"WIFI_ANT_MODE_AUTO","insertTextFormat":2,"kind":20,"label":"•WIFI_ANT_MODE_AUTO","score":0.96751219034194946,"sortText":"4088511fWIFI_ANT_MODE_AUTO","textEdit":{"newText":"WIFI_ANT_MODE_AUTO","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_auth_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nauthenticate mode : open"},"filterText":"WIFI_AUTH_OPEN","insertText":"WIFI_AUTH_OPEN","insertTextFormat":2,"kind":20,"label":"•WIFI_AUTH_OPEN","score":0.96751219034194946,"sortText":"4088511fWIFI_AUTH_OPEN","textEdit":{"newText":"WIFI_AUTH_OPEN","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_auth_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nauthenticate mode : WPA_PSK"},"filterText":"WIFI_AUTH_WPA_PSK","insertText":"WIFI_AUTH_WPA_PSK","insertTextFormat":2,"kind":20,"label":"•WIFI_AUTH_WPA_PSK","score":0.96751219034194946,"sortText":"4088511fWIFI_AUTH_WPA_PSK","textEdit":{"newText":"WIFI_AUTH_WPA_PSK","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_cipher_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe cipher type is CCMP"},"filterText":"WIFI_CIPHER_TYPE_CCMP","insertText":"WIFI_CIPHER_TYPE_CCMP","insertTextFormat":2,"kind":20,"label":"•WIFI_CIPHER_TYPE_CCMP","score":0.96751219034194946,"sortText":"4088511fWIFI_CIPHER_TYPE_CCMP","textEdit":{"newText":"WIFI_CIPHER_TYPE_CCMP","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_cipher_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe cipher type is WEP104"},"filterText":"WIFI_CIPHER_TYPE_WEP104","insertText":"WIFI_CIPHER_TYPE_WEP104","insertTextFormat":2,"kind":20,"label":"•WIFI_CIPHER_TYPE_WEP104","score":0.96751219034194946,"sortText":"4088511fWIFI_CIPHER_TYPE_WEP104","textEdit":{"newText":"WIFI_CIPHER_TYPE_WEP104","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_cipher_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe cipher type is WEP40"},"filterText":"WIFI_CIPHER_TYPE_WEP40","insertText":"WIFI_CIPHER_TYPE_WEP40","insertTextFormat":2,"kind":20,"label":"•WIFI_CIPHER_TYPE_WEP40","score":0.96751219034194946,"sortText":"4088511fWIFI_CIPHER_TYPE_WEP40","textEdit":{"newText":"WIFI_CIPHER_TYPE_WEP40","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_ioctl_cmd_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nGet the configuration of STA's HT2040 coexist management"},"filterText":"WIFI_IOCTL_GET_STA_HT2040_COEX","insertText":"WIFI_IOCTL_GET_STA_HT2040_COEX","insertTextFormat":2,"kind":20,"label":"•WIFI_IOCTL_GET_STA_HT2040_COEX","score":0.96751219034194946,"sortText":"4088511fWIFI_IOCTL_GET_STA_HT2040_COEX","textEdit":{"newText":"WIFI_IOCTL_GET_STA_HT2040_COEX","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nWiFi soft-AP mode"},"filterText":"WIFI_MODE_AP","insertText":"WIFI_MODE_AP","insertTextFormat":2,"kind":20,"label":"•WIFI_MODE_AP","score":0.96751219034194946,"sortText":"4088511fWIFI_MODE_AP","textEdit":{"newText":"WIFI_MODE_AP","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_phy_rate_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n12 Mbps"},"filterText":"WIFI_PHY_RATE_12M","insertText":"WIFI_PHY_RATE_12M","insertTextFormat":2,"kind":20,"label":"•WIFI_PHY_RATE_12M","score":0.96751219034194946,"sortText":"4088511fWIFI_PHY_RATE_12M","textEdit":{"newText":"WIFI_PHY_RATE_12M","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_phy_rate_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n250 Kbps"},"filterText":"WIFI_PHY_RATE_LORA_250K","insertText":"WIFI_PHY_RATE_LORA_250K","insertTextFormat":2,"kind":20,"label":"•WIFI_PHY_RATE_LORA_250K","score":0.96751219034194946,"sortText":"4088511fWIFI_PHY_RATE_LORA_250K","textEdit":{"newText":"WIFI_PHY_RATE_LORA_250K","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_phy_rate_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nMCS0 with long GI, 6.5 Mbps for 20MHz, 13.5 Mbps for 40MHz"},"filterText":"WIFI_PHY_RATE_MCS0_LGI","insertText":"WIFI_PHY_RATE_MCS0_LGI","insertTextFormat":2,"kind":20,"label":"•WIFI_PHY_RATE_MCS0_LGI","score":0.96751219034194946,"sortText":"4088511fWIFI_PHY_RATE_MCS0_LGI","textEdit":{"newText":"WIFI_PHY_RATE_MCS0_LGI","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_promiscuous_pkt_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nControl frame, indicates 'buf' argument is wifi_promiscuous_pkt_t"},"filterText":"WIFI_PKT_CTRL","insertText":"WIFI_PKT_CTRL","insertTextFormat":2,"kind":20,"label":"•WIFI_PKT_CTRL","score":0.96751219034194946,"sortText":"4088511fWIFI_PKT_CTRL","textEdit":{"newText":"WIFI_PKT_CTRL","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_ps_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nMinimum modem power saving. In this mode, station wakes up to receive beacon every DTIM period"},"filterText":"WIFI_PS_MIN_MODEM","insertText":"WIFI_PS_MIN_MODEM","insertTextFormat":2,"kind":20,"label":"•WIFI_PS_MIN_MODEM","score":0.96751219034194946,"sortText":"4088511fWIFI_PS_MIN_MODEM","textEdit":{"newText":"WIFI_PS_MIN_MODEM","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_err_reason_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"WIFI_REASON_AKMP_INVALID","insertText":"WIFI_REASON_AKMP_INVALID","insertTextFormat":2,"kind":20,"label":"•WIFI_REASON_AKMP_INVALID","score":0.96751219034194946,"sortText":"4088511fWIFI_REASON_AKMP_INVALID","textEdit":{"newText":"WIFI_REASON_AKMP_INVALID","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_err_reason_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"WIFI_REASON_BEACON_TIMEOUT","insertText":"WIFI_REASON_BEACON_TIMEOUT","insertTextFormat":2,"kind":20,"label":"•WIFI_REASON_BEACON_TIMEOUT","score":0.96751219034194946,"sortText":"4088511fWIFI_REASON_BEACON_TIMEOUT","textEdit":{"newText":"WIFI_REASON_BEACON_TIMEOUT","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_err_reason_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"WIFI_REASON_DISASSOC_SUPCHAN_BAD","insertText":"WIFI_REASON_DISASSOC_SUPCHAN_BAD","insertTextFormat":2,"kind":20,"label":"•WIFI_REASON_DISASSOC_SUPCHAN_BAD","score":0.96751219034194946,"sortText":"4088511fWIFI_REASON_DISASSOC_SUPCHAN_BAD","textEdit":{"newText":"WIFI_REASON_DISASSOC_SUPCHAN_BAD","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_err_reason_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"WIFI_REASON_GROUP_CIPHER_INVALID","insertText":"WIFI_REASON_GROUP_CIPHER_INVALID","insertTextFormat":2,"kind":20,"label":"•WIFI_REASON_GROUP_CIPHER_INVALID","score":0.96751219034194946,"sortText":"4088511fWIFI_REASON_GROUP_CIPHER_INVALID","textEdit":{"newText":"WIFI_REASON_GROUP_CIPHER_INVALID","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_scan_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \npassive scan"},"filterText":"WIFI_SCAN_TYPE_PASSIVE","insertText":"WIFI_SCAN_TYPE_PASSIVE","insertTextFormat":2,"kind":20,"label":"•WIFI_SCAN_TYPE_PASSIVE","score":0.96751219034194946,"sortText":"4088511fWIFI_SCAN_TYPE_PASSIVE","textEdit":{"newText":"WIFI_SCAN_TYPE_PASSIVE","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_vendor_ie_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"WIFI_VND_IE_TYPE_ASSOC_REQ","insertText":"WIFI_VND_IE_TYPE_ASSOC_REQ","insertTextFormat":2,"kind":20,"label":"•WIFI_VND_IE_TYPE_ASSOC_REQ","score":0.96751219034194946,"sortText":"4088511fWIFI_VND_IE_TYPE_ASSOC_REQ","textEdit":{"newText":"WIFI_VND_IE_TYPE_ASSOC_REQ","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_event_legacy.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"system_event_sta_wps_fail_reason_t","documentation":{"kind":"markdown","value":"From `\"esp_event_legacy.h\"`"},"filterText":"WPS_FAIL_REASON_MAX","insertText":"WPS_FAIL_REASON_MAX","insertTextFormat":2,"kind":20,"label":"•WPS_FAIL_REASON_MAX","score":0.96751219034194946,"sortText":"4088511fWPS_FAIL_REASON_MAX","textEdit":{"newText":"WPS_FAIL_REASON_MAX","range":{"end":{"character":3,"line":4},"start":{"character":2,"line":4}}}}]}}
>>>
Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":8},"contentChanges":[{"range":{"start":{"line":4,"character":3},"end":{"line":4,"character":3}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 224

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":4},"context":{"triggerKind":3}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 3575

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":5},"start":{"character":0,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":8}}Content-Length: 31492

{"id":154,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"AsyncWebSocket *","filterText":"ws","insertText":"ws","insertTextFormat":2,"kind":6,"label":" ws","score":26.400001525878906,"sortText":"3dacccccws","textEdit":{"newText":"ws","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"detail":"void","filterText":"handleWebSocketMessage","insertText":"handleWebSocketMessage(${1:void *arg}, ${2:uint8_t *data}, ${3:size_t len})","insertTextFormat":2,"kind":2,"label":" handleWebSocketMessage(void *arg, uint8_t *data, size_t len)","score":16.25007438659668,"sortText":"3ffdffd9handleWebSocketMessage","textEdit":{"newText":"handleWebSocketMessage(${1:void *arg}, ${2:uint8_t *data}, ${3:size_t len})","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"detail":"void","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"kind":2,"label":" initWebServer()","score":14.520001411437988,"sortText":"4017ae13initWebServer","textEdit":{"newText":"initWebServer()","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"detail":"void","filterText":"initWebSocket","insertText":"initWebSocket()","insertTextFormat":2,"kind":2,"label":" initWebSocket()","score":14.520001411437988,"sortText":"4017ae13initWebSocket","textEdit":{"newText":"initWebSocket()","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <istream>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"basic_istream<_CharT, _Traits> &","documentation":{"kind":"markdown","value":"From `<istream>`  \n@brief Quick and easy way to eat whitespace  \nThis manipulator extracts whitespace characters, stopping when the next character is non-whitespace, or when the input sequence is empty.  \nIf the sequence is empty, @c eofbit is set in the stream, but not  \n@c failbit.  \nThe current locale is used to distinguish whitespace characters.  \nExample:  \n@code MyClass mc;  \nstd::cin >> std::ws >> mc;  \n@endcode will skip leading whitespace before calling operator>> on cin and your object. Note that the same effect can be achieved by creating a std::basic_istream::sentry inside your definition of operator>>."},"filterText":"ws","insertText":"std::ws(${1:basic_istream<_CharT, _Traits> &__is})","insertTextFormat":2,"kind":3,"label":"•std::ws(basic_istream<_CharT, _Traits> &__is)","score":0.87819457054138184,"sortText":"401f2ea4ws","textEdit":{"newText":"std::ws(${1:basic_istream<_CharT, _Traits> &__is})","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_BINARY","insertText":"WS_BINARY","insertTextFormat":2,"kind":20,"label":"•WS_BINARY","score":1.2690916061401367,"sortText":"4071dc9bWS_BINARY","textEdit":{"newText":"WS_BINARY","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_CONNECTED","insertText":"WS_CONNECTED","insertTextFormat":2,"kind":20,"label":"•WS_CONNECTED","score":1.2690916061401367,"sortText":"4071dc9bWS_CONNECTED","textEdit":{"newText":"WS_CONNECTED","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_CONTINUATION","insertText":"WS_CONTINUATION","insertTextFormat":2,"kind":20,"label":"•WS_CONTINUATION","score":1.2690916061401367,"sortText":"4071dc9bWS_CONTINUATION","textEdit":{"newText":"WS_CONTINUATION","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_DISCONNECT","insertText":"WS_DISCONNECT","insertTextFormat":2,"kind":20,"label":"•WS_DISCONNECT","score":1.2690916061401367,"sortText":"4071dc9bWS_DISCONNECT","textEdit":{"newText":"WS_DISCONNECT","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_DISCONNECTED","insertText":"WS_DISCONNECTED","insertTextFormat":2,"kind":20,"label":"•WS_DISCONNECTED","score":1.2690916061401367,"sortText":"4071dc9bWS_DISCONNECTED","textEdit":{"newText":"WS_DISCONNECTED","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsClientStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_DISCONNECTING","insertText":"WS_DISCONNECTING","insertTextFormat":2,"kind":20,"label":"•WS_DISCONNECTING","score":1.2690916061401367,"sortText":"4071dc9bWS_DISCONNECTING","textEdit":{"newText":"WS_DISCONNECTING","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_CONNECT","insertText":"WS_EVT_CONNECT","insertTextFormat":2,"kind":20,"label":"•WS_EVT_CONNECT","score":1.2690916061401367,"sortText":"4071dc9bWS_EVT_CONNECT","textEdit":{"newText":"WS_EVT_CONNECT","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_DATA","insertText":"WS_EVT_DATA","insertTextFormat":2,"kind":20,"label":"•WS_EVT_DATA","score":1.2690916061401367,"sortText":"4071dc9bWS_EVT_DATA","textEdit":{"newText":"WS_EVT_DATA","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_DISCONNECT","insertText":"WS_EVT_DISCONNECT","insertTextFormat":2,"kind":20,"label":"•WS_EVT_DISCONNECT","score":1.2690916061401367,"sortText":"4071dc9bWS_EVT_DISCONNECT","textEdit":{"newText":"WS_EVT_DISCONNECT","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_ERROR","insertText":"WS_EVT_ERROR","insertTextFormat":2,"kind":20,"label":"•WS_EVT_ERROR","score":1.2690916061401367,"sortText":"4071dc9bWS_EVT_ERROR","textEdit":{"newText":"WS_EVT_ERROR","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsEventType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_EVT_PONG","insertText":"WS_EVT_PONG","insertTextFormat":2,"kind":20,"label":"•WS_EVT_PONG","score":1.2690916061401367,"sortText":"4071dc9bWS_EVT_PONG","textEdit":{"newText":"WS_EVT_PONG","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MSG_ERROR","insertText":"WS_MSG_ERROR","insertTextFormat":2,"kind":20,"label":"•WS_MSG_ERROR","score":1.2690916061401367,"sortText":"4071dc9bWS_MSG_ERROR","textEdit":{"newText":"WS_MSG_ERROR","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MSG_SENDING","insertText":"WS_MSG_SENDING","insertTextFormat":2,"kind":20,"label":"•WS_MSG_SENDING","score":1.2690916061401367,"sortText":"4071dc9bWS_MSG_SENDING","textEdit":{"newText":"WS_MSG_SENDING","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsMessageStatus","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MSG_SENT","insertText":"WS_MSG_SENT","insertTextFormat":2,"kind":20,"label":"•WS_MSG_SENT","score":1.2690916061401367,"sortText":"4071dc9bWS_MSG_SENT","textEdit":{"newText":"WS_MSG_SENT","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_PING","insertText":"WS_PING","insertTextFormat":2,"kind":20,"label":"•WS_PING","score":1.2690916061401367,"sortText":"4071dc9bWS_PING","textEdit":{"newText":"WS_PING","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_PONG","insertText":"WS_PONG","insertTextFormat":2,"kind":20,"label":"•WS_PONG","score":1.2690916061401367,"sortText":"4071dc9bWS_PONG","textEdit":{"newText":"WS_PONG","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"AwsFrameType","documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_TEXT","insertText":"WS_TEXT","insertTextFormat":2,"kind":20,"label":"•WS_TEXT","score":1.2690916061401367,"sortText":"4071dc9bWS_TEXT","textEdit":{"newText":"WS_TEXT","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"wscanf","insertText":"wscanf(${1:const wchar_t *, ...})","insertTextFormat":2,"kind":3,"label":"•wscanf(const wchar_t *, ...)","score":1.0538334846496582,"sortText":"40791bfcwscanf","textEdit":{"newText":"wscanf(${1:const wchar_t *, ...})","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"filterText":"AsyncWebSocket","insertText":"AsyncWebSocket","insertTextFormat":2,"kind":7,"label":" AsyncWebSocket","score":8.1250371932983398,"sortText":"407dffd9AsyncWebSocket","textEdit":{"newText":"AsyncWebSocket","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"filterText":"AsyncWebServer","insertText":"AsyncWebServer","insertTextFormat":2,"kind":7,"label":" AsyncWebServer","score":7.2600007057189941,"sortText":"4097ae13AsyncWebServer","textEdit":{"newText":"AsyncWebServer","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"filterText":"AsyncWebSocketClient","insertText":"AsyncWebSocketClient","insertTextFormat":2,"kind":7,"label":" AsyncWebSocketClient","score":7.2600007057189941,"sortText":"4097ae13AsyncWebSocketClient","textEdit":{"newText":"AsyncWebSocketClient","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <streambuf>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<streambuf>`  \nBase class for @c wchar_t buffers."},"filterText":"wstreambuf","insertText":"std::wstreambuf","insertTextFormat":2,"kind":8,"label":"•std::wstreambuf","score":0.87819457054138184,"sortText":"409f2ea4wstreambuf","textEdit":{"newText":"std::wstreambuf","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <sstream>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<sstream>`  \nClass for @c wchar_t memory buffers."},"filterText":"wstringbuf","insertText":"std::wstringbuf","insertTextFormat":2,"kind":8,"label":"•std::wstringbuf","score":0.87819457054138184,"sortText":"409f2ea4wstringbuf","textEdit":{"newText":"std::wstringbuf","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <sstream>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<sstream>`  \nClass for @c wchar_t mixed input and output memory streams."},"filterText":"wstringstream","insertText":"std::wstringstream","insertTextFormat":2,"kind":8,"label":"•std::wstringstream","score":0.87819457054138184,"sortText":"409f2ea4wstringstream","textEdit":{"newText":"std::wstringstream","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <ios>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<ios>`  \nFile position for wchar_t streams."},"filterText":"wstreampos","insertText":"std::wstreampos","insertTextFormat":2,"kind":8,"label":"•std::wstreampos","score":0.83864259719848633,"sortText":"40a94eb8wstreampos","textEdit":{"newText":"std::wstreampos","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <string>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<string>`  \nA string of @c wchar_t"},"filterText":"wstring","insertText":"std::wstring","insertTextFormat":2,"kind":8,"label":"•std::wstring","score":0.83864259719848633,"sortText":"40a94eb8wstring","textEdit":{"newText":"std::wstring","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WIFI_SCANNING_BIT","insertText":"WIFI_SCANNING_BIT","insertTextFormat":2,"kind":6,"label":"•WIFI_SCANNING_BIT","score":1.1118041276931763,"sortText":"40aa889bWIFI_SCANNING_BIT","textEdit":{"newText":"WIFI_SCANNING_BIT","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiGeneric.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"const int","documentation":{"kind":"markdown","value":"From `\"WiFiGeneric.h\"`"},"filterText":"WIFI_SCAN_DONE_BIT","insertText":"WIFI_SCAN_DONE_BIT","insertTextFormat":2,"kind":6,"label":"•WIFI_SCAN_DONE_BIT","score":1.1118041276931763,"sortText":"40aa889bWIFI_SCAN_DONE_BIT","textEdit":{"newText":"WIFI_SCAN_DONE_BIT","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wl_status_t","documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"WL_SCAN_COMPLETED","insertText":"WL_SCAN_COMPLETED","insertTextFormat":2,"kind":20,"label":"•WL_SCAN_COMPLETED","score":1.1118041276931763,"sortText":"40aa889bWL_SCAN_COMPLETED","textEdit":{"newText":"WL_SCAN_COMPLETED","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WiFiType.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"WiFiType.h\"`"},"filterText":"wl_status_t","insertText":"wl_status_t","insertTextFormat":2,"kind":8,"label":"•wl_status_t","score":1.1118041276931763,"sortText":"40aa889bwl_status_t","textEdit":{"newText":"wl_status_t","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"detail":"[2 overloads]","filterText":"AsyncWebServer","insertText":"AsyncWebServer($0)","insertTextFormat":2,"kind":4,"label":" AsyncWebServer(…)","score":6.6000003814697266,"sortText":"40acccccAsyncWebServer","textEdit":{"newText":"AsyncWebServer($0)","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"detail":"[2 overloads]","filterText":"AsyncWebSocket","insertText":"AsyncWebSocket($0)","insertTextFormat":2,"kind":4,"label":" AsyncWebSocket(…)","score":6.6000003814697266,"sortText":"40acccccAsyncWebSocket","textEdit":{"newText":"AsyncWebSocket($0)","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"detail":"[2 overloads]","filterText":"AsyncWebSocketClient","insertText":"AsyncWebSocketClient($0)","insertTextFormat":2,"kind":4,"label":" AsyncWebSocketClient(…)","score":6.6000003814697266,"sortText":"40acccccAsyncWebSocketClient","textEdit":{"newText":"AsyncWebSocketClient($0)","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <cwchar>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<cwchar>`"},"filterText":"wscanf","insertText":"std::wscanf","insertTextFormat":2,"kind":18,"label":"•std::wscanf","score":0.79835867881774902,"sortText":"40b39ec4wscanf","textEdit":{"newText":"std::wscanf","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_scan_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nactive scan"},"filterText":"WIFI_SCAN_TYPE_ACTIVE","insertText":"WIFI_SCAN_TYPE_ACTIVE","insertTextFormat":2,"kind":20,"label":"•WIFI_SCAN_TYPE_ACTIVE","score":0.96751230955123901,"sortText":"40c63cd6WIFI_SCAN_TYPE_ACTIVE","textEdit":{"newText":"WIFI_SCAN_TYPE_ACTIVE","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_scan_type_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \npassive scan"},"filterText":"WIFI_SCAN_TYPE_PASSIVE","insertText":"WIFI_SCAN_TYPE_PASSIVE","insertTextFormat":2,"kind":20,"label":"•WIFI_SCAN_TYPE_PASSIVE","score":0.96751230955123901,"sortText":"40c63cd6WIFI_SCAN_TYPE_PASSIVE","textEdit":{"newText":"WIFI_SCAN_TYPE_PASSIVE","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_second_chan_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe channel width is HT40 and the secondary channel is above the primary channel"},"filterText":"WIFI_SECOND_CHAN_ABOVE","insertText":"WIFI_SECOND_CHAN_ABOVE","insertTextFormat":2,"kind":20,"label":"•WIFI_SECOND_CHAN_ABOVE","score":0.96751230955123901,"sortText":"40c63cd6WIFI_SECOND_CHAN_ABOVE","textEdit":{"newText":"WIFI_SECOND_CHAN_ABOVE","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_second_chan_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe channel width is HT40 and the secondary channel is below the primary channel"},"filterText":"WIFI_SECOND_CHAN_BELOW","insertText":"WIFI_SECOND_CHAN_BELOW","insertTextFormat":2,"kind":20,"label":"•WIFI_SECOND_CHAN_BELOW","score":0.96751230955123901,"sortText":"40c63cd6WIFI_SECOND_CHAN_BELOW","textEdit":{"newText":"WIFI_SECOND_CHAN_BELOW","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_second_chan_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nthe channel width is HT20"},"filterText":"WIFI_SECOND_CHAN_NONE","insertText":"WIFI_SECOND_CHAN_NONE","insertTextFormat":2,"kind":20,"label":"•WIFI_SECOND_CHAN_NONE","score":0.96751230955123901,"sortText":"40c63cd6WIFI_SECOND_CHAN_NONE","textEdit":{"newText":"WIFI_SECOND_CHAN_NONE","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_storage_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nall configuration will strore in both memory and flash"},"filterText":"WIFI_STORAGE_FLASH","insertText":"WIFI_STORAGE_FLASH","insertTextFormat":2,"kind":20,"label":"•WIFI_STORAGE_FLASH","score":0.96751230955123901,"sortText":"40c63cd6WIFI_STORAGE_FLASH","textEdit":{"newText":"WIFI_STORAGE_FLASH","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_storage_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nall configuration will only store in the memory"},"filterText":"WIFI_STORAGE_RAM","insertText":"WIFI_STORAGE_RAM","insertTextFormat":2,"kind":20,"label":"•WIFI_STORAGE_RAM","score":0.96751230955123901,"sortText":"40c63cd6WIFI_STORAGE_RAM","textEdit":{"newText":"WIFI_STORAGE_RAM","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Parameters for an SSID scan."},"filterText":"wifi_scan_config_t","insertText":"wifi_scan_config_t","insertTextFormat":2,"kind":8,"label":"•wifi_scan_config_t","score":0.96751230955123901,"sortText":"40c63cd6wifi_scan_config_t","textEdit":{"newText":"wifi_scan_config_t","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_scan_method_t","insertText":"wifi_scan_method_t","insertTextFormat":2,"kind":8,"label":"•wifi_scan_method_t","score":0.96751230955123901,"sortText":"40c63cd6wifi_scan_method_t","textEdit":{"newText":"wifi_scan_method_t","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_scan_threshold_t","insertText":"wifi_scan_threshold_t","insertTextFormat":2,"kind":8,"label":"•wifi_scan_threshold_t","score":0.96751230955123901,"sortText":"40c63cd6wifi_scan_threshold_t","textEdit":{"newText":"wifi_scan_threshold_t","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Aggregate of active & passive scan time per channel"},"filterText":"wifi_scan_time_t","insertText":"wifi_scan_time_t","insertTextFormat":2,"kind":8,"label":"•wifi_scan_time_t","score":0.96751230955123901,"sortText":"40c63cd6wifi_scan_time_t","textEdit":{"newText":"wifi_scan_time_t","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_scan_type_t","insertText":"wifi_scan_type_t","insertTextFormat":2,"kind":8,"label":"•wifi_scan_type_t","score":0.96751230955123901,"sortText":"40c63cd6wifi_scan_type_t","textEdit":{"newText":"wifi_scan_type_t","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_second_chan_t","insertText":"wifi_second_chan_t","insertTextFormat":2,"kind":8,"label":"•wifi_second_chan_t","score":0.96751230955123901,"sortText":"40c63cd6wifi_second_chan_t","textEdit":{"newText":"wifi_second_chan_t","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_sort_method_t","insertText":"wifi_sort_method_t","insertTextFormat":2,"kind":8,"label":"•wifi_sort_method_t","score":0.96751230955123901,"sortText":"40c63cd6wifi_sort_method_t","textEdit":{"newText":"wifi_sort_method_t","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief STA configuration settings for the ESP32"},"filterText":"wifi_sta_config_t","insertText":"wifi_sta_config_t","insertTextFormat":2,"kind":8,"label":"•wifi_sta_config_t","score":0.96751230955123901,"sortText":"40c63cd6wifi_sta_config_t","textEdit":{"newText":"wifi_sta_config_t","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief Description of STA associated with AP"},"filterText":"wifi_sta_info_t","insertText":"wifi_sta_info_t","insertTextFormat":2,"kind":8,"label":"•wifi_sta_info_t","score":0.96751230955123901,"sortText":"40c63cd6wifi_sta_info_t","textEdit":{"newText":"wifi_sta_info_t","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \n@brief List of stations associated with the ESP32 Soft-AP"},"filterText":"wifi_sta_list_t","insertText":"wifi_sta_list_t","insertTextFormat":2,"kind":8,"label":"•wifi_sta_list_t","score":0.96751230955123901,"sortText":"40c63cd6wifi_sta_list_t","textEdit":{"newText":"wifi_sta_list_t","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`"},"filterText":"wifi_storage_t","insertText":"wifi_storage_t","insertTextFormat":2,"kind":8,"label":"•wifi_storage_t","score":0.96751230955123901,"sortText":"40c63cd6wifi_storage_t","textEdit":{"newText":"wifi_storage_t","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"rom/uart.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"RcvMsgState","documentation":{"kind":"markdown","value":"From `\"rom/uart.h\"`"},"filterText":"WAIT_SYNC_FRM","insertText":"WAIT_SYNC_FRM","insertTextFormat":2,"kind":20,"label":"•WAIT_SYNC_FRM","score":0.93569725751876831,"sortText":"40cc589cWAIT_SYNC_FRM","textEdit":{"newText":"WAIT_SYNC_FRM","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"AsyncWebSocket.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"AsyncWebSocket.h\"`"},"filterText":"WS_MAX_QUEUED_MESSAGES","insertText":"WS_MAX_QUEUED_MESSAGES","insertTextFormat":2,"kind":1,"label":"•WS_MAX_QUEUED_MESSAGES","score":0.57685983180999756,"sortText":"40fec88dWS_MAX_QUEUED_MESSAGES","textEdit":{"newText":"WS_MAX_QUEUED_MESSAGES","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"soc/cpu.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"soc/cpu.h\"`"},"filterText":"WSR","insertText":"WSR(${1:reg}, ${2:newval})","insertTextFormat":2,"kind":1,"label":"•WSR(reg, newval)","score":0.47901520133018494,"sortText":"412966b4WSR","textEdit":{"newText":"WSR(${1:reg}, ${2:newval})","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}}}}]}}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"context":{"diagnostics":[]}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":155,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"context":{"diagnostics":[]}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":156,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":9},"contentChanges":[{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 269

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":10},"contentChanges":[{"range":{"start":{"line":4,"character":5},"end":{"line":4,"character":5}},"text":"="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3575

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":5},"start":{"character":0,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":9}}Content-Length: 3545

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":5},"start":{"character":0,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":10}}
>>>
Content-Length: 269

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":11},"contentChanges":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":6}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3545

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":5},"start":{"character":0,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":11}}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":45}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"id":157,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `server`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *server\n```"},"range":{"end":{"character":51,"line":2},"start":{"character":45,"line":2}}}}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":45}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":158,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":51,"line":2},"start":{"character":45,"line":2}}}]}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":45}},"context":{"diagnostics":[]}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":159,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":45}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"id":160,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `server`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *server\n```"},"range":{"end":{"character":51,"line":2},"start":{"character":45,"line":2}}}}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":46}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"id":161,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `server`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *server\n```"},"range":{"end":{"character":51,"line":2},"start":{"character":45,"line":2}}}}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":12},"contentChanges":[{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":45}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3545

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":5},"start":{"character":0,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":12}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":46},"end":{"line":2,"character":46}},"context":{"diagnostics":[]}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":162,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":46},"end":{"line":2,"character":46}},"context":{"diagnostics":[]}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":163,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":68}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":164,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":69}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":165,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":69}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":166,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":70}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":167,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":72,"line":2},"start":{"character":70,"line":2}}}]}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":13},"contentChanges":[{"range":{"start":{"line":2,"character":70},"end":{"line":2,"character":70}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3725

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":5},"start":{"character":0,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":13}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":71},"end":{"line":2,"character":71}},"context":{"diagnostics":[]}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":168,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 269

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":14},"contentChanges":[{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":7}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 224

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":8},"context":{"triggerKind":1}},"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 52807

{"id":169,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"detail":"State *","filterText":"istate","insertText":"istate","insertTextFormat":2,"kind":6,"label":" istate","score":44.318382263183594,"sortText":"3dceb9faistate","textEdit":{"newText":"istate","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"detail":"AsyncWebServer *","filterText":"iserver","insertText":"iserver","insertTextFormat":2,"kind":6,"label":" iserver","score":39.600002288818359,"sortText":"3de19999iserver","textEdit":{"newText":"iserver","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"detail":"AsyncWebSocket *","filterText":"iws","insertText":"iws","insertTextFormat":2,"kind":6,"label":" iws","score":26.400001525878906,"sortText":"3e2ccccciws","textEdit":{"newText":"iws","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"detail":"void","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"kind":2,"label":" initWebServer()","score":14.520001411437988,"sortText":"3e97ae13initWebServer","textEdit":{"newText":"initWebServer()","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"detail":"void","filterText":"initWebSocket","insertText":"initWebSocket()","insertTextFormat":2,"kind":2,"label":" initWebSocket()","score":14.520001411437988,"sortText":"3e97ae13initWebSocket","textEdit":{"newText":"initWebSocket()","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"filterText":"int","insertText":"int","insertTextFormat":2,"kind":14,"label":" int","score":8,"sortText":"3f000000int","textEdit":{"newText":"int","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"detail":"const IPAddress","filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"kind":6,"label":" INADDR_NONE","score":7.2600007057189941,"sortText":"3f17ae13INADDR_NONE","textEdit":{"newText":"INADDR_NONE","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"IPAddress.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":2,"kind":7,"label":"•IPAddress","score":7.0663089752197266,"sortText":"3f1de0ccIPAddress","textEdit":{"newText":"IPAddress","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"detail":"[5 overloads]","filterText":"IPAddress","insertText":"IPAddress($0)","insertTextFormat":2,"kind":4,"label":" IPAddress(…)","score":4.4000000953674316,"sortText":"3f733333IPAddress","textEdit":{"newText":"IPAddress($0)","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"kind":8,"label":"•int8_t","score":1.8273557424545288,"sortText":"40161935int8_t","textEdit":{"newText":"int8_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"detail":"void","filterText":"initSDCard","insertText":"initSDCard()","insertTextFormat":2,"kind":3,"label":" initSDCard()","score":1.6613177061080933,"sortText":"402b59f1initSDCard","textEdit":{"newText":"initSDCard()","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2c_t","insertText":"i2c_t","insertTextFormat":2,"kind":8,"label":"•i2c_t","score":1.4328430891036987,"sortText":"40489899i2c_t","textEdit":{"newText":"i2c_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"kind":8,"label":"•int32_t","score":1.4073807001113892,"sortText":"404bdaf3int32_t","textEdit":{"newText":"int32_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"IPv6Address.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"IPv6Address.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"filterText":"IPv6Address","insertText":"IPv6Address","insertTextFormat":2,"kind":7,"label":"•IPv6Address","score":1.3970462083816528,"sortText":"404d2d97IPv6Address","textEdit":{"newText":"IPv6Address","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`  \nExternal Wire.h equivalent error Codes"},"filterText":"i2c_err_t","insertText":"i2c_err_t","insertTextFormat":2,"kind":8,"label":"•i2c_err_t","score":1.2993969917297363,"sortText":"4059ad5ci2c_err_t","textEdit":{"newText":"i2c_err_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"kind":8,"label":"•int16_t","score":1.2690916061401367,"sortText":"405d8e68int16_t","textEdit":{"newText":"int16_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"kind":8,"label":"•int64_t","score":1.2690916061401367,"sortText":"405d8e68int64_t","textEdit":{"newText":"int64_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"kind":8,"label":"•int_fast16_t","score":1.2690916061401367,"sortText":"405d8e68int_fast16_t","textEdit":{"newText":"int_fast16_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"kind":8,"label":"•int_fast32_t","score":1.2690916061401367,"sortText":"405d8e68int_fast32_t","textEdit":{"newText":"int_fast32_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"kind":8,"label":"•int_fast64_t","score":1.2690916061401367,"sortText":"405d8e68int_fast64_t","textEdit":{"newText":"int_fast64_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"kind":8,"label":"•int_fast8_t","score":1.2690916061401367,"sortText":"405d8e68int_fast8_t","textEdit":{"newText":"int_fast8_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"kind":8,"label":"•int_least32_t","score":1.2690916061401367,"sortText":"405d8e68int_least32_t","textEdit":{"newText":"int_least32_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":2,"kind":8,"label":"•int_least64_t","score":1.2690916061401367,"sortText":"405d8e68int_least64_t","textEdit":{"newText":"int_least64_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":2,"kind":8,"label":"•int_least8_t","score":1.2690916061401367,"sortText":"405d8e68int_least8_t","textEdit":{"newText":"int_least8_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"kind":8,"label":"•intmax_t","score":1.2690916061401367,"sortText":"405d8e68intmax_t","textEdit":{"newText":"intmax_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"kind":8,"label":"•intptr_t","score":1.2690916061401367,"sortText":"405d8e68intptr_t","textEdit":{"newText":"intptr_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isHexadecimalDigit(int c)","score":1.2690916061401367,"sortText":"405d8e68isHexadecimalDigit","textEdit":{"newText":"isHexadecimalDigit(${1:int c})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"isLowerCase","insertText":"isLowerCase(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isLowerCase(int c)","score":1.2690916061401367,"sortText":"405d8e68isLowerCase","textEdit":{"newText":"isLowerCase(${1:int c})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"I2C_ERROR_OK","insertText":"I2C_ERROR_OK","insertTextFormat":2,"kind":20,"label":"•I2C_ERROR_OK","score":1.2583444118499756,"sortText":"405eee92I2C_ERROR_OK","textEdit":{"newText":"I2C_ERROR_OK","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"I2C_ERROR_DEV","insertText":"I2C_ERROR_DEV","insertTextFormat":2,"kind":20,"label":"•I2C_ERROR_DEV","score":1.2426646947860718,"sortText":"4060f05dI2C_ERROR_DEV","textEdit":{"newText":"I2C_ERROR_DEV","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"I2C_ERROR_BUSY","insertText":"I2C_ERROR_BUSY","insertTextFormat":2,"kind":20,"label":"•I2C_ERROR_BUSY","score":1.1826096773147583,"sortText":"4068a03fI2C_ERROR_BUSY","textEdit":{"newText":"I2C_ERROR_BUSY","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"I2C_ERROR_MEMORY","insertText":"I2C_ERROR_MEMORY","insertTextFormat":2,"kind":20,"label":"•I2C_ERROR_MEMORY","score":1.1826096773147583,"sortText":"4068a03fI2C_ERROR_MEMORY","textEdit":{"newText":"I2C_ERROR_MEMORY","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"FunctionalInterrupt.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"FunctionalInterrupt.h\"`"},"filterText":"InterruptArgStructure","insertText":"InterruptArgStructure","insertTextFormat":2,"kind":22,"label":"•InterruptArgStructure","score":1.1826096773147583,"sortText":"4068a03fInterruptArgStructure","textEdit":{"newText":"InterruptArgStructure","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`  \nFunctions below should be used only if well understood Might be deprecated and removed in future"},"filterText":"i2cAttachSCL","insertText":"i2cAttachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})","insertTextFormat":2,"kind":3,"label":"•i2cAttachSCL(i2c_t *i2c, int8_t scl)","score":1.1826096773147583,"sortText":"4068a03fi2cAttachSCL","textEdit":{"newText":"i2cAttachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cDetachSCL","insertText":"i2cDetachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})","insertTextFormat":2,"kind":3,"label":"•i2cDetachSCL(i2c_t *i2c, int8_t scl)","score":1.1826096773147583,"sortText":"4068a03fi2cDetachSCL","textEdit":{"newText":"i2cDetachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cDetachSDA","insertText":"i2cDetachSDA(${1:i2c_t *i2c}, ${2:int8_t sda})","insertTextFormat":2,"kind":3,"label":"•i2cDetachSDA(i2c_t *i2c, int8_t sda)","score":1.1826096773147583,"sortText":"4068a03fi2cDetachSDA","textEdit":{"newText":"i2cDetachSDA(${1:i2c_t *i2c}, ${2:int8_t sda})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cFlush","insertText":"i2cFlush(${1:i2c_t *i2c})","insertTextFormat":2,"kind":3,"label":"•i2cFlush(i2c_t *i2c)","score":1.1826096773147583,"sortText":"4068a03fi2cFlush","textEdit":{"newText":"i2cFlush(${1:i2c_t *i2c})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cGetFrequency","insertText":"i2cGetFrequency(${1:i2c_t *i2c})","insertTextFormat":2,"kind":3,"label":"•i2cGetFrequency(i2c_t *i2c)","score":1.1826096773147583,"sortText":"4068a03fi2cGetFrequency","textEdit":{"newText":"i2cGetFrequency(${1:i2c_t *i2c})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_t *","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cInit","insertText":"i2cInit(${1:uint8_t i2c_num}, ${2:int8_t sda}, ${3:int8_t scl}, ${4:uint32_t clk_speed})","insertTextFormat":2,"kind":3,"label":"•i2cInit(uint8_t i2c_num, int8_t sda, int8_t scl, uint32_t clk_speed)","score":1.1826096773147583,"sortText":"4068a03fi2cInit","textEdit":{"newText":"i2cInit(${1:uint8_t i2c_num}, ${2:int8_t sda}, ${3:int8_t scl}, ${4:uint32_t clk_speed})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`  \nStickbreakers ISR Support"},"filterText":"i2cProcQueue","insertText":"i2cProcQueue(${1:i2c_t *i2c}, ${2:uint32_t *readCount}, ${3:uint16_t timeOutMillis})","insertTextFormat":2,"kind":3,"label":"•i2cProcQueue(i2c_t *i2c, uint32_t *readCount, uint16_t timeOutMillis)","score":1.1826096773147583,"sortText":"4068a03fi2cProcQueue","textEdit":{"newText":"i2cProcQueue(${1:i2c_t *i2c}, ${2:uint32_t *readCount}, ${3:uint16_t timeOutMillis})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cRead","insertText":"i2cRead(${1:i2c_t *i2c}, ${2:uint16_t address}, ${3:uint8_t *buff}, ${4:uint16_t size}, ${5:bool sendStop}, ${6:uint16_t timeOutMillis}, ${7:uint32_t *readCount})","insertTextFormat":2,"kind":3,"label":"•i2cRead(i2c_t *i2c, uint16_t address, uint8_t *buff, uint16_t size, bool sendStop, uint16_t timeOutMillis, uint32_t *readCount)","score":1.1826096773147583,"sortText":"4068a03fi2cRead","textEdit":{"newText":"i2cRead(${1:i2c_t *i2c}, ${2:uint16_t address}, ${3:uint8_t *buff}, ${4:uint16_t size}, ${5:bool sendStop}, ${6:uint16_t timeOutMillis}, ${7:uint32_t *readCount})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cSetFrequency","insertText":"i2cSetFrequency(${1:i2c_t *i2c}, ${2:uint32_t clk_speed})","insertTextFormat":2,"kind":3,"label":"•i2cSetFrequency(i2c_t *i2c, uint32_t clk_speed)","score":1.1826096773147583,"sortText":"4068a03fi2cSetFrequency","textEdit":{"newText":"i2cSetFrequency(${1:i2c_t *i2c}, ${2:uint32_t clk_speed})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"detail":"void","filterText":"init","insertText":"init()","insertTextFormat":2,"kind":3,"label":" init()","score":1.1826096773147583,"sortText":"4068a03finit","textEdit":{"newText":"init()","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"detail":"void","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"kind":3,"label":" initVariant()","score":1.1826096773147583,"sortText":"4068a03finitVariant","textEdit":{"newText":"initVariant()","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"math.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"filterText":"ilogb","insertText":"ilogb(${1:double})","insertTextFormat":2,"kind":3,"label":"•ilogb(double)","score":1.1118042469024658,"sortText":"4071b066ilogb","textEdit":{"newText":"ilogb(${1:double})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"math.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"filterText":"ilogbf","insertText":"ilogbf(${1:float})","insertTextFormat":2,"kind":3,"label":"•ilogbf(float)","score":1.1118042469024658,"sortText":"4071b066ilogbf","textEdit":{"newText":"ilogbf(${1:float})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"math.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"filterText":"ilogbl","insertText":"ilogbl(${1:long double})","insertTextFormat":2,"kind":3,"label":"•ilogbl(long double)","score":1.1118042469024658,"sortText":"4071b066ilogbl","textEdit":{"newText":"ilogbl(${1:long double})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"math.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`  \nNon ANSI double precision functions."},"filterText":"infinity","insertText":"infinity()","insertTextFormat":2,"kind":3,"label":"•infinity()","score":1.1118042469024658,"sortText":"4071b066infinity","textEdit":{"newText":"infinity()","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <sys/types.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<sys/types.h>`"},"filterText":"ino_t","insertText":"ino_t","insertTextFormat":2,"kind":8,"label":"•ino_t","score":1.1118042469024658,"sortText":"4071b066ino_t","textEdit":{"newText":"ino_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isascii(int __c)","score":1.1118042469024658,"sortText":"4071b066isascii","textEdit":{"newText":"isascii(${1:int __c})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isdigit(int __c)","score":1.1118042469024658,"sortText":"4071b066isdigit","textEdit":{"newText":"isdigit(${1:int __c})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isupper(int __c)","score":1.1118042469024658,"sortText":"4071b066isupper","textEdit":{"newText":"isupper(${1:int __c})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <sys/types.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<sys/types.h>`"},"filterText":"itimerspec","insertText":"itimerspec","insertTextFormat":2,"kind":22,"label":"•itimerspec","score":1.1118042469024658,"sortText":"4071b066itimerspec","textEdit":{"newText":"itimerspec","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"ilogb","insertText":"std::ilogb(${1:long double __x})","insertTextFormat":2,"kind":3,"label":"•std::ilogb(long double __x)","score":1.0575764179229736,"sortText":"4078a156ilogb","textEdit":{"newText":"std::ilogb(${1:long double __x})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <functional>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<functional>`  \n@brief Determines if the given type \\_Tp is a function object should be treated as a subexpression when evaluating calls to function objects returned by bind(). [TR1 3.6.1]  \n@ingroup binders"},"filterText":"is_bind_expression","insertText":"std::is_bind_expression<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_bind_expression<typename _Tp>","score":1.0575764179229736,"sortText":"4078a156is_bind_expression","textEdit":{"newText":"std::is_bind_expression<${1:typename _Tp}>","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <functional>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<functional>`  \n@brief Determines if the given type \\_Tp is a placeholder in a bind() expression and, if so, which placeholder it is. [TR1 3.6.2]  \n@ingroup binders"},"filterText":"is_placeholder","insertText":"std::is_placeholder<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_placeholder<typename _Tp>","score":1.0575764179229736,"sortText":"4078a156is_placeholder","textEdit":{"newText":"std::is_placeholder<${1:typename _Tp}>","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"bool","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"isgreater","insertText":"std::isgreater(${1:double __x}, ${2:double __y})","insertTextFormat":2,"kind":3,"label":"•std::isgreater(double __x, double __y)","score":1.0575764179229736,"sortText":"4078a156isgreater","textEdit":{"newText":"std::isgreater(${1:double __x}, ${2:double __y})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"typename __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value && __is_arithmetic<_Up>::__value), bool>::__type","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"isless","insertText":"std::isless(${1:_Tp __x}, ${2:_Up __y})","insertTextFormat":2,"kind":3,"label":"•std::isless(_Tp __x, _Up __y)","score":1.0575764179229736,"sortText":"4078a156isless","textEdit":{"newText":"std::isless(${1:_Tp __x}, ${2:_Up __y})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"bool","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"isnormal","insertText":"std::isnormal(${1:double __x})","insertTextFormat":2,"kind":3,"label":"•std::isnormal(double __x)","score":1.0575764179229736,"sortText":"4078a156isnormal","textEdit":{"newText":"std::isnormal(${1:double __x})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"soc/i2c_struct.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"soc/i2c_struct.h\"`"},"filterText":"i2c_dev_t","insertText":"i2c_dev_t","insertTextFormat":2,"kind":8,"label":"•i2c_dev_t","score":1.0538334846496582,"sortText":"40791bfci2c_dev_t","textEdit":{"newText":"i2c_dev_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"filterText":"iswblank","insertText":"iswblank(${1:wint_t})","insertTextFormat":2,"kind":3,"label":"•iswblank(wint_t)","score":1.0538334846496582,"sortText":"40791bfciswblank","textEdit":{"newText":"iswblank(${1:wint_t})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"filterText":"iswdigit","insertText":"iswdigit(${1:wint_t})","insertTextFormat":2,"kind":3,"label":"•iswdigit(wint_t)","score":1.0538334846496582,"sortText":"40791bfciswdigit","textEdit":{"newText":"iswdigit(${1:wint_t})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"wctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"filterText":"iswspace","insertText":"iswspace(${1:wint_t})","insertTextFormat":2,"kind":3,"label":"•iswspace(wint_t)","score":1.0538334846496582,"sortText":"40791bfciswspace","textEdit":{"newText":"iswspace(${1:wint_t})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \n@ingroup ipaddr A union struct for both IP version's addresses.  \nATTENTION: watch out for its size when adding IPv6 address scope!"},"filterText":"ip_addr_t","insertText":"ip_addr_t","insertTextFormat":2,"kind":8,"label":"•ip_addr_t","score":1.0294719934463501,"sortText":"407c3a43ip_addr_t","textEdit":{"newText":"ip_addr_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"kind":1,"label":" INADDR_NONE","score":1,"sortText":"40800000INADDR_NONE","textEdit":{"newText":"INADDR_NONE","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"filterText":"IPADDR_NONE","insertText":"IPADDR_NONE","insertTextFormat":2,"kind":1,"label":" IPADDR_NONE","score":1,"sortText":"40800000IPADDR_NONE","textEdit":{"newText":"IPADDR_NONE","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"lwip_ip_addr_type","documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \nIPv4"},"filterText":"IPADDR_TYPE_V4","insertText":"IPADDR_TYPE_V4","insertTextFormat":2,"kind":20,"label":"•IPADDR_TYPE_V4","score":0.96751219034194946,"sortText":"4088511fIPADDR_TYPE_V4","textEdit":{"newText":"IPADDR_TYPE_V4","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"lwip_ip_addr_type","documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \nIPv6"},"filterText":"IPADDR_TYPE_V6","insertText":"IPADDR_TYPE_V6","insertTextFormat":2,"kind":20,"label":"•IPADDR_TYPE_V6","score":0.96751219034194946,"sortText":"4088511fIPADDR_TYPE_V6","textEdit":{"newText":"IPADDR_TYPE_V6","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/icmp.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"lwip/icmp.h\"`"},"filterText":"icmp_input","insertText":"icmp_input(${1:struct pbuf *p}, ${2:struct netif *inp})","insertTextFormat":2,"kind":3,"label":"•icmp_input(struct pbuf *p, struct netif *inp)","score":0.96751219034194946,"sortText":"4088511ficmp_input","textEdit":{"newText":"icmp_input(${1:struct pbuf *p}, ${2:struct netif *inp})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/inet.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/inet.h\"`"},"filterText":"in6_addr","insertText":"in6_addr","insertTextFormat":2,"kind":22,"label":"•in6_addr","score":0.96751219034194946,"sortText":"4088511fin6_addr","textEdit":{"newText":"in6_addr","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/inet.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/inet.h\"`"},"filterText":"in_addr_t","insertText":"in_addr_t","insertTextFormat":2,"kind":8,"label":"•in_addr_t","score":0.96751219034194946,"sortText":"4088511fin_addr_t","textEdit":{"newText":"in_addr_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp_intr_alloc.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_intr_alloc.h\"`"},"filterText":"intr_handle_t","insertText":"intr_handle_t","insertTextFormat":2,"kind":8,"label":"•intr_handle_t","score":0.96751219034194946,"sortText":"4088511fintr_handle_t","textEdit":{"newText":"intr_handle_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip4_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/ip4_addr.h\"`"},"filterText":"ip4_addr2","insertText":"ip4_addr2","insertTextFormat":2,"kind":22,"label":"•ip4_addr2","score":0.96751219034194946,"sortText":"4088511fip4_addr2","textEdit":{"newText":"ip4_addr2","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip4.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"err_t","documentation":{"kind":"markdown","value":"From `\"lwip/ip4.h\"`"},"filterText":"ip4_input","insertText":"ip4_input(${1:struct pbuf *p}, ${2:struct netif *inp})","insertTextFormat":2,"kind":3,"label":"•ip4_input(struct pbuf *p, struct netif *inp)","score":0.96751219034194946,"sortText":"4088511fip4_input","textEdit":{"newText":"ip4_input(${1:struct pbuf *p}, ${2:struct netif *inp})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip4_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"lwip/ip4_addr.h\"`"},"filterText":"ip4addr_ntoa_r","insertText":"ip4addr_ntoa_r(${1:const ip4_addr_t *addr}, ${2:char *buf}, ${3:int buflen})","insertTextFormat":2,"kind":3,"label":"•ip4addr_ntoa_r(const ip4_addr_t *addr, char *buf, int buflen)","score":0.96751219034194946,"sortText":"4088511fip4addr_ntoa_r","textEdit":{"newText":"ip4addr_ntoa_r(${1:const ip4_addr_t *addr}, ${2:char *buf}, ${3:int buflen})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip6_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/ip6_addr.h\"`  \nIPv6 address"},"filterText":"ip6_addr_t","insertText":"ip6_addr_t","insertTextFormat":2,"kind":8,"label":"•ip6_addr_t","score":0.96751219034194946,"sortText":"4088511fip6_addr_t","textEdit":{"newText":"ip6_addr_t","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"const ip_addr_t *","documentation":{"kind":"markdown","value":"From `\"lwip/ip6.h\"`"},"filterText":"ip6_select_source_address","insertText":"ip6_select_source_address(${1:struct netif *netif}, ${2:const ip6_addr_t *dest})","insertTextFormat":2,"kind":3,"label":"•ip6_select_source_address(struct netif *netif, const ip6_addr_t *dest)","score":0.96751219034194946,"sortText":"4088511fip6_select_source_address","textEdit":{"newText":"ip6_select_source_address(${1:struct netif *netif}, ${2:const ip6_addr_t *dest})","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`"},"filterText":"ip_addr","insertText":"ip_addr","insertTextFormat":2,"kind":22,"label":"•ip_addr","score":0.96751219034194946,"sortText":"4088511fip_addr","textEdit":{"newText":"ip_addr","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/ip.h\"`  \nGlobal variables of this module, kept in a struct for efficient access using base+index."},"filterText":"ip_globals","insertText":"ip_globals","insertTextFormat":2,"kind":22,"label":"•ip_globals","score":0.96751219034194946,"sortText":"4088511fip_globals","textEdit":{"newText":"ip_globals","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"icmp6_dur_code","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nCommunication with destination administratively prohibited"},"filterText":"ICMP6_DUR_PROHIBITED","insertText":"ICMP6_DUR_PROHIBITED","insertTextFormat":2,"kind":20,"label":"•ICMP6_DUR_PROHIBITED","score":0.93569719791412354,"sortText":"40907626ICMP6_DUR_PROHIBITED","textEdit":{"newText":"ICMP6_DUR_PROHIBITED","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"icmp6_pp_code","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nErroneous header field encountered"},"filterText":"ICMP6_PP_FIELD","insertText":"ICMP6_PP_FIELD","insertTextFormat":2,"kind":20,"label":"•ICMP6_PP_FIELD","score":0.93569719791412354,"sortText":"40907626ICMP6_PP_FIELD","textEdit":{"newText":"ICMP6_PP_FIELD","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nDestination unreachable"},"filterText":"ICMP6_TYPE_DUR","insertText":"ICMP6_TYPE_DUR","insertTextFormat":2,"kind":20,"label":"•ICMP6_TYPE_DUR","score":0.93569719791412354,"sortText":"40907626ICMP6_TYPE_DUR","textEdit":{"newText":"ICMP6_TYPE_DUR","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nEcho request"},"filterText":"ICMP6_TYPE_EREQ","insertText":"ICMP6_TYPE_EREQ","insertTextFormat":2,"kind":20,"label":"•ICMP6_TYPE_EREQ","score":0.93569719791412354,"sortText":"40907626ICMP6_TYPE_EREQ","textEdit":{"newText":"ICMP6_TYPE_EREQ","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nNeighbor advertisement"},"filterText":"ICMP6_TYPE_NA","insertText":"ICMP6_TYPE_NA","insertTextFormat":2,"kind":20,"label":"•ICMP6_TYPE_NA","score":0.93569719791412354,"sortText":"40907626ICMP6_TYPE_NA","textEdit":{"newText":"ICMP6_TYPE_NA","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nPrivate experimentation"},"filterText":"ICMP6_TYPE_PE3","insertText":"ICMP6_TYPE_PE3","insertTextFormat":2,"kind":20,"label":"•ICMP6_TYPE_PE3","score":0.93569719791412354,"sortText":"40907626ICMP6_TYPE_PE3","textEdit":{"newText":"ICMP6_TYPE_PE3","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nICMP parameter code"},"filterText":"icmp6_pp_code","insertText":"icmp6_pp_code","insertTextFormat":2,"kind":13,"label":"•icmp6_pp_code","score":0.93569719791412354,"sortText":"40907626icmp6_pp_code","textEdit":{"newText":"icmp6_pp_code","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/ip6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/prot/ip6.h\"`"},"filterText":"ip6_addr_packed","insertText":"ip6_addr_packed","insertTextFormat":2,"kind":22,"label":"•ip6_addr_packed","score":0.93569719791412354,"sortText":"40907626ip6_addr_packed","textEdit":{"newText":"ip6_addr_packed","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/ip6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/prot/ip6.h\"`"},"filterText":"ip6_frag_hdr","insertText":"ip6_frag_hdr","insertTextFormat":2,"kind":22,"label":"•ip6_frag_hdr","score":0.93569719791412354,"sortText":"40907626ip6_frag_hdr","textEdit":{"newText":"ip6_frag_hdr","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/ip4.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/prot/ip4.h\"`  \nThe IPv4 header"},"filterText":"ip_hdr","insertText":"ip_hdr","insertTextFormat":2,"kind":22,"label":"•ip_hdr","score":0.93569719791412354,"sortText":"40907626ip_hdr","textEdit":{"newText":"ip_hdr","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_assignable"},"filterText":"is_assignable","insertText":"std::is_assignable<${1:typename _Tp}, ${2:typename _Up}>","insertTextFormat":2,"kind":22,"label":"•std::is_assignable<typename _Tp, typename _Up>","score":0.92650353908538818,"sortText":"4092d0aais_assignable","textEdit":{"newText":"std::is_assignable<${1:typename _Tp}, ${2:typename _Up}>","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_convertible"},"filterText":"is_convertible","insertText":"std::is_convertible<${1:typename _From}, ${2:typename _To}>","insertTextFormat":2,"kind":22,"label":"•std::is_convertible<typename _From, typename _To>","score":0.92650353908538818,"sortText":"4092d0aais_convertible","textEdit":{"newText":"std::is_convertible<${1:typename _From}, ${2:typename _To}>","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_literal_type"},"filterText":"is_literal_type","insertText":"std::is_literal_type<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_literal_type<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_literal_type","textEdit":{"newText":"std::is_literal_type<${1:typename _Tp}>","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_polymorphic"},"filterText":"is_polymorphic","insertText":"std::is_polymorphic<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_polymorphic<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_polymorphic","textEdit":{"newText":"std::is_polymorphic<${1:typename _Tp}>","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_reference"},"filterText":"is_reference","insertText":"std::is_reference<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_reference<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_reference","textEdit":{"newText":"std::is_reference<${1:typename _Tp}>","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_assignable"},"filterText":"is_trivially_assignable","insertText":"std::is_trivially_assignable<${1:typename _Tp}, ${2:typename _Up}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_assignable<typename _Tp, typename _Up>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_assignable","textEdit":{"newText":"std::is_trivially_assignable<${1:typename _Tp}, ${2:typename _Up}>","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_move_assignable"},"filterText":"is_trivially_move_assignable","insertText":"std::is_trivially_move_assignable<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_move_assignable<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_move_assignable","textEdit":{"newText":"std::is_trivially_move_assignable<${1:typename _Tp}>","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_move_constructible"},"filterText":"is_trivially_move_constructible","insertText":"std::is_trivially_move_constructible<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_move_constructible<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_move_constructible","textEdit":{"newText":"std::is_trivially_move_constructible<${1:typename _Tp}>","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_unsigned"},"filterText":"is_unsigned","insertText":"std::is_unsigned<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_unsigned<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_unsigned","textEdit":{"newText":"std::is_unsigned<${1:typename _Tp}>","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include <system_error>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<system_error>`  \nis_error_code_enum"},"filterText":"is_error_code_enum","insertText":"std::is_error_code_enum<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_error_code_enum<typename _Tp>","score":0.87819457054138184,"sortText":"409f2ea4is_error_code_enum","textEdit":{"newText":"std::is_error_code_enum<${1:typename _Tp}>","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"dhcpserver/dhcpserver_options.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nDHCP Extensions"},"filterText":"IP_ADDRESS_LEASE_TIME","insertText":"IP_ADDRESS_LEASE_TIME","insertTextFormat":2,"kind":20,"label":"•IP_ADDRESS_LEASE_TIME","score":0.85656732320785522,"sortText":"40a4b801IP_ADDRESS_LEASE_TIME","textEdit":{"newText":"IP_ADDRESS_LEASE_TIME","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}}}}]}}
>>>
Content-Length: 269

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":15},"contentChanges":[{"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":8}},"text":"w"}]},"jsonrpc":"2.0"}Content-Length: 224

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":9},"context":{"triggerKind":3}},"id":170,"jsonrpc":"2.0"}
<<<
Content-Length: 3737

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":8,"line":4},"start":{"character":7,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":14}}Content-Length: 3110

{"id":170,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"AsyncWebSocket *","filterText":"iws","insertText":"iws","insertTextFormat":2,"kind":6,"label":" iws","score":26.400001525878906,"sortText":"3e2ccccciws","textEdit":{"newText":"iws","range":{"end":{"character":9,"line":4},"start":{"character":7,"line":4}}}},{"detail":"void","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"kind":2,"label":" initWebServer()","score":14.520001411437988,"sortText":"3ed1c28einitWebServer","textEdit":{"newText":"initWebServer()","range":{"end":{"character":9,"line":4},"start":{"character":7,"line":4}}}},{"detail":"void","filterText":"initWebSocket","insertText":"initWebSocket()","insertTextFormat":2,"kind":2,"label":" initWebSocket()","score":14.520001411437988,"sortText":"3ed1c28einitWebSocket","textEdit":{"newText":"initWebSocket()","range":{"end":{"character":9,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a blank character, that is, a space or a tab."},"filterText":"isWhitespace","insertText":"isWhitespace(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isWhitespace(int c)","score":1.2690917253494263,"sortText":"408c559bisWhitespace","textEdit":{"newText":"isWhitespace(${1:int c})","range":{"end":{"character":9,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cWrite","insertText":"i2cWrite(${1:i2c_t *i2c}, ${2:uint16_t address}, ${3:uint8_t *buff}, ${4:uint16_t size}, ${5:bool sendStop}, ${6:uint16_t timeOutMillis})","insertTextFormat":2,"kind":3,"label":"•i2cWrite(i2c_t *i2c, uint16_t address, uint8_t *buff, uint16_t size, bool sendStop, uint16_t timeOutMillis)","score":1.1826096773147583,"sortText":"409cf05ei2cWrite","textEdit":{"newText":"i2cWrite(${1:i2c_t *i2c}, ${2:uint16_t address}, ${3:uint8_t *buff}, ${4:uint16_t size}, ${5:bool sendStop}, ${6:uint16_t timeOutMillis})","range":{"end":{"character":9,"line":4},"start":{"character":7,"line":4}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Strings/IsWriteableString.hpp\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Strings/IsWriteableString.hpp\"`"},"filterText":"IsWriteableString","insertText":"ArduinoJson6173_91::IsWriteableString<${1:typename}>","insertTextFormat":2,"kind":22,"label":"•ArduinoJson6173_91::IsWriteableString<typename>","score":0.70405268669128418,"sortText":"40f8d267IsWriteableString","textEdit":{"newText":"ArduinoJson6173_91::IsWriteableString<${1:typename}>","range":{"end":{"character":9,"line":4},"start":{"character":7,"line":4}}}}]}}Content-Length: 3738

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'iw'","range":{"end":{"character":9,"line":4},"start":{"character":7,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":15}}
>>>
Content-Length: 442

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'iw'"}]}},"id":171,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":171,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 269

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":16},"contentChanges":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"text":"s"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3558

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":16}}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"context":{"diagnostics":[]}},"id":172,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":172,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":17},"contentChanges":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3558

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":17}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":11},"end":{"line":4,"character":11}},"context":{"diagnostics":[]}},"id":173,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":173,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":11},"end":{"line":4,"character":11}},"context":{"diagnostics":[]}},"id":174,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":174,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":9}},"id":175,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":175,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":1}},"id":176,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":176,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":3}},"id":177,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":177,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 442

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"}]}},"id":178,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":178,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":6}},"id":179,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":179,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":12}},"id":180,"jsonrpc":"2.0"}
<<<
Content-Length: 307

{"id":180,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### constructor `BcbAws::BcbAws`  \n\n---\n```cpp\n// In BcbAws\npublic: BcbAws::BcbAws(State *istate, AsyncWebServer *iserver, AsyncWebSocket *iws)\n```"},"range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}}}}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":5}},"id":181,"jsonrpc":"2.0"}
<<<
Content-Length: 244

{"id":181,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include <HTTPClient.h>  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"end":{"character":6,"line":2},"start":{"character":0,"line":2}}}}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":7}},"id":182,"jsonrpc":"2.0"}
<<<
Content-Length: 244

{"id":182,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include <HTTPClient.h>  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"end":{"character":8,"line":2},"start":{"character":6,"line":2}}}}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":8}},"id":183,"jsonrpc":"2.0"}
<<<
Content-Length: 307

{"id":183,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### constructor `BcbAws::BcbAws`  \n\n---\n```cpp\n// In BcbAws\npublic: BcbAws::BcbAws(State *istate, AsyncWebServer *iserver, AsyncWebSocket *iws)\n```"},"range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}}}}
>>>
Content-Length: 678

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"}]}},"id":184,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":184,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":7}},"id":185,"jsonrpc":"2.0"}
<<<
Content-Length: 244

{"id":185,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include <HTTPClient.h>  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"end":{"character":8,"line":2},"start":{"character":6,"line":2}}}}
>>>
Content-Length: 203

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":8}},"id":186,"jsonrpc":"2.0"}
<<<
Content-Length: 123

{"id":186,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}}}]}
>>>
Content-Length: 677

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"}]}},"id":187,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":187,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 677

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":14}},"severity":1,"code":"member_decl_does_not_match","source":"clang","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')"}]}},"id":188,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":188,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":0}},"id":189,"jsonrpc":"2.0"}
<<<
Content-Length: 244

{"id":189,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include <HTTPClient.h>  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"end":{"character":6,"line":2},"start":{"character":0,"line":2}}}}
>>>
Content-Length: 203

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":3,"character":2}},"id":190,"jsonrpc":"2.0"}
<<<
Content-Length: 913

{"id":190,"jsonrpc":"2.0","result":[{"kind":3,"range":{"end":{"character":7,"line":3},"start":{"character":2,"line":3}}},{"kind":2,"range":{"end":{"character":9,"line":67},"start":{"character":4,"line":67}}},{"kind":2,"range":{"end":{"character":23,"line":67},"start":{"character":18,"line":67}}},{"kind":2,"range":{"end":{"character":24,"line":68},"start":{"character":19,"line":68}}},{"kind":2,"range":{"end":{"character":9,"line":74},"start":{"character":4,"line":74}}},{"kind":2,"range":{"end":{"character":35,"line":79},"start":{"character":30,"line":79}}},{"kind":2,"range":{"end":{"character":48,"line":80},"start":{"character":43,"line":80}}},{"kind":2,"range":{"end":{"character":9,"line":81},"start":{"character":4,"line":81}}},{"kind":2,"range":{"end":{"character":9,"line":90},"start":{"character":4,"line":90}}},{"kind":2,"range":{"end":{"character":9,"line":92},"start":{"character":4,"line":92}}}]}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":2}},"context":{"diagnostics":[]}},"id":191,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":191,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":18},"contentChanges":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":2}},"text":"BcbAws::"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3558

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":18}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":10}},"context":{"diagnostics":[]}},"id":192,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":192,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":3,"character":1}},"id":193,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":193,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":1}},"id":194,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":194,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":2}},"id":195,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":195,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 442

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"}]}},"id":196,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":196,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":19},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"text":"BcbAws::"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3550

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":8},"start":{"character":2,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":40},"start":{"character":2,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":41},"start":{"character":21,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":57},"start":{"character":43,"line":57}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":57},"start":{"character":48,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":19}}
>>>
Content-Length: 436

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"}]}},"id":197,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":197,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 436

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"}]}},"id":198,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":198,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":19}},"id":199,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":199,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":19},"end":{"line":4,"character":19}},"context":{"diagnostics":[]}},"id":200,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":200,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 274

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":20},"contentChanges":[{"range":{"start":{"line":4,"character":19},"end":{"line":4,"character":19}},"text":"\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3550

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":20}}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 284

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":21},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3550

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":21}}
>>>
Content-Length: 270

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":22},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":0}},"text":"  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3550

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":22}}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 290

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":23},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":6,"character":0}},"rangeLength":3,"text":"    \n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3550

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":23}}
>>>
Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":24},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"text":"BcbAws::"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3725

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":24}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"context":{"diagnostics":[]}},"id":201,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":201,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":1}},"id":202,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":202,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":2}},"id":203,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":203,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":2}},"id":204,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":204,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":3}},"id":205,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":205,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"context":{"diagnostics":[]}},"id":206,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":206,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 284

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":25},"contentChanges":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3725

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":25}}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"context":{"diagnostics":[]}},"id":207,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":207,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"context":{"diagnostics":[]}},"id":208,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":208,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":9}},"id":209,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":209,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":9}},"id":210,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":210,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"context":{"diagnostics":[]}},"id":211,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":211,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":26},"contentChanges":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 225

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":11},"context":{"triggerKind":1}},"id":212,"jsonrpc":"2.0"}
<<<
Content-Length: 1463

{"id":212,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"State *","filterText":"state","insertText":"state","insertTextFormat":2,"kind":5,"label":" state","score":15.14192008972168,"sortText":"3e8dbab2state","textEdit":{"newText":"state","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"detail":"void","filterText":"handleWebSocketMessage","insertText":"handleWebSocketMessage(${1:void *arg}, ${2:uint8_t *data}, ${3:size_t len})","insertTextFormat":2,"kind":2,"label":" handleWebSocketMessage(void *arg, uint8_t *data, size_t len)","score":1.1000000238418579,"sortText":"80000000handleWebSocketMessage","textEdit":{"newText":"handleWebSocketMessage(${1:void *arg}, ${2:uint8_t *data}, ${3:size_t len})","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"detail":"void","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"kind":2,"label":" initWebServer()","score":1.1000000238418579,"sortText":"80000000initWebServer","textEdit":{"newText":"initWebServer()","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"detail":"void","filterText":"initWebSocket","insertText":"initWebSocket()","insertTextFormat":2,"kind":2,"label":" initWebSocket()","score":1.1000000238418579,"sortText":"80000000initWebSocket","textEdit":{"newText":"initWebSocket()","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}}]}}Content-Length: 3919

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 's' in 'BcbAws'","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":26}}
>>>
Content-Length: 435

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":11}},"severity":1,"code":"no_member","source":"clang","message":"No member named 's' in 'BcbAws'"}]}},"id":213,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":213,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":27},"contentChanges":[{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3920

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'se' in 'BcbAws'","range":{"end":{"character":12,"line":5},"start":{"character":10,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":27}}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":28},"contentChanges":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":12}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3921

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ser' in 'BcbAws'","range":{"end":{"character":13,"line":5},"start":{"character":10,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":28}}
>>>
Content-Length: 437

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":13},"end":{"line":5,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":13}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ser' in 'BcbAws'"}]}},"id":214,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":214,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":29},"contentChanges":[{"range":{"start":{"line":5,"character":13},"end":{"line":5,"character":13}},"text":"v"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3922

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'serv' in 'BcbAws'","range":{"end":{"character":14,"line":5},"start":{"character":10,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":29}}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":30},"contentChanges":[{"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3923

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'serve' in 'BcbAws'","range":{"end":{"character":15,"line":5},"start":{"character":10,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":30}}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":31},"contentChanges":[{"range":{"start":{"line":5,"character":15},"end":{"line":5,"character":15}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":31}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":16}},"context":{"diagnostics":[]}},"id":215,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":215,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":16}},"context":{"diagnostics":[]}},"id":216,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":216,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":32},"contentChanges":[{"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":16}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":32}}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":33},"contentChanges":[{"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":17}},"text":"="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4206

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":33}}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":34},"contentChanges":[{"range":{"start":{"line":5,"character":18},"end":{"line":5,"character":18}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4206

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":34}}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":35},"contentChanges":[{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":19}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 225

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":20},"context":{"triggerKind":1}},"id":217,"jsonrpc":"2.0"}
<<<
Content-Length: 53007

{"id":217,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"detail":"State *","filterText":"istate","insertText":"istate","insertTextFormat":2,"kind":6,"label":" istate","score":44.318382263183594,"sortText":"3dceb9faistate","textEdit":{"newText":"istate","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"detail":"AsyncWebServer *","filterText":"iserver","insertText":"iserver","insertTextFormat":2,"kind":6,"label":" iserver","score":39.600002288818359,"sortText":"3de19999iserver","textEdit":{"newText":"iserver","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"detail":"AsyncWebSocket *","filterText":"iws","insertText":"iws","insertTextFormat":2,"kind":6,"label":" iws","score":29.545587539672852,"sortText":"3e13a2a3iws","textEdit":{"newText":"iws","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"detail":"void","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"kind":2,"label":" initWebServer()","score":14.520001411437988,"sortText":"3e97ae13initWebServer","textEdit":{"newText":"initWebServer()","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"detail":"void","filterText":"initWebSocket","insertText":"initWebSocket()","insertTextFormat":2,"kind":2,"label":" initWebSocket()","score":9.6800003051757812,"sortText":"3ee51eb8initWebSocket","textEdit":{"newText":"initWebSocket()","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"filterText":"int","insertText":"int","insertTextFormat":2,"kind":14,"label":" int","score":8,"sortText":"3f000000int","textEdit":{"newText":"int","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"detail":"const IPAddress","filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"kind":6,"label":" INADDR_NONE","score":7.2600007057189941,"sortText":"3f17ae13INADDR_NONE","textEdit":{"newText":"INADDR_NONE","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"IPAddress.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":2,"kind":7,"label":"•IPAddress","score":7.0663089752197266,"sortText":"3f1de0ccIPAddress","textEdit":{"newText":"IPAddress","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"detail":"[5 overloads]","filterText":"IPAddress","insertText":"IPAddress($0)","insertTextFormat":2,"kind":4,"label":" IPAddress(…)","score":4.4000000953674316,"sortText":"3f733333IPAddress","textEdit":{"newText":"IPAddress($0)","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"kind":8,"label":"•int8_t","score":1.8273557424545288,"sortText":"40161935int8_t","textEdit":{"newText":"int8_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"detail":"void","filterText":"initSDCard","insertText":"initSDCard()","insertTextFormat":2,"kind":3,"label":" initSDCard()","score":1.6613177061080933,"sortText":"402b59f1initSDCard","textEdit":{"newText":"initSDCard()","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2c_t","insertText":"i2c_t","insertTextFormat":2,"kind":8,"label":"•i2c_t","score":1.4328430891036987,"sortText":"40489899i2c_t","textEdit":{"newText":"i2c_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"kind":8,"label":"•int32_t","score":1.4073807001113892,"sortText":"404bdaf3int32_t","textEdit":{"newText":"int32_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"IPv6Address.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"IPv6Address.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"filterText":"IPv6Address","insertText":"IPv6Address","insertTextFormat":2,"kind":7,"label":"•IPv6Address","score":1.3970462083816528,"sortText":"404d2d97IPv6Address","textEdit":{"newText":"IPv6Address","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`  \nExternal Wire.h equivalent error Codes"},"filterText":"i2c_err_t","insertText":"i2c_err_t","insertTextFormat":2,"kind":8,"label":"•i2c_err_t","score":1.2993969917297363,"sortText":"4059ad5ci2c_err_t","textEdit":{"newText":"i2c_err_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"kind":8,"label":"•int16_t","score":1.2690916061401367,"sortText":"405d8e68int16_t","textEdit":{"newText":"int16_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"kind":8,"label":"•int64_t","score":1.2690916061401367,"sortText":"405d8e68int64_t","textEdit":{"newText":"int64_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"kind":8,"label":"•int_fast16_t","score":1.2690916061401367,"sortText":"405d8e68int_fast16_t","textEdit":{"newText":"int_fast16_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"kind":8,"label":"•int_fast32_t","score":1.2690916061401367,"sortText":"405d8e68int_fast32_t","textEdit":{"newText":"int_fast32_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"kind":8,"label":"•int_fast64_t","score":1.2690916061401367,"sortText":"405d8e68int_fast64_t","textEdit":{"newText":"int_fast64_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"kind":8,"label":"•int_fast8_t","score":1.2690916061401367,"sortText":"405d8e68int_fast8_t","textEdit":{"newText":"int_fast8_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"kind":8,"label":"•int_least32_t","score":1.2690916061401367,"sortText":"405d8e68int_least32_t","textEdit":{"newText":"int_least32_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":2,"kind":8,"label":"•int_least64_t","score":1.2690916061401367,"sortText":"405d8e68int_least64_t","textEdit":{"newText":"int_least64_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":2,"kind":8,"label":"•int_least8_t","score":1.2690916061401367,"sortText":"405d8e68int_least8_t","textEdit":{"newText":"int_least8_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"kind":8,"label":"•intmax_t","score":1.2690916061401367,"sortText":"405d8e68intmax_t","textEdit":{"newText":"intmax_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"stdint.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"stdint.h\"`"},"filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"kind":8,"label":"•intptr_t","score":1.2690916061401367,"sortText":"405d8e68intptr_t","textEdit":{"newText":"intptr_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isHexadecimalDigit(int c)","score":1.2690916061401367,"sortText":"405d8e68isHexadecimalDigit","textEdit":{"newText":"isHexadecimalDigit(${1:int c})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"isLowerCase","insertText":"isLowerCase(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isLowerCase(int c)","score":1.2690916061401367,"sortText":"405d8e68isLowerCase","textEdit":{"newText":"isLowerCase(${1:int c})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"I2C_ERROR_OK","insertText":"I2C_ERROR_OK","insertTextFormat":2,"kind":20,"label":"•I2C_ERROR_OK","score":1.2583444118499756,"sortText":"405eee92I2C_ERROR_OK","textEdit":{"newText":"I2C_ERROR_OK","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"I2C_ERROR_DEV","insertText":"I2C_ERROR_DEV","insertTextFormat":2,"kind":20,"label":"•I2C_ERROR_DEV","score":1.2426646947860718,"sortText":"4060f05dI2C_ERROR_DEV","textEdit":{"newText":"I2C_ERROR_DEV","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"I2C_ERROR_BUSY","insertText":"I2C_ERROR_BUSY","insertTextFormat":2,"kind":20,"label":"•I2C_ERROR_BUSY","score":1.1826096773147583,"sortText":"4068a03fI2C_ERROR_BUSY","textEdit":{"newText":"I2C_ERROR_BUSY","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"I2C_ERROR_MEMORY","insertText":"I2C_ERROR_MEMORY","insertTextFormat":2,"kind":20,"label":"•I2C_ERROR_MEMORY","score":1.1826096773147583,"sortText":"4068a03fI2C_ERROR_MEMORY","textEdit":{"newText":"I2C_ERROR_MEMORY","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"FunctionalInterrupt.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"FunctionalInterrupt.h\"`"},"filterText":"InterruptArgStructure","insertText":"InterruptArgStructure","insertTextFormat":2,"kind":22,"label":"•InterruptArgStructure","score":1.1826096773147583,"sortText":"4068a03fInterruptArgStructure","textEdit":{"newText":"InterruptArgStructure","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`  \nFunctions below should be used only if well understood Might be deprecated and removed in future"},"filterText":"i2cAttachSCL","insertText":"i2cAttachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})","insertTextFormat":2,"kind":3,"label":"•i2cAttachSCL(i2c_t *i2c, int8_t scl)","score":1.1826096773147583,"sortText":"4068a03fi2cAttachSCL","textEdit":{"newText":"i2cAttachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cDetachSCL","insertText":"i2cDetachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})","insertTextFormat":2,"kind":3,"label":"•i2cDetachSCL(i2c_t *i2c, int8_t scl)","score":1.1826096773147583,"sortText":"4068a03fi2cDetachSCL","textEdit":{"newText":"i2cDetachSCL(${1:i2c_t *i2c}, ${2:int8_t scl})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cDetachSDA","insertText":"i2cDetachSDA(${1:i2c_t *i2c}, ${2:int8_t sda})","insertTextFormat":2,"kind":3,"label":"•i2cDetachSDA(i2c_t *i2c, int8_t sda)","score":1.1826096773147583,"sortText":"4068a03fi2cDetachSDA","textEdit":{"newText":"i2cDetachSDA(${1:i2c_t *i2c}, ${2:int8_t sda})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cFlush","insertText":"i2cFlush(${1:i2c_t *i2c})","insertTextFormat":2,"kind":3,"label":"•i2cFlush(i2c_t *i2c)","score":1.1826096773147583,"sortText":"4068a03fi2cFlush","textEdit":{"newText":"i2cFlush(${1:i2c_t *i2c})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cGetFrequency","insertText":"i2cGetFrequency(${1:i2c_t *i2c})","insertTextFormat":2,"kind":3,"label":"•i2cGetFrequency(i2c_t *i2c)","score":1.1826096773147583,"sortText":"4068a03fi2cGetFrequency","textEdit":{"newText":"i2cGetFrequency(${1:i2c_t *i2c})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_t *","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cInit","insertText":"i2cInit(${1:uint8_t i2c_num}, ${2:int8_t sda}, ${3:int8_t scl}, ${4:uint32_t clk_speed})","insertTextFormat":2,"kind":3,"label":"•i2cInit(uint8_t i2c_num, int8_t sda, int8_t scl, uint32_t clk_speed)","score":1.1826096773147583,"sortText":"4068a03fi2cInit","textEdit":{"newText":"i2cInit(${1:uint8_t i2c_num}, ${2:int8_t sda}, ${3:int8_t scl}, ${4:uint32_t clk_speed})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`  \nStickbreakers ISR Support"},"filterText":"i2cProcQueue","insertText":"i2cProcQueue(${1:i2c_t *i2c}, ${2:uint32_t *readCount}, ${3:uint16_t timeOutMillis})","insertTextFormat":2,"kind":3,"label":"•i2cProcQueue(i2c_t *i2c, uint32_t *readCount, uint16_t timeOutMillis)","score":1.1826096773147583,"sortText":"4068a03fi2cProcQueue","textEdit":{"newText":"i2cProcQueue(${1:i2c_t *i2c}, ${2:uint32_t *readCount}, ${3:uint16_t timeOutMillis})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cRead","insertText":"i2cRead(${1:i2c_t *i2c}, ${2:uint16_t address}, ${3:uint8_t *buff}, ${4:uint16_t size}, ${5:bool sendStop}, ${6:uint16_t timeOutMillis}, ${7:uint32_t *readCount})","insertTextFormat":2,"kind":3,"label":"•i2cRead(i2c_t *i2c, uint16_t address, uint8_t *buff, uint16_t size, bool sendStop, uint16_t timeOutMillis, uint32_t *readCount)","score":1.1826096773147583,"sortText":"4068a03fi2cRead","textEdit":{"newText":"i2cRead(${1:i2c_t *i2c}, ${2:uint16_t address}, ${3:uint8_t *buff}, ${4:uint16_t size}, ${5:bool sendStop}, ${6:uint16_t timeOutMillis}, ${7:uint32_t *readCount})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cSetFrequency","insertText":"i2cSetFrequency(${1:i2c_t *i2c}, ${2:uint32_t clk_speed})","insertTextFormat":2,"kind":3,"label":"•i2cSetFrequency(i2c_t *i2c, uint32_t clk_speed)","score":1.1826096773147583,"sortText":"4068a03fi2cSetFrequency","textEdit":{"newText":"i2cSetFrequency(${1:i2c_t *i2c}, ${2:uint32_t clk_speed})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"detail":"void","filterText":"init","insertText":"init()","insertTextFormat":2,"kind":3,"label":" init()","score":1.1826096773147583,"sortText":"4068a03finit","textEdit":{"newText":"init()","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"detail":"void","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"kind":3,"label":" initVariant()","score":1.1826096773147583,"sortText":"4068a03finitVariant","textEdit":{"newText":"initVariant()","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"math.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"filterText":"ilogb","insertText":"ilogb(${1:double})","insertTextFormat":2,"kind":3,"label":"•ilogb(double)","score":1.1118042469024658,"sortText":"4071b066ilogb","textEdit":{"newText":"ilogb(${1:double})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"math.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"filterText":"ilogbf","insertText":"ilogbf(${1:float})","insertTextFormat":2,"kind":3,"label":"•ilogbf(float)","score":1.1118042469024658,"sortText":"4071b066ilogbf","textEdit":{"newText":"ilogbf(${1:float})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"math.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"math.h\"`"},"filterText":"ilogbl","insertText":"ilogbl(${1:long double})","insertTextFormat":2,"kind":3,"label":"•ilogbl(long double)","score":1.1118042469024658,"sortText":"4071b066ilogbl","textEdit":{"newText":"ilogbl(${1:long double})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"math.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"double","documentation":{"kind":"markdown","value":"From `\"math.h\"`  \nNon ANSI double precision functions."},"filterText":"infinity","insertText":"infinity()","insertTextFormat":2,"kind":3,"label":"•infinity()","score":1.1118042469024658,"sortText":"4071b066infinity","textEdit":{"newText":"infinity()","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <sys/types.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<sys/types.h>`"},"filterText":"ino_t","insertText":"ino_t","insertTextFormat":2,"kind":8,"label":"•ino_t","score":1.1118042469024658,"sortText":"4071b066ino_t","textEdit":{"newText":"ino_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isascii(int __c)","score":1.1118042469024658,"sortText":"4071b066isascii","textEdit":{"newText":"isascii(${1:int __c})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isdigit(int __c)","score":1.1118042469024658,"sortText":"4071b066isdigit","textEdit":{"newText":"isdigit(${1:int __c})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isupper(int __c)","score":1.1118042469024658,"sortText":"4071b066isupper","textEdit":{"newText":"isupper(${1:int __c})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <sys/types.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<sys/types.h>`"},"filterText":"itimerspec","insertText":"itimerspec","insertTextFormat":2,"kind":22,"label":"•itimerspec","score":1.1118042469024658,"sortText":"4071b066itimerspec","textEdit":{"newText":"itimerspec","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"ilogb","insertText":"std::ilogb(${1:long double __x})","insertTextFormat":2,"kind":3,"label":"•std::ilogb(long double __x)","score":1.0575764179229736,"sortText":"4078a156ilogb","textEdit":{"newText":"std::ilogb(${1:long double __x})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <functional>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<functional>`  \n@brief Determines if the given type \\_Tp is a function object should be treated as a subexpression when evaluating calls to function objects returned by bind(). [TR1 3.6.1]  \n@ingroup binders"},"filterText":"is_bind_expression","insertText":"std::is_bind_expression<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_bind_expression<typename _Tp>","score":1.0575764179229736,"sortText":"4078a156is_bind_expression","textEdit":{"newText":"std::is_bind_expression<${1:typename _Tp}>","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <functional>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<functional>`  \n@brief Determines if the given type \\_Tp is a placeholder in a bind() expression and, if so, which placeholder it is. [TR1 3.6.2]  \n@ingroup binders"},"filterText":"is_placeholder","insertText":"std::is_placeholder<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_placeholder<typename _Tp>","score":1.0575764179229736,"sortText":"4078a156is_placeholder","textEdit":{"newText":"std::is_placeholder<${1:typename _Tp}>","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"bool","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"isgreater","insertText":"std::isgreater(${1:double __x}, ${2:double __y})","insertTextFormat":2,"kind":3,"label":"•std::isgreater(double __x, double __y)","score":1.0575764179229736,"sortText":"4078a156isgreater","textEdit":{"newText":"std::isgreater(${1:double __x}, ${2:double __y})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"typename __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value && __is_arithmetic<_Up>::__value), bool>::__type","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"isless","insertText":"std::isless(${1:_Tp __x}, ${2:_Up __y})","insertTextFormat":2,"kind":3,"label":"•std::isless(_Tp __x, _Up __y)","score":1.0575764179229736,"sortText":"4078a156isless","textEdit":{"newText":"std::isless(${1:_Tp __x}, ${2:_Up __y})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"bool","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"isnormal","insertText":"std::isnormal(${1:double __x})","insertTextFormat":2,"kind":3,"label":"•std::isnormal(double __x)","score":1.0575764179229736,"sortText":"4078a156isnormal","textEdit":{"newText":"std::isnormal(${1:double __x})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"soc/i2c_struct.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"soc/i2c_struct.h\"`"},"filterText":"i2c_dev_t","insertText":"i2c_dev_t","insertTextFormat":2,"kind":8,"label":"•i2c_dev_t","score":1.0538334846496582,"sortText":"40791bfci2c_dev_t","textEdit":{"newText":"i2c_dev_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"wctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"filterText":"iswblank","insertText":"iswblank(${1:wint_t})","insertTextFormat":2,"kind":3,"label":"•iswblank(wint_t)","score":1.0538334846496582,"sortText":"40791bfciswblank","textEdit":{"newText":"iswblank(${1:wint_t})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"wctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"filterText":"iswdigit","insertText":"iswdigit(${1:wint_t})","insertTextFormat":2,"kind":3,"label":"•iswdigit(wint_t)","score":1.0538334846496582,"sortText":"40791bfciswdigit","textEdit":{"newText":"iswdigit(${1:wint_t})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"wctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"filterText":"iswspace","insertText":"iswspace(${1:wint_t})","insertTextFormat":2,"kind":3,"label":"•iswspace(wint_t)","score":1.0538334846496582,"sortText":"40791bfciswspace","textEdit":{"newText":"iswspace(${1:wint_t})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \n@ingroup ipaddr A union struct for both IP version's addresses.  \nATTENTION: watch out for its size when adding IPv6 address scope!"},"filterText":"ip_addr_t","insertText":"ip_addr_t","insertTextFormat":2,"kind":8,"label":"•ip_addr_t","score":1.0294719934463501,"sortText":"407c3a43ip_addr_t","textEdit":{"newText":"ip_addr_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"kind":1,"label":" INADDR_NONE","score":1,"sortText":"40800000INADDR_NONE","textEdit":{"newText":"INADDR_NONE","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"filterText":"IPADDR_NONE","insertText":"IPADDR_NONE","insertTextFormat":2,"kind":1,"label":" IPADDR_NONE","score":1,"sortText":"40800000IPADDR_NONE","textEdit":{"newText":"IPADDR_NONE","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"lwip_ip_addr_type","documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \nIPv4"},"filterText":"IPADDR_TYPE_V4","insertText":"IPADDR_TYPE_V4","insertTextFormat":2,"kind":20,"label":"•IPADDR_TYPE_V4","score":0.96751219034194946,"sortText":"4088511fIPADDR_TYPE_V4","textEdit":{"newText":"IPADDR_TYPE_V4","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"lwip_ip_addr_type","documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`  \nIPv6"},"filterText":"IPADDR_TYPE_V6","insertText":"IPADDR_TYPE_V6","insertTextFormat":2,"kind":20,"label":"•IPADDR_TYPE_V6","score":0.96751219034194946,"sortText":"4088511fIPADDR_TYPE_V6","textEdit":{"newText":"IPADDR_TYPE_V6","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/icmp.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"lwip/icmp.h\"`"},"filterText":"icmp_input","insertText":"icmp_input(${1:struct pbuf *p}, ${2:struct netif *inp})","insertTextFormat":2,"kind":3,"label":"•icmp_input(struct pbuf *p, struct netif *inp)","score":0.96751219034194946,"sortText":"4088511ficmp_input","textEdit":{"newText":"icmp_input(${1:struct pbuf *p}, ${2:struct netif *inp})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/inet.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/inet.h\"`"},"filterText":"in6_addr","insertText":"in6_addr","insertTextFormat":2,"kind":22,"label":"•in6_addr","score":0.96751219034194946,"sortText":"4088511fin6_addr","textEdit":{"newText":"in6_addr","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/inet.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/inet.h\"`"},"filterText":"in_addr_t","insertText":"in_addr_t","insertTextFormat":2,"kind":8,"label":"•in_addr_t","score":0.96751219034194946,"sortText":"4088511fin_addr_t","textEdit":{"newText":"in_addr_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp_intr_alloc.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_intr_alloc.h\"`"},"filterText":"intr_handle_t","insertText":"intr_handle_t","insertTextFormat":2,"kind":8,"label":"•intr_handle_t","score":0.96751219034194946,"sortText":"4088511fintr_handle_t","textEdit":{"newText":"intr_handle_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip4_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/ip4_addr.h\"`"},"filterText":"ip4_addr2","insertText":"ip4_addr2","insertTextFormat":2,"kind":22,"label":"•ip4_addr2","score":0.96751219034194946,"sortText":"4088511fip4_addr2","textEdit":{"newText":"ip4_addr2","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip4.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"err_t","documentation":{"kind":"markdown","value":"From `\"lwip/ip4.h\"`"},"filterText":"ip4_input","insertText":"ip4_input(${1:struct pbuf *p}, ${2:struct netif *inp})","insertTextFormat":2,"kind":3,"label":"•ip4_input(struct pbuf *p, struct netif *inp)","score":0.96751219034194946,"sortText":"4088511fip4_input","textEdit":{"newText":"ip4_input(${1:struct pbuf *p}, ${2:struct netif *inp})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip4_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `\"lwip/ip4_addr.h\"`"},"filterText":"ip4addr_ntoa_r","insertText":"ip4addr_ntoa_r(${1:const ip4_addr_t *addr}, ${2:char *buf}, ${3:int buflen})","insertTextFormat":2,"kind":3,"label":"•ip4addr_ntoa_r(const ip4_addr_t *addr, char *buf, int buflen)","score":0.96751219034194946,"sortText":"4088511fip4addr_ntoa_r","textEdit":{"newText":"ip4addr_ntoa_r(${1:const ip4_addr_t *addr}, ${2:char *buf}, ${3:int buflen})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip6_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/ip6_addr.h\"`  \nIPv6 address"},"filterText":"ip6_addr_t","insertText":"ip6_addr_t","insertTextFormat":2,"kind":8,"label":"•ip6_addr_t","score":0.96751219034194946,"sortText":"4088511fip6_addr_t","textEdit":{"newText":"ip6_addr_t","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"const ip_addr_t *","documentation":{"kind":"markdown","value":"From `\"lwip/ip6.h\"`"},"filterText":"ip6_select_source_address","insertText":"ip6_select_source_address(${1:struct netif *netif}, ${2:const ip6_addr_t *dest})","insertTextFormat":2,"kind":3,"label":"•ip6_select_source_address(struct netif *netif, const ip6_addr_t *dest)","score":0.96751219034194946,"sortText":"4088511fip6_select_source_address","textEdit":{"newText":"ip6_select_source_address(${1:struct netif *netif}, ${2:const ip6_addr_t *dest})","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip_addr.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/ip_addr.h\"`"},"filterText":"ip_addr","insertText":"ip_addr","insertTextFormat":2,"kind":22,"label":"•ip_addr","score":0.96751219034194946,"sortText":"4088511fip_addr","textEdit":{"newText":"ip_addr","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/ip.h\"`  \nGlobal variables of this module, kept in a struct for efficient access using base+index."},"filterText":"ip_globals","insertText":"ip_globals","insertTextFormat":2,"kind":22,"label":"•ip_globals","score":0.96751219034194946,"sortText":"4088511fip_globals","textEdit":{"newText":"ip_globals","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"icmp6_dur_code","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nCommunication with destination administratively prohibited"},"filterText":"ICMP6_DUR_PROHIBITED","insertText":"ICMP6_DUR_PROHIBITED","insertTextFormat":2,"kind":20,"label":"•ICMP6_DUR_PROHIBITED","score":0.93569719791412354,"sortText":"40907626ICMP6_DUR_PROHIBITED","textEdit":{"newText":"ICMP6_DUR_PROHIBITED","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"icmp6_pp_code","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nErroneous header field encountered"},"filterText":"ICMP6_PP_FIELD","insertText":"ICMP6_PP_FIELD","insertTextFormat":2,"kind":20,"label":"•ICMP6_PP_FIELD","score":0.93569719791412354,"sortText":"40907626ICMP6_PP_FIELD","textEdit":{"newText":"ICMP6_PP_FIELD","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nDestination unreachable"},"filterText":"ICMP6_TYPE_DUR","insertText":"ICMP6_TYPE_DUR","insertTextFormat":2,"kind":20,"label":"•ICMP6_TYPE_DUR","score":0.93569719791412354,"sortText":"40907626ICMP6_TYPE_DUR","textEdit":{"newText":"ICMP6_TYPE_DUR","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nEcho request"},"filterText":"ICMP6_TYPE_EREQ","insertText":"ICMP6_TYPE_EREQ","insertTextFormat":2,"kind":20,"label":"•ICMP6_TYPE_EREQ","score":0.93569719791412354,"sortText":"40907626ICMP6_TYPE_EREQ","textEdit":{"newText":"ICMP6_TYPE_EREQ","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nNeighbor advertisement"},"filterText":"ICMP6_TYPE_NA","insertText":"ICMP6_TYPE_NA","insertTextFormat":2,"kind":20,"label":"•ICMP6_TYPE_NA","score":0.93569719791412354,"sortText":"40907626ICMP6_TYPE_NA","textEdit":{"newText":"ICMP6_TYPE_NA","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"icmp6_type","documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nPrivate experimentation"},"filterText":"ICMP6_TYPE_PE3","insertText":"ICMP6_TYPE_PE3","insertTextFormat":2,"kind":20,"label":"•ICMP6_TYPE_PE3","score":0.93569719791412354,"sortText":"40907626ICMP6_TYPE_PE3","textEdit":{"newText":"ICMP6_TYPE_PE3","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/icmp6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/prot/icmp6.h\"`  \nICMP parameter code"},"filterText":"icmp6_pp_code","insertText":"icmp6_pp_code","insertTextFormat":2,"kind":13,"label":"•icmp6_pp_code","score":0.93569719791412354,"sortText":"40907626icmp6_pp_code","textEdit":{"newText":"icmp6_pp_code","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/ip6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/prot/ip6.h\"`"},"filterText":"ip6_addr_packed","insertText":"ip6_addr_packed","insertTextFormat":2,"kind":22,"label":"•ip6_addr_packed","score":0.93569719791412354,"sortText":"40907626ip6_addr_packed","textEdit":{"newText":"ip6_addr_packed","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/ip6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/prot/ip6.h\"`"},"filterText":"ip6_frag_hdr","insertText":"ip6_frag_hdr","insertTextFormat":2,"kind":22,"label":"•ip6_frag_hdr","score":0.93569719791412354,"sortText":"40907626ip6_frag_hdr","textEdit":{"newText":"ip6_frag_hdr","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/prot/ip4.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"lwip/prot/ip4.h\"`  \nThe IPv4 header"},"filterText":"ip_hdr","insertText":"ip_hdr","insertTextFormat":2,"kind":22,"label":"•ip_hdr","score":0.93569719791412354,"sortText":"40907626ip_hdr","textEdit":{"newText":"ip_hdr","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_assignable"},"filterText":"is_assignable","insertText":"std::is_assignable<${1:typename _Tp}, ${2:typename _Up}>","insertTextFormat":2,"kind":22,"label":"•std::is_assignable<typename _Tp, typename _Up>","score":0.92650353908538818,"sortText":"4092d0aais_assignable","textEdit":{"newText":"std::is_assignable<${1:typename _Tp}, ${2:typename _Up}>","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_convertible"},"filterText":"is_convertible","insertText":"std::is_convertible<${1:typename _From}, ${2:typename _To}>","insertTextFormat":2,"kind":22,"label":"•std::is_convertible<typename _From, typename _To>","score":0.92650353908538818,"sortText":"4092d0aais_convertible","textEdit":{"newText":"std::is_convertible<${1:typename _From}, ${2:typename _To}>","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_literal_type"},"filterText":"is_literal_type","insertText":"std::is_literal_type<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_literal_type<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_literal_type","textEdit":{"newText":"std::is_literal_type<${1:typename _Tp}>","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_polymorphic"},"filterText":"is_polymorphic","insertText":"std::is_polymorphic<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_polymorphic<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_polymorphic","textEdit":{"newText":"std::is_polymorphic<${1:typename _Tp}>","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_reference"},"filterText":"is_reference","insertText":"std::is_reference<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_reference<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_reference","textEdit":{"newText":"std::is_reference<${1:typename _Tp}>","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_assignable"},"filterText":"is_trivially_assignable","insertText":"std::is_trivially_assignable<${1:typename _Tp}, ${2:typename _Up}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_assignable<typename _Tp, typename _Up>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_assignable","textEdit":{"newText":"std::is_trivially_assignable<${1:typename _Tp}, ${2:typename _Up}>","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_move_assignable"},"filterText":"is_trivially_move_assignable","insertText":"std::is_trivially_move_assignable<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_move_assignable<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_move_assignable","textEdit":{"newText":"std::is_trivially_move_assignable<${1:typename _Tp}>","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_move_constructible"},"filterText":"is_trivially_move_constructible","insertText":"std::is_trivially_move_constructible<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_move_constructible<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_move_constructible","textEdit":{"newText":"std::is_trivially_move_constructible<${1:typename _Tp}>","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_unsigned"},"filterText":"is_unsigned","insertText":"std::is_unsigned<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_unsigned<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_unsigned","textEdit":{"newText":"std::is_unsigned<${1:typename _Tp}>","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <system_error>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<system_error>`  \nis_error_code_enum"},"filterText":"is_error_code_enum","insertText":"std::is_error_code_enum<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_error_code_enum<typename _Tp>","score":0.87819457054138184,"sortText":"409f2ea4is_error_code_enum","textEdit":{"newText":"std::is_error_code_enum<${1:typename _Tp}>","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"dhcpserver/dhcpserver_options.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nDHCP Extensions"},"filterText":"IP_ADDRESS_LEASE_TIME","insertText":"IP_ADDRESS_LEASE_TIME","insertTextFormat":2,"kind":20,"label":"•IP_ADDRESS_LEASE_TIME","score":0.85656732320785522,"sortText":"40a4b801IP_ADDRESS_LEASE_TIME","textEdit":{"newText":"IP_ADDRESS_LEASE_TIME","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}}}}]}}Content-Length: 4105

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":5},"start":{"character":10,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":20,"line":5},"start":{"character":19,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":35}}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":36},"contentChanges":[{"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 225

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":21},"context":{"triggerKind":3}},"id":218,"jsonrpc":"2.0"}
<<<
Content-Length: 57621

{"id":218,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"detail":"State *","filterText":"istate","insertText":"istate","insertTextFormat":2,"kind":6,"label":" istate","score":44.318382263183594,"sortText":"3dceb9faistate","textEdit":{"newText":"istate","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"detail":"AsyncWebServer *","filterText":"iserver","insertText":"iserver","insertTextFormat":2,"kind":6,"label":" iserver","score":39.600002288818359,"sortText":"3de19999iserver","textEdit":{"newText":"iserver","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"detail":"void","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"kind":2,"label":" initWebServer()","score":14.519999504089355,"sortText":"3eeecccdinitWebServer","textEdit":{"newText":"initWebServer()","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"detail":"void","filterText":"initWebSocket","insertText":"initWebSocket()","insertTextFormat":2,"kind":2,"label":" initWebSocket()","score":9.6800003051757812,"sortText":"3f3e6666initWebSocket","textEdit":{"newText":"initWebSocket()","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nWCharacter.h prototypes"},"filterText":"isAlphaNumeric","insertText":"isAlphaNumeric(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isAlphaNumeric(int c)","score":1.2690916061401367,"sortText":"405d8e68isAlphaNumeric","textEdit":{"newText":"isAlphaNumeric(${1:int c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"isGraph","insertText":"isGraph(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isGraph(int c)","score":1.2690916061401367,"sortText":"405d8e68isGraph","textEdit":{"newText":"isGraph(${1:int c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isHexadecimalDigit(int c)","score":1.2690916061401367,"sortText":"405d8e68isHexadecimalDigit","textEdit":{"newText":"isHexadecimalDigit(${1:int c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"isLowerCase","insertText":"isLowerCase(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isLowerCase(int c)","score":1.2690916061401367,"sortText":"405d8e68isLowerCase","textEdit":{"newText":"isLowerCase(${1:int c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"isPunct","insertText":"isPunct(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isPunct(int c)","score":1.2690916061401367,"sortText":"405d8e68isPunct","textEdit":{"newText":"isPunct(${1:int c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"isUpperCase","insertText":"isUpperCase(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isUpperCase(int c)","score":1.2690916061401367,"sortText":"405d8e68isUpperCase","textEdit":{"newText":"isUpperCase(${1:int c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"detail":"void","filterText":"initSDCard","insertText":"initSDCard()","insertTextFormat":2,"kind":3,"label":" initSDCard()","score":1.6613178253173828,"sortText":"40608374initSDCard","textEdit":{"newText":"initSDCard()","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isalnum","insertText":"isalnum(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isalnum(int __c)","score":1.1118042469024658,"sortText":"4071b066isalnum","textEdit":{"newText":"isalnum(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isalpha","insertText":"isalpha(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isalpha(int __c)","score":1.1118042469024658,"sortText":"4071b066isalpha","textEdit":{"newText":"isalpha(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isascii(int __c)","score":1.1118042469024658,"sortText":"4071b066isascii","textEdit":{"newText":"isascii(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isblank","insertText":"isblank(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isblank(int __c)","score":1.1118042469024658,"sortText":"4071b066isblank","textEdit":{"newText":"isblank(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"iscntrl","insertText":"iscntrl(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•iscntrl(int __c)","score":1.1118042469024658,"sortText":"4071b066iscntrl","textEdit":{"newText":"iscntrl(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isdigit(int __c)","score":1.1118042469024658,"sortText":"4071b066isdigit","textEdit":{"newText":"isdigit(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isgraph","insertText":"isgraph(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isgraph(int __c)","score":1.1118042469024658,"sortText":"4071b066isgraph","textEdit":{"newText":"isgraph(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"islower","insertText":"islower(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•islower(int __c)","score":1.1118042469024658,"sortText":"4071b066islower","textEdit":{"newText":"islower(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isprint","insertText":"isprint(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isprint(int __c)","score":1.1118042469024658,"sortText":"4071b066isprint","textEdit":{"newText":"isprint(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"ispunct","insertText":"ispunct(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•ispunct(int __c)","score":1.1118042469024658,"sortText":"4071b066ispunct","textEdit":{"newText":"ispunct(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isspace","insertText":"isspace(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isspace(int __c)","score":1.1118042469024658,"sortText":"4071b066isspace","textEdit":{"newText":"isspace(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isupper(int __c)","score":1.1118042469024658,"sortText":"4071b066isupper","textEdit":{"newText":"isupper(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"ctype.h\"`"},"filterText":"isxdigit","insertText":"isxdigit(${1:int __c})","insertTextFormat":2,"kind":3,"label":"•isxdigit(int __c)","score":1.1118042469024658,"sortText":"4071b066isxdigit","textEdit":{"newText":"isxdigit(${1:int __c})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <functional>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<functional>`  \n@brief Determines if the given type \\_Tp is a function object should be treated as a subexpression when evaluating calls to function objects returned by bind(). [TR1 3.6.1]  \n@ingroup binders"},"filterText":"is_bind_expression","insertText":"std::is_bind_expression<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_bind_expression<typename _Tp>","score":1.0575764179229736,"sortText":"4078a156is_bind_expression","textEdit":{"newText":"std::is_bind_expression<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <functional>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<functional>`  \n@brief Determines if the given type \\_Tp is a placeholder in a bind() expression and, if so, which placeholder it is. [TR1 3.6.2]  \n@ingroup binders"},"filterText":"is_placeholder","insertText":"std::is_placeholder<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_placeholder<typename _Tp>","score":1.0575764179229736,"sortText":"4078a156is_placeholder","textEdit":{"newText":"std::is_placeholder<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"isfinite","insertText":"std::isfinite($0)","insertTextFormat":2,"kind":3,"label":"•std::isfinite(…)","score":1.0575764179229736,"sortText":"4078a156isfinite","textEdit":{"newText":"std::isfinite($0)","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"isgreater","insertText":"std::isgreater($0)","insertTextFormat":2,"kind":3,"label":"•std::isgreater(…)","score":1.0575764179229736,"sortText":"4078a156isgreater","textEdit":{"newText":"std::isgreater($0)","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"typename __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value && __is_arithmetic<_Up>::__value), bool>::__type","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"isgreaterequal","insertText":"std::isgreaterequal(${1:_Tp __x}, ${2:_Up __y})","insertTextFormat":2,"kind":3,"label":"•std::isgreaterequal(_Tp __x, _Up __y)","score":1.0575764179229736,"sortText":"4078a156isgreaterequal","textEdit":{"newText":"std::isgreaterequal(${1:_Tp __x}, ${2:_Up __y})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"isless","insertText":"std::isless($0)","insertTextFormat":2,"kind":3,"label":"•std::isless(…)","score":1.0575764179229736,"sortText":"4078a156isless","textEdit":{"newText":"std::isless($0)","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"typename __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value && __is_arithmetic<_Up>::__value), bool>::__type","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"islessequal","insertText":"std::islessequal(${1:_Tp __x}, ${2:_Up __y})","insertTextFormat":2,"kind":3,"label":"•std::islessequal(_Tp __x, _Up __y)","score":1.0575764179229736,"sortText":"4078a156islessequal","textEdit":{"newText":"std::islessequal(${1:_Tp __x}, ${2:_Up __y})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"islessgreater","insertText":"std::islessgreater($0)","insertTextFormat":2,"kind":3,"label":"•std::islessgreater(…)","score":1.0575764179229736,"sortText":"4078a156islessgreater","textEdit":{"newText":"std::islessgreater($0)","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"isnormal","insertText":"std::isnormal($0)","insertTextFormat":2,"kind":3,"label":"•std::isnormal(…)","score":1.0575764179229736,"sortText":"4078a156isnormal","textEdit":{"newText":"std::isnormal($0)","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <cmath>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `<cmath>`"},"filterText":"isunordered","insertText":"std::isunordered($0)","insertTextFormat":2,"kind":3,"label":"•std::isunordered(…)","score":1.0575764179229736,"sortText":"4078a156isunordered","textEdit":{"newText":"std::isunordered($0)","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"wctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"filterText":"iswalnum","insertText":"iswalnum(${1:wint_t})","insertTextFormat":2,"kind":3,"label":"•iswalnum(wint_t)","score":1.0538334846496582,"sortText":"40791bfciswalnum","textEdit":{"newText":"iswalnum(${1:wint_t})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"wctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"filterText":"iswblank","insertText":"iswblank(${1:wint_t})","insertTextFormat":2,"kind":3,"label":"•iswblank(wint_t)","score":1.0538334846496582,"sortText":"40791bfciswblank","textEdit":{"newText":"iswblank(${1:wint_t})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"wctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"filterText":"iswcntrl","insertText":"iswcntrl(${1:wint_t})","insertTextFormat":2,"kind":3,"label":"•iswcntrl(wint_t)","score":1.0538334846496582,"sortText":"40791bfciswcntrl","textEdit":{"newText":"iswcntrl(${1:wint_t})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"wctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"filterText":"iswdigit","insertText":"iswdigit(${1:wint_t})","insertTextFormat":2,"kind":3,"label":"•iswdigit(wint_t)","score":1.0538334846496582,"sortText":"40791bfciswdigit","textEdit":{"newText":"iswdigit(${1:wint_t})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"wctype.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wctype.h\"`"},"filterText":"iswspace","insertText":"iswspace(${1:wint_t})","insertTextFormat":2,"kind":3,"label":"•iswspace(wint_t)","score":1.0538334846496582,"sortText":"40791bfciswspace","textEdit":{"newText":"iswspace(${1:wint_t})","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_abstract"},"filterText":"is_abstract","insertText":"std::is_abstract<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_abstract<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_abstract","textEdit":{"newText":"std::is_abstract<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_arithmetic"},"filterText":"is_arithmetic","insertText":"std::is_arithmetic<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_arithmetic<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_arithmetic","textEdit":{"newText":"std::is_arithmetic<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_array"},"filterText":"is_array","insertText":"std::is_array<${1:typename}>","insertTextFormat":2,"kind":22,"label":"•std::is_array<typename>","score":0.92650353908538818,"sortText":"4092d0aais_array","textEdit":{"newText":"std::is_array<${1:typename}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_assignable"},"filterText":"is_assignable","insertText":"std::is_assignable<${1:typename _Tp}, ${2:typename _Up}>","insertTextFormat":2,"kind":22,"label":"•std::is_assignable<typename _Tp, typename _Up>","score":0.92650353908538818,"sortText":"4092d0aais_assignable","textEdit":{"newText":"std::is_assignable<${1:typename _Tp}, ${2:typename _Up}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_base_of"},"filterText":"is_base_of","insertText":"std::is_base_of<${1:typename}, ${2:typename}>","insertTextFormat":2,"kind":22,"label":"•std::is_base_of<typename, typename>","score":0.92650353908538818,"sortText":"4092d0aais_base_of","textEdit":{"newText":"std::is_base_of<${1:typename}, ${2:typename}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_class"},"filterText":"is_class","insertText":"std::is_class<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_class<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_class","textEdit":{"newText":"std::is_class<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_compound"},"filterText":"is_compound","insertText":"std::is_compound<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_compound<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_compound","textEdit":{"newText":"std::is_compound<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_const"},"filterText":"is_const","insertText":"std::is_const<${1:typename}>","insertTextFormat":2,"kind":22,"label":"•std::is_const<typename>","score":0.92650353908538818,"sortText":"4092d0aais_const","textEdit":{"newText":"std::is_const<${1:typename}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_constructible"},"filterText":"is_constructible","insertText":"std::is_constructible<${1:typename _Tp}, ${2:typename _Args}>","insertTextFormat":2,"kind":22,"label":"•std::is_constructible<typename _Tp, typename _Args>","score":0.92650353908538818,"sortText":"4092d0aais_constructible","textEdit":{"newText":"std::is_constructible<${1:typename _Tp}, ${2:typename _Args}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_convertible"},"filterText":"is_convertible","insertText":"std::is_convertible<${1:typename _From}, ${2:typename _To}>","insertTextFormat":2,"kind":22,"label":"•std::is_convertible<typename _From, typename _To>","score":0.92650353908538818,"sortText":"4092d0aais_convertible","textEdit":{"newText":"std::is_convertible<${1:typename _From}, ${2:typename _To}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_copy_assignable"},"filterText":"is_copy_assignable","insertText":"std::is_copy_assignable<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_copy_assignable<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_copy_assignable","textEdit":{"newText":"std::is_copy_assignable<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_copy_constructible"},"filterText":"is_copy_constructible","insertText":"std::is_copy_constructible<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_copy_constructible<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_copy_constructible","textEdit":{"newText":"std::is_copy_constructible<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_default_constructible"},"filterText":"is_default_constructible","insertText":"std::is_default_constructible<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_default_constructible<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_default_constructible","textEdit":{"newText":"std::is_default_constructible<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_destructible"},"filterText":"is_destructible","insertText":"std::is_destructible<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_destructible<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_destructible","textEdit":{"newText":"std::is_destructible<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_empty"},"filterText":"is_empty","insertText":"std::is_empty<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_empty<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_empty","textEdit":{"newText":"std::is_empty<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_enum"},"filterText":"is_enum","insertText":"std::is_enum<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_enum<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_enum","textEdit":{"newText":"std::is_enum<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_floating_point"},"filterText":"is_floating_point","insertText":"std::is_floating_point<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_floating_point<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_floating_point","textEdit":{"newText":"std::is_floating_point<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_function"},"filterText":"is_function","insertText":"std::is_function<${1:typename}>","insertTextFormat":2,"kind":22,"label":"•std::is_function<typename>","score":0.92650353908538818,"sortText":"4092d0aais_function","textEdit":{"newText":"std::is_function<${1:typename}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_fundamental"},"filterText":"is_fundamental","insertText":"std::is_fundamental<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_fundamental<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_fundamental","textEdit":{"newText":"std::is_fundamental<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_integral"},"filterText":"is_integral","insertText":"std::is_integral<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_integral<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_integral","textEdit":{"newText":"std::is_integral<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_literal_type"},"filterText":"is_literal_type","insertText":"std::is_literal_type<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_literal_type<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_literal_type","textEdit":{"newText":"std::is_literal_type<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_lvalue_reference"},"filterText":"is_lvalue_reference","insertText":"std::is_lvalue_reference<${1:typename}>","insertTextFormat":2,"kind":22,"label":"•std::is_lvalue_reference<typename>","score":0.92650353908538818,"sortText":"4092d0aais_lvalue_reference","textEdit":{"newText":"std::is_lvalue_reference<${1:typename}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_member_function_pointer"},"filterText":"is_member_function_pointer","insertText":"std::is_member_function_pointer<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_member_function_pointer<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_member_function_pointer","textEdit":{"newText":"std::is_member_function_pointer<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_member_object_pointer"},"filterText":"is_member_object_pointer","insertText":"std::is_member_object_pointer<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_member_object_pointer<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_member_object_pointer","textEdit":{"newText":"std::is_member_object_pointer<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_member_pointer"},"filterText":"is_member_pointer","insertText":"std::is_member_pointer<${1:typename}>","insertTextFormat":2,"kind":22,"label":"•std::is_member_pointer<typename>","score":0.92650353908538818,"sortText":"4092d0aais_member_pointer","textEdit":{"newText":"std::is_member_pointer<${1:typename}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_move_assignable"},"filterText":"is_move_assignable","insertText":"std::is_move_assignable<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_move_assignable<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_move_assignable","textEdit":{"newText":"std::is_move_assignable<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_nothrow_assignable"},"filterText":"is_nothrow_assignable","insertText":"std::is_nothrow_assignable<${1:typename _Tp}, ${2:typename _Up}>","insertTextFormat":2,"kind":22,"label":"•std::is_nothrow_assignable<typename _Tp, typename _Up>","score":0.92650353908538818,"sortText":"4092d0aais_nothrow_assignable","textEdit":{"newText":"std::is_nothrow_assignable<${1:typename _Tp}, ${2:typename _Up}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_nothrow_constructible"},"filterText":"is_nothrow_constructible","insertText":"std::is_nothrow_constructible<${1:typename _Tp}, ${2:typename _Args}>","insertTextFormat":2,"kind":22,"label":"•std::is_nothrow_constructible<typename _Tp, typename _Args>","score":0.92650353908538818,"sortText":"4092d0aais_nothrow_constructible","textEdit":{"newText":"std::is_nothrow_constructible<${1:typename _Tp}, ${2:typename _Args}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_nothrow_copy_assignable"},"filterText":"is_nothrow_copy_assignable","insertText":"std::is_nothrow_copy_assignable<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_nothrow_copy_assignable<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_nothrow_copy_assignable","textEdit":{"newText":"std::is_nothrow_copy_assignable<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_nothrow_copy_constructible"},"filterText":"is_nothrow_copy_constructible","insertText":"std::is_nothrow_copy_constructible<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_nothrow_copy_constructible<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_nothrow_copy_constructible","textEdit":{"newText":"std::is_nothrow_copy_constructible<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_nothrow_destructible"},"filterText":"is_nothrow_destructible","insertText":"std::is_nothrow_destructible<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_nothrow_destructible<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_nothrow_destructible","textEdit":{"newText":"std::is_nothrow_destructible<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_nothrow_move_assignable"},"filterText":"is_nothrow_move_assignable","insertText":"std::is_nothrow_move_assignable<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_nothrow_move_assignable<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_nothrow_move_assignable","textEdit":{"newText":"std::is_nothrow_move_assignable<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_nothrow_move_constructible"},"filterText":"is_nothrow_move_constructible","insertText":"std::is_nothrow_move_constructible<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_nothrow_move_constructible<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_nothrow_move_constructible","textEdit":{"newText":"std::is_nothrow_move_constructible<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_null_pointer (LWG 2247)."},"filterText":"is_null_pointer","insertText":"std::is_null_pointer<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_null_pointer<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_null_pointer","textEdit":{"newText":"std::is_null_pointer<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_object"},"filterText":"is_object","insertText":"std::is_object<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_object<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_object","textEdit":{"newText":"std::is_object<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_pod Could use is_standard_layout && is_trivial instead of the builtin."},"filterText":"is_pod","insertText":"std::is_pod<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_pod<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_pod","textEdit":{"newText":"std::is_pod<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_pointer"},"filterText":"is_pointer","insertText":"std::is_pointer<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_pointer<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_pointer","textEdit":{"newText":"std::is_pointer<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_polymorphic"},"filterText":"is_polymorphic","insertText":"std::is_polymorphic<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_polymorphic<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_polymorphic","textEdit":{"newText":"std::is_polymorphic<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_reference"},"filterText":"is_reference","insertText":"std::is_reference<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_reference<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_reference","textEdit":{"newText":"std::is_reference<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_rvalue_reference"},"filterText":"is_rvalue_reference","insertText":"std::is_rvalue_reference<${1:typename}>","insertTextFormat":2,"kind":22,"label":"•std::is_rvalue_reference<typename>","score":0.92650353908538818,"sortText":"4092d0aais_rvalue_reference","textEdit":{"newText":"std::is_rvalue_reference<${1:typename}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_same"},"filterText":"is_same","insertText":"std::is_same<${1:typename}, ${2:typename}>","insertTextFormat":2,"kind":22,"label":"•std::is_same<typename, typename>","score":0.92650353908538818,"sortText":"4092d0aais_same","textEdit":{"newText":"std::is_same<${1:typename}, ${2:typename}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_scalar"},"filterText":"is_scalar","insertText":"std::is_scalar<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_scalar<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_scalar","textEdit":{"newText":"std::is_scalar<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_signed"},"filterText":"is_signed","insertText":"std::is_signed<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_signed<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_signed","textEdit":{"newText":"std::is_signed<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_standard_layout"},"filterText":"is_standard_layout","insertText":"std::is_standard_layout<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_standard_layout<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_standard_layout","textEdit":{"newText":"std::is_standard_layout<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivial"},"filterText":"is_trivial","insertText":"std::is_trivial<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivial<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_trivial","textEdit":{"newText":"std::is_trivial<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_assignable"},"filterText":"is_trivially_assignable","insertText":"std::is_trivially_assignable<${1:typename _Tp}, ${2:typename _Up}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_assignable<typename _Tp, typename _Up>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_assignable","textEdit":{"newText":"std::is_trivially_assignable<${1:typename _Tp}, ${2:typename _Up}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_constructible"},"filterText":"is_trivially_constructible","insertText":"std::is_trivially_constructible<${1:typename _Tp}, ${2:typename _Args}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_constructible<typename _Tp, typename _Args>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_constructible","textEdit":{"newText":"std::is_trivially_constructible<${1:typename _Tp}, ${2:typename _Args}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_copy_assignable"},"filterText":"is_trivially_copy_assignable","insertText":"std::is_trivially_copy_assignable<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_copy_assignable<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_copy_assignable","textEdit":{"newText":"std::is_trivially_copy_assignable<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_copy_constructible"},"filterText":"is_trivially_copy_constructible","insertText":"std::is_trivially_copy_constructible<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_copy_constructible<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_copy_constructible","textEdit":{"newText":"std::is_trivially_copy_constructible<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_copyable"},"filterText":"is_trivially_copyable","insertText":"std::is_trivially_copyable<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_copyable<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_copyable","textEdit":{"newText":"std::is_trivially_copyable<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_default_constructible"},"filterText":"is_trivially_default_constructible","insertText":"std::is_trivially_default_constructible<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_default_constructible<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_default_constructible","textEdit":{"newText":"std::is_trivially_default_constructible<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_destructible"},"filterText":"is_trivially_destructible","insertText":"std::is_trivially_destructible<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_destructible<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_destructible","textEdit":{"newText":"std::is_trivially_destructible<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_move_assignable"},"filterText":"is_trivially_move_assignable","insertText":"std::is_trivially_move_assignable<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_move_assignable<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_move_assignable","textEdit":{"newText":"std::is_trivially_move_assignable<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_trivially_move_constructible"},"filterText":"is_trivially_move_constructible","insertText":"std::is_trivially_move_constructible<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_trivially_move_constructible<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_trivially_move_constructible","textEdit":{"newText":"std::is_trivially_move_constructible<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_union"},"filterText":"is_union","insertText":"std::is_union<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_union<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_union","textEdit":{"newText":"std::is_union<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_unsigned"},"filterText":"is_unsigned","insertText":"std::is_unsigned<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_unsigned<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_unsigned","textEdit":{"newText":"std::is_unsigned<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_void"},"filterText":"is_void","insertText":"std::is_void<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_void<typename _Tp>","score":0.92650353908538818,"sortText":"4092d0aais_void","textEdit":{"newText":"std::is_void<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_volatile"},"filterText":"is_volatile","insertText":"std::is_volatile<${1:typename}>","insertTextFormat":2,"kind":22,"label":"•std::is_volatile<typename>","score":0.92650353908538818,"sortText":"4092d0aais_volatile","textEdit":{"newText":"std::is_volatile<${1:typename}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <system_error>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<system_error>`  \nis_error_code_enum"},"filterText":"is_error_code_enum","insertText":"std::is_error_code_enum<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_error_code_enum<typename _Tp>","score":0.87819457054138184,"sortText":"409f2ea4is_error_code_enum","textEdit":{"newText":"std::is_error_code_enum<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <system_error>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<system_error>`  \nis_error_condition_enum"},"filterText":"is_error_condition_enum","insertText":"std::is_error_condition_enum<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_error_condition_enum<typename _Tp>","score":0.87819457054138184,"sortText":"409f2ea4is_error_condition_enum","textEdit":{"newText":"std::is_error_condition_enum<${1:typename _Tp}>","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <istream>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<istream>`  \nBase class for @c char input streams."},"filterText":"istream","insertText":"std::istream","insertTextFormat":2,"kind":8,"label":"•std::istream","score":0.87819457054138184,"sortText":"409f2ea4istream","textEdit":{"newText":"std::istream","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}}}}]}}Content-Length: 4106

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":5},"start":{"character":10,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'is'","range":{"end":{"character":21,"line":5},"start":{"character":19,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":36}}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":37},"contentChanges":[{"range":{"start":{"line":5,"character":21},"end":{"line":5,"character":21}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 225

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":22},"context":{"triggerKind":3}},"id":219,"jsonrpc":"2.0"}
<<<
Content-Length: 25039

{"id":219,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"AsyncWebServer *","filterText":"iserver","insertText":"iserver","insertTextFormat":2,"kind":6,"label":" iserver","score":39.600002288818359,"sortText":"3de19999iserver","textEdit":{"newText":"iserver","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"detail":"void","filterText":"initWebServer","insertText":"initWebServer()","insertTextFormat":2,"kind":2,"label":" initWebServer()","score":14.520001411437988,"sortText":"3ed1c28einitWebServer","textEdit":{"newText":"initWebServer()","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp32-hal-i2c.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"i2c_err_t","documentation":{"kind":"markdown","value":"From `\"esp32-hal-i2c.h\"`"},"filterText":"i2cSetFrequency","insertText":"i2cSetFrequency(${1:i2c_t *i2c}, ${2:uint32_t clk_speed})","insertTextFormat":2,"kind":3,"label":"•i2cSetFrequency(i2c_t *i2c, uint32_t clk_speed)","score":1.1826096773147583,"sortText":"4083b5bdi2cSetFrequency","textEdit":{"newText":"i2cSetFrequency(${1:i2c_t *i2c}, ${2:uint32_t clk_speed})","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"dhcpserver/dhcpserver_options.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nRFC 1497 Vendor Extensions"},"filterText":"IMPRESS_SERVER","insertText":"IMPRESS_SERVER","insertTextFormat":2,"kind":20,"label":"•IMPRESS_SERVER","score":1.2848509550094604,"sortText":"40894f01IMPRESS_SERVER","textEdit":{"newText":"IMPRESS_SERVER","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip4.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"lwip/ip4.h\"`"},"filterText":"ip4_set_default_multicast_netif","insertText":"ip4_set_default_multicast_netif(${1:struct netif *default_multicast_netif})","insertTextFormat":2,"kind":3,"label":"•ip4_set_default_multicast_netif(struct netif *default_multicast_netif)","score":0.96751213073730469,"sortText":"40b198efip4_set_default_multicast_netif","textEdit":{"newText":"ip4_set_default_multicast_netif(${1:struct netif *default_multicast_netif})","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"lwip/ip6.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"const ip_addr_t *","documentation":{"kind":"markdown","value":"From `\"lwip/ip6.h\"`"},"filterText":"ip6_select_source_address","insertText":"ip6_select_source_address(${1:struct netif *netif}, ${2:const ip6_addr_t *dest})","insertTextFormat":2,"kind":3,"label":"•ip6_select_source_address(struct netif *netif, const ip6_addr_t *dest)","score":0.96751213073730469,"sortText":"40b198efip6_select_source_address","textEdit":{"newText":"ip6_select_source_address(${1:struct netif *netif}, ${2:const ip6_addr_t *dest})","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_empty"},"filterText":"is_empty","insertText":"std::is_empty<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_empty<typename _Tp>","score":0.92650341987609863,"sortText":"40ba588fis_empty","textEdit":{"newText":"std::is_empty<${1:typename _Tp}>","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <type_traits>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<type_traits>`  \nis_enum"},"filterText":"is_enum","insertText":"std::is_enum<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_enum<typename _Tp>","score":0.92650341987609863,"sortText":"40ba588fis_enum","textEdit":{"newText":"std::is_enum<${1:typename _Tp}>","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"rom/ets_sys.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"rom/ets_sys.h\"`  \n@brief Attach an CPU interrupt to a hardware source.  \nWe have 4 steps to use an interrupt:  \n1.Attach hardware interrupt source to CPU. intr_matrix_set(0, ETS_WIFI_MAC_INTR_SOURCE, ETS_WMAC_INUM);  \n2.Set interrupt handler. xt_set_interrupt_handler(ETS_WMAC_INUM, func, NULL);  \n3.Enable interrupt for CPU. xt_ints_on(1 << ETS_WMAC_INUM);  \n4.Enable interrupt in the module.  \n@param int cpu_no : The CPU which the interrupt number belongs.  \n@param uint32_t model_num : The interrupt hardware source number, please see the interrupt hardware source table.  \n@param uint32_t intr_num : The interrupt number CPU, please see the interrupt cpu using table.  \n@return None"},"filterText":"intr_matrix_set","insertText":"intr_matrix_set(${1:int cpu_no}, ${2:uint32_t model_num}, ${3:uint32_t intr_num})","insertTextFormat":2,"kind":3,"label":"•intr_matrix_set(int cpu_no, uint32_t model_num, uint32_t intr_num)","score":1.0063711404800415,"sortText":"40bec6d9intr_matrix_set","textEdit":{"newText":"intr_matrix_set(${1:int cpu_no}, ${2:uint32_t model_num}, ${3:uint32_t intr_num})","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <system_error>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<system_error>`  \nis_error_code_enum"},"filterText":"is_error_code_enum","insertText":"std::is_error_code_enum<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_error_code_enum<typename _Tp>","score":0.87819457054138184,"sortText":"40c4a6ddis_error_code_enum","textEdit":{"newText":"std::is_error_code_enum<${1:typename _Tp}>","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <system_error>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<system_error>`  \nis_error_condition_enum"},"filterText":"is_error_condition_enum","insertText":"std::is_error_condition_enum<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::is_error_condition_enum<typename _Tp>","score":0.87819457054138184,"sortText":"40c4a6ddis_error_condition_enum","textEdit":{"newText":"std::is_error_condition_enum<${1:typename _Tp}>","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Polyfills/type_traits/is_enum.hpp\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Polyfills/type_traits/is_enum.hpp\"`"},"filterText":"is_enum","insertText":"ArduinoJson6173_91::is_enum<${1:typename T}>","insertTextFormat":2,"kind":22,"label":"•ArduinoJson6173_91::is_enum<typename T>","score":0.69606739282608032,"sortText":"40eb8170is_enum","textEdit":{"newText":"ArduinoJson6173_91::is_enum<${1:typename T}>","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"dhcpserver/dhcpserver_options.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nApplication and Service Parameters"},"filterText":"DEFAULT_IRC_SERVER","insertText":"DEFAULT_IRC_SERVER","insertTextFormat":2,"kind":20,"label":"•DEFAULT_IRC_SERVER","score":1.28485107421875,"sortText":"4124b800DEFAULT_IRC_SERVER","textEdit":{"newText":"DEFAULT_IRC_SERVER","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"dhcpserver/dhcpserver_options.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nApplication and Service Parameters"},"filterText":"NETWORK_INFORMATION_SERVERS","insertText":"NETWORK_INFORMATION_SERVERS","insertTextFormat":2,"kind":20,"label":"•NETWORK_INFORMATION_SERVERS","score":1.28485107421875,"sortText":"4124b800NETWORK_INFORMATION_SERVERS","textEdit":{"newText":"NETWORK_INFORMATION_SERVERS","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"dhcpserver/dhcpserver_options.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nApplication and Service Parameters"},"filterText":"NETWORK_INFORMATION_SERVICE_PLUS_SERVERS","insertText":"NETWORK_INFORMATION_SERVICE_PLUS_SERVERS","insertTextFormat":2,"kind":20,"label":"•NETWORK_INFORMATION_SERVICE_PLUS_SERVERS","score":1.28485107421875,"sortText":"4124b800NETWORK_INFORMATION_SERVICE_PLUS_SERVERS","textEdit":{"newText":"NETWORK_INFORMATION_SERVICE_PLUS_SERVERS","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp_intr_alloc.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"esp_intr_alloc.h\"`  \n@brief Set the \"in IRAM\" status of the handler.  \n@note Does not work on shared interrupts.  \n@param handle The handle, as obtained by esp_intr_alloc or esp_intr_alloc_intrstatus  \n@param is_in_iram Whether the handler associated with this handle resides in IRAM.  \nHandlers residing in IRAM can be called when cache is disabled.  \n@return ESP_ERR_INVALID_ARG if the combination of arguments is invalid.  \nESP_OK otherwise"},"filterText":"esp_intr_set_in_iram","insertText":"esp_intr_set_in_iram(${1:intr_handle_t handle}, ${2:bool is_in_iram})","insertTextFormat":2,"kind":3,"label":"•esp_intr_set_in_iram(intr_handle_t handle, bool is_in_iram)","score":0.96751213073730469,"sortText":"413198efesp_intr_set_in_iram","textEdit":{"newText":"esp_intr_set_in_iram(${1:intr_handle_t handle}, ${2:bool is_in_iram})","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"xtensa/hal.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"const unsigned char","documentation":{"kind":"markdown","value":"From `\"xtensa/hal.h\"`  \nnumber of cache sets in log2(lines per way)"},"filterText":"Xthal_icache_setwidth","insertText":"Xthal_icache_setwidth","insertTextFormat":2,"kind":6,"label":"•Xthal_icache_setwidth","score":0.93569731712341309,"sortText":"41386273Xthal_icache_setwidth","textEdit":{"newText":"Xthal_icache_setwidth","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"xtensa/hal.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"xtensa/hal.h\"`  \nset number of icache ways enabled"},"filterText":"xthal_icache_set_ways","insertText":"xthal_icache_set_ways(${1:unsigned int ways})","insertTextFormat":2,"kind":3,"label":"•xthal_icache_set_ways(unsigned int ways)","score":0.93569731712341309,"sortText":"41386273xthal_icache_set_ways","textEdit":{"newText":"xthal_icache_set_ways(${1:unsigned int ways})","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp_image_format.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_image_format.h\"`  \nHeader of binary image segment"},"filterText":"esp_image_segment_header_t","insertText":"esp_image_segment_header_t","insertTextFormat":2,"kind":8,"label":"•esp_image_segment_header_t","score":0.82743543386459351,"sortText":"414f7afeesp_image_segment_header_t","textEdit":{"newText":"esp_image_segment_header_t","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp_crosscore_int.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"esp_crosscore_int.h\"`  \nSend an interrupt to a CPU indicating it should update its CCOMPARE1 value due to a frequency switch.  \nThis is used internally when dynamic frequency switching is enabled, and should not be called from application code.  \n@param core_id Core that should update its CCOMPARE1 value"},"filterText":"esp_crosscore_int_send_freq_switch","insertText":"esp_crosscore_int_send_freq_switch(${1:int core_id})","insertTextFormat":2,"kind":3,"label":"•esp_crosscore_int_send_freq_switch(int core_id)","score":1.0063711404800415,"sortText":"41543ef9esp_crosscore_int_send_freq_switch","textEdit":{"newText":"esp_crosscore_int_send_freq_switch(${1:int core_id})","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp_crosscore_int.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"esp_crosscore_int.h\"`  \nSend an interrupt to a CPU indicating it should yield its currently running task in favour of a higher-priority task that presumably just woke up.  \nThis is used internally by FreeRTOS in multicore mode and should not be called by the user.  \n@param core_id Core that should do the yielding"},"filterText":"esp_crosscore_int_send_yield","insertText":"esp_crosscore_int_send_yield(${1:int core_id})","insertTextFormat":2,"kind":3,"label":"•esp_crosscore_int_send_yield(int core_id)","score":1.0063711404800415,"sortText":"41543ef9esp_crosscore_int_send_yield","textEdit":{"newText":"esp_crosscore_int_send_yield(${1:int core_id})","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"driver/gpio.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"driver/gpio.h\"`  \n@brief Install the driver's GPIO ISR handler service, which allows per-pin GPIO interrupt handlers.  \nThis function is incompatible with gpio_isr_register() - if that function is used, a single global ISR is registered for all GPIO interrupts. If this function is used, the ISR service provides a global GPIO ISR and individual pin handlers are registered via the gpio_isr_handler_add() function.  \n@param intr_alloc_flags Flags used to allocate the interrupt. One or multiple (ORred) ESP_INTR_FLAG\\_\\* values. See esp_intr_alloc.h for more info.  \n@return  \n\\- ESP_OK Success  \n\\- ESP_ERR_NO_MEM No memory to install this service  \n\\- ESP_ERR_INVALID_STATE ISR service already installed.  \n\\- ESP_ERR_NOT_FOUND No free interrupt found with the specified flags  \n\\- ESP_ERR_INVALID_ARG GPIO error"},"filterText":"gpio_install_isr_service","insertText":"gpio_install_isr_service(${1:int intr_alloc_flags})","insertTextFormat":2,"kind":3,"label":"•gpio_install_isr_service(int intr_alloc_flags)","score":1.0063711404800415,"sortText":"41543ef9gpio_install_isr_service","textEdit":{"newText":"gpio_install_isr_service(${1:int intr_alloc_flags})","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"driver/gpio.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"driver/gpio.h\"`  \n@brief Uninstall the driver's GPIO ISR service, freeing related resources."},"filterText":"gpio_uninstall_isr_service","insertText":"gpio_uninstall_isr_service()","insertTextFormat":2,"kind":3,"label":"•gpio_uninstall_isr_service()","score":1.0063711404800415,"sortText":"41543ef9gpio_uninstall_isr_service","textEdit":{"newText":"gpio_uninstall_isr_service()","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_ioctl_cmd_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nSet the configuration of STA's HT2040 coexist management"},"filterText":"WIFI_IOCTL_SET_STA_HT2040_COEX","insertText":"WIFI_IOCTL_SET_STA_HT2040_COEX","insertTextFormat":2,"kind":20,"label":"•WIFI_IOCTL_SET_STA_HT2040_COEX","score":0.96751230955123901,"sortText":"415ae0beWIFI_IOCTL_SET_STA_HT2040_COEX","textEdit":{"newText":"WIFI_IOCTL_SET_STA_HT2040_COEX","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_crypto_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_crypto_types.h\"`  \n@brief Check whether WPS IE indicates active PBC  \n@msg: WPS IE contents from Beacon or Probe Response frame Returns: 1 if PBC Registrar is active, 0 if not"},"filterText":"esp_wps_is_selected_pbc_registrar_t","insertText":"esp_wps_is_selected_pbc_registrar_t","insertTextFormat":2,"kind":8,"label":"•esp_wps_is_selected_pbc_registrar_t","score":0.96751230955123901,"sortText":"415ae0beesp_wps_is_selected_pbc_registrar_t","textEdit":{"newText":"esp_wps_is_selected_pbc_registrar_t","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_crypto_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `\"esp_wifi_crypto_types.h\"`  \n@brief Check whether WPS IE indicates active PIN  \n@msg: WPS IE contents from Beacon or Probe Response frame Returns: 1 if PIN Registrar is active, 0 if not"},"filterText":"esp_wps_is_selected_pin_registrar_t","insertText":"esp_wps_is_selected_pin_registrar_t","insertTextFormat":2,"kind":8,"label":"•esp_wps_is_selected_pin_registrar_t","score":0.96751230955123901,"sortText":"415ae0beesp_wps_is_selected_pin_registrar_t","textEdit":{"newText":"esp_wps_is_selected_pin_registrar_t","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"dhcpserver/dhcpserver_options.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nApplication and Service Parameters"},"filterText":"NETWORK_INFORMATION_SERVICE_DOMAIN","insertText":"NETWORK_INFORMATION_SERVICE_DOMAIN","insertTextFormat":2,"kind":20,"label":"•NETWORK_INFORMATION_SERVICE_DOMAIN","score":0.8565673828125,"sortText":"416dd000NETWORK_INFORMATION_SERVICE_DOMAIN","textEdit":{"newText":"NETWORK_INFORMATION_SERVICE_DOMAIN","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"dhcpserver/dhcpserver_options.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nApplication and Service Parameters"},"filterText":"NETWORK_INFORMATION_SERVICE_PLUS_DOMAIN","insertText":"NETWORK_INFORMATION_SERVICE_PLUS_DOMAIN","insertTextFormat":2,"kind":20,"label":"•NETWORK_INFORMATION_SERVICE_PLUS_DOMAIN","score":0.8565673828125,"sortText":"416dd000NETWORK_INFORMATION_SERVICE_PLUS_DOMAIN","textEdit":{"newText":"NETWORK_INFORMATION_SERVICE_PLUS_DOMAIN","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"mdns.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"esp_err_t","documentation":{"kind":"markdown","value":"From `\"mdns.h\"`  \n@brief Set/Add TXT item for service TXT record  \n@param service_type service type (\\_http, \\_ftp, etc)  \n@param proto service protocol (\\_tcp, \\_udp)  \n@param key the key that you want to add/update  \n@param value the new value of the key  \n@return  \n\\- ESP_OK success  \n\\- ESP_ERR_INVALID_ARG Parameter error  \n\\- ESP_ERR_NOT_FOUND Service not found  \n\\- ESP_ERR_NO_MEM memory error"},"filterText":"mdns_service_txt_item_set","insertText":"mdns_service_txt_item_set(${1:const char *service_type}, ${2:const char *proto}, ${3:const char *key}, ${4:const char *value})","insertTextFormat":2,"kind":3,"label":"•mdns_service_txt_item_set(const char *service_type, const char *proto, const char *key, const char *value)","score":0.82743531465530396,"sortText":"41ac2d33mdns_service_txt_item_set","textEdit":{"newText":"mdns_service_txt_item_set(${1:const char *service_type}, ${2:const char *proto}, ${3:const char *key}, ${4:const char *value})","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <tuple>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<tuple>`"},"filterText":"__is_empty_non_tuple","insertText":"std::__is_empty_non_tuple<${1:typename _Tp}>","insertTextFormat":2,"kind":22,"label":"•std::__is_empty_non_tuple<typename _Tp>","score":0.092650346457958221,"sortText":"42e1e072__is_empty_non_tuple","textEdit":{"newText":"std::__is_empty_non_tuple<${1:typename _Tp}>","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <ios>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<ios>`"},"filterText":"_Ios_Seekdir","insertText":"std::_Ios_Seekdir","insertTextFormat":2,"kind":13,"label":"•std::_Ios_Seekdir","score":0.083864264190196991,"sortText":"42f0df24_Ios_Seekdir","textEdit":{"newText":"std::_Ios_Seekdir","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include <ios>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"std::_Ios_Seekdir","documentation":{"kind":"markdown","value":"From `<ios>`"},"filterText":"_S_ios_seekdir_end","insertText":"std::_S_ios_seekdir_end","insertTextFormat":2,"kind":20,"label":"•std::_S_ios_seekdir_end","score":0.083864264190196991,"sortText":"431afea1_S_ios_seekdir_end","textEdit":{"newText":"std::_S_ios_seekdir_end","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"dhcpserver/dhcpserver_options.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"dhcp_msg_option","documentation":{"kind":"markdown","value":"From `\"dhcpserver/dhcpserver_options.h\"`  \nApplication and Service Parameters"},"filterText":"NETBIOS_OVER_TCP_IP_DATAGRAM_DISTRIBUTION_SERVER","insertText":"NETBIOS_OVER_TCP_IP_DATAGRAM_DISTRIBUTION_SERVER","insertTextFormat":2,"kind":20,"label":"•NETBIOS_OVER_TCP_IP_DATAGRAM_DISTRIBUTION_SERVER","score":1.1000000238418579,"sortText":"80000000NETBIOS_OVER_TCP_IP_DATAGRAM_DISTRIBUTION_SERVER","textEdit":{"newText":"NETBIOS_OVER_TCP_IP_DATAGRAM_DISTRIBUTION_SERVER","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}},{"additionalTextEdits":[{"newText":"#include \"esp_wifi_types.h\"\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"wifi_auth_mode_t","documentation":{"kind":"markdown","value":"From `\"esp_wifi_types.h\"`  \nauthenticate mode : WPA2_ENTERPRISE"},"filterText":"WIFI_AUTH_WPA2_ENTERPRISE","insertText":"WIFI_AUTH_WPA2_ENTERPRISE","insertTextFormat":2,"kind":20,"label":"•WIFI_AUTH_WPA2_ENTERPRISE","score":1.1000000238418579,"sortText":"80000000WIFI_AUTH_WPA2_ENTERPRISE","textEdit":{"newText":"WIFI_AUTH_WPA2_ENTERPRISE","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}}}}]}}Content-Length: 4107

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":5},"start":{"character":10,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ise'","range":{"end":{"character":22,"line":5},"start":{"character":19,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":37}}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":38},"contentChanges":[{"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":22}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4108

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":5},"start":{"character":10,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'iser'","range":{"end":{"character":23,"line":5},"start":{"character":19,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":38}}
>>>
Content-Length: 448

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":23},"end":{"line":5,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'iser'"}]}},"id":220,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":220,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":39},"contentChanges":[{"range":{"start":{"line":5,"character":23},"end":{"line":5,"character":23}},"text":"v"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4109

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":5},"start":{"character":10,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'iserv'","range":{"end":{"character":24,"line":5},"start":{"character":19,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":39}}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":40},"contentChanges":[{"range":{"start":{"line":5,"character":24},"end":{"line":5,"character":24}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4739

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'iserve'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":25,"line":5},"start":{"character":19,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:20: error: use of undeclared identifier 'iserve'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":40}}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":41},"contentChanges":[{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":41}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":26},"end":{"line":5,"character":26}},"context":{"diagnostics":[]}},"id":221,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":221,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":26},"end":{"line":5,"character":26}},"context":{"diagnostics":[]}},"id":222,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":222,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":42},"contentChanges":[{"range":{"start":{"line":5,"character":26},"end":{"line":5,"character":26}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":42}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":27},"end":{"line":5,"character":27}},"context":{"diagnostics":[]}},"id":223,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":223,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":27},"end":{"line":5,"character":27}},"context":{"diagnostics":[]}},"id":224,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":224,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":2,"character":50}},"id":225,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"id":225,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}}}}
>>>
Content-Length: 479

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":45},"end":{"line":2,"character":52}},"severity":3,"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?"}]}},"id":226,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":226,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":6,"character":1},"end":{"line":6,"character":1}},"context":{"diagnostics":[]}},"id":227,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":227,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":18}},"id":228,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"id":228,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":21,"line":14},"start":{"character":15,"line":14}}},{"kind":1,"range":{"end":{"character":24,"line":17},"start":{"character":18,"line":17}}}]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":18}},"context":{"diagnostics":[]}},"id":229,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":229,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":20,"character":27}},"id":230,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":230,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":227},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":225},"jsonrpc":"2.0"}Content-Length: 282

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":18}},"text":"\u0026"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":226},"jsonrpc":"2.0"}Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":19},"end":{"line":17,"character":19}},"context":{"diagnostics":[]}},"id":231,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":231,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":20}},"id":232,"jsonrpc":"2.0"}
<<<
Content-Length: 1607

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_init","message":"No matching constructor for initialization of 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 3 were provided","range":{"end":{"character":10,"line":17},"start":{"character":7,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":15}}Content-Length: 215

{"id":232,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":21,"line":14},"start":{"character":15,"line":14}}},{"kind":1,"range":{"end":{"character":25,"line":17},"start":{"character":19,"line":17}}}]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":229},"jsonrpc":"2.0"}Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":26}},"id":233,"jsonrpc":"2.0"}
<<<
Content-Length: 482

{"id":233,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":15},"start":{"character":15,"line":15}}},{"kind":1,"range":{"end":{"character":28,"line":17},"start":{"character":26,"line":17}}},{"kind":1,"range":{"end":{"character":6,"line":108},"start":{"character":4,"line":108}}},{"kind":1,"range":{"end":{"character":6,"line":111},"start":{"character":4,"line":111}}},{"kind":1,"range":{"end":{"character":6,"line":114},"start":{"character":4,"line":114}}}]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":26},"end":{"line":17,"character":26}},"context":{"diagnostics":[]}},"id":234,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":234,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":228},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":230},"jsonrpc":"2.0"}Content-Length: 282

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":17,"character":26},"end":{"line":17,"character":26}},"text":"\u0026"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":231},"jsonrpc":"2.0"}Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":27},"end":{"line":17,"character":27}},"context":{"diagnostics":[]}},"id":235,"jsonrpc":"2.0"}
<<<
Content-Length: 1607

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_init","message":"No matching constructor for initialization of 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 3 were provided","range":{"end":{"character":10,"line":17},"start":{"character":7,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp","version":16}}Content-Length: 38

{"id":235,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":6,"character":16}},"id":236,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":236,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":27},"end":{"line":17,"character":27}},"context":{"diagnostics":[]}},"id":237,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":237,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":5,"character":16}},"id":238,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":238,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":17,"character":8}},"id":239,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"id":239,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `aws`  \n\n---\nType: `class BcbAws`  \n\n---\n```cpp\nBcbAws aws = <recovery - expr>(&state, &server, &ws)\n```"},"range":{"end":{"character":10,"line":17},"start":{"character":7,"line":17}}}}
>>>
Content-Length: 839

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":10}},"severity":1,"code":"ovl_no_viable_function_in_init","source":"clang","message":"No matching constructor for initialization of 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:13:7:\nnote: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 3 were provided"}]}},"id":240,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":240,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":39,"character":23}},"id":241,"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"id":241,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `timeinfo`  \n\n---\nType: `struct tm`  \n\n---\n```cpp\n// In printLocalTime\nstruct tm timeinfo\n```"},"range":{"end":{"character":29,"line":39},"start":{"character":21,"line":39}}}}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":238},"jsonrpc":"2.0"}Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/garden.ino.cpp"},"position":{"line":39,"character":21}},"id":242,"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"id":242,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `timeinfo`  \n\n---\nType: `struct tm`  \n\n---\n```cpp\n// In printLocalTime\nstruct tm timeinfo\n```"},"range":{"end":{"character":29,"line":39},"start":{"character":21,"line":39}}}}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":239},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":2}},"id":243,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":243,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]}},"id":244,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":244,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":5}},"id":245,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":245,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":5}},"context":{"diagnostics":[]}},"id":246,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":246,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 286

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":43},"contentChanges":[{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":44},"contentChanges":[{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":4}},"text":"-"}]},"jsonrpc":"2.0"}Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":45},"contentChanges":[{"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":5}},"text":"\u003e"}]},"jsonrpc":"2.0"}Content-Length: 253

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":6},"context":{"triggerKind":2,"triggerCharacter":"\u003e"}},"id":247,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":247,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":41,"character":6},"end":{"line":41,"character":6}},"context":{"diagnostics":[]}},"id":248,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":248,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":9}},"id":249,"jsonrpc":"2.0"}
<<<
Content-Length: 4039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":45}}Content-Length: 40

{"id":249,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":246},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":8}},"id":250,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":250,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":9}},"id":251,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":251,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":244},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":247},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":9},"end":{"line":42,"character":9}},"context":{"diagnostics":[]}},"id":252,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":252,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":245},"jsonrpc":"2.0"}Content-Length: 286

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":46},"contentChanges":[{"range":{"start":{"line":42,"character":8},"end":{"line":42,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":248},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":249},"jsonrpc":"2.0"}Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":8},"end":{"line":42,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]}},"id":253,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":253,"jsonrpc":"2.0","result":[]}Content-Length: 3853

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":22,"line":42},"start":{"character":20,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":46}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":8},"end":{"line":42,"character":8}},"context":{"diagnostics":[]}},"id":254,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":254,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":8},"end":{"line":42,"character":8}},"context":{"diagnostics":[]}},"id":255,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":255,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":47},"contentChanges":[{"range":{"start":{"line":42,"character":8},"end":{"line":42,"character":8}},"text":"-"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":47}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":9},"end":{"line":42,"character":9}},"context":{"diagnostics":[]}},"id":256,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":256,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":48},"contentChanges":[{"range":{"start":{"line":42,"character":9},"end":{"line":42,"character":9}},"text":"\u003e"}]},"jsonrpc":"2.0"}Content-Length: 254

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":10},"context":{"triggerKind":2,"triggerCharacter":"\u003e"}},"id":257,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":257,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 4039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":24,"line":42},"start":{"character":22,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":48}}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":10}},"context":{"diagnostics":[]}},"id":258,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":258,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":21}},"id":259,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":259,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":22}},"id":260,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":260,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"}]}},"id":261,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":261,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":21}},"id":262,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":262,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 205

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":22}},"id":263,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":263,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"}]}},"id":264,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":264,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 288

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":49},"contentChanges":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":22}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":49}}
>>>
Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"}]}},"id":265,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":265,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"}]}},"id":266,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":266,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":25},"end":{"line":42,"character":25}},"context":{"diagnostics":[]}},"id":267,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":267,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":47,"character":32}},"id":268,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":268,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":50,"character":8}},"id":269,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":269,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":49,"character":9}},"id":270,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":270,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":49,"character":9}},"id":271,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":271,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":49,"character":9}},"id":272,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":272,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":49,"character":9},"end":{"line":49,"character":9}},"context":{"diagnostics":[]}},"id":273,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":273,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 286

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":50},"contentChanges":[{"range":{"start":{"line":49,"character":8},"end":{"line":49,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4042

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'serveron'","range":{"end":{"character":10,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":50}}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":51},"contentChanges":[{"range":{"start":{"line":49,"character":8},"end":{"line":49,"character":8}},"text":"-"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4222

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'on'","range":{"end":{"character":11,"line":49},"start":{"character":9,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":51}}
>>>
Content-Length: 447

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":49,"character":9},"end":{"line":49,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":49,"character":9},"end":{"line":49,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'on'"}]}},"id":274,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":274,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":52},"contentChanges":[{"range":{"start":{"line":49,"character":9},"end":{"line":49,"character":9}},"text":"\u003e"}]},"jsonrpc":"2.0"}Content-Length: 254

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":49,"character":10},"context":{"triggerKind":2,"triggerCharacter":"\u003e"}},"id":275,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":275,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 4039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":52}}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":49,"character":10},"end":{"line":49,"character":10}},"context":{"diagnostics":[]}},"id":276,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":276,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":49,"character":10},"end":{"line":49,"character":10}},"context":{"diagnostics":[]}},"id":277,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":277,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":49,"character":10},"end":{"line":49,"character":10}},"context":{"diagnostics":[]}},"id":278,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":278,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":50,"character":16}},"id":279,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":279,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":53,"character":9}},"id":280,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":280,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":53,"character":9}},"id":281,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":281,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":9}},"context":{"diagnostics":[]}},"id":282,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":282,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 286

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":53},"contentChanges":[{"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4042

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'serveron'","range":{"end":{"character":10,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":53}}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":54},"contentChanges":[{"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":8}},"text":"-"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4222

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'on'","range":{"end":{"character":11,"line":53},"start":{"character":9,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":54}}
>>>
Content-Length: 447

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'on'"}]}},"id":283,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":283,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":55},"contentChanges":[{"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":9}},"text":"\u003e"}]},"jsonrpc":"2.0"}Content-Length: 254

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":53,"character":10},"context":{"triggerKind":2,"triggerCharacter":"\u003e"}},"id":284,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":284,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 4039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":55}}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":53,"character":10},"end":{"line":53,"character":10}},"context":{"diagnostics":[]}},"id":285,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":285,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":53,"character":10},"end":{"line":53,"character":10}},"context":{"diagnostics":[]}},"id":286,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":286,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":47,"character":21}},"id":287,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":287,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":57,"character":8}},"id":288,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":288,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":57,"character":8}},"id":289,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":289,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":57,"character":9}},"id":290,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":290,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":57,"character":9},"end":{"line":57,"character":9}},"context":{"diagnostics":[]}},"id":291,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":291,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 286

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":56},"contentChanges":[{"range":{"start":{"line":57,"character":8},"end":{"line":57,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4042

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'serveron'","range":{"end":{"character":10,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":56}}
>>>
Content-Length: 453

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":57,"character":8},"end":{"line":57,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'serveron'"}]}},"id":292,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":292,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":57},"contentChanges":[{"range":{"start":{"line":57,"character":8},"end":{"line":57,"character":8}},"text":"-"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4222

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'on'","range":{"end":{"character":11,"line":57},"start":{"character":9,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":57}}
>>>
Content-Length: 447

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":57,"character":9},"end":{"line":57,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":57,"character":9},"end":{"line":57,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'on'"}]}},"id":293,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":293,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":58},"contentChanges":[{"range":{"start":{"line":57,"character":9},"end":{"line":57,"character":9}},"text":"\u003e"}]},"jsonrpc":"2.0"}Content-Length: 254

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":57,"character":10},"context":{"triggerKind":2,"triggerCharacter":"\u003e"}},"id":294,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":294,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 4039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":58}}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":57,"character":10},"end":{"line":57,"character":10}},"context":{"diagnostics":[]}},"id":295,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":295,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":61,"character":8}},"id":296,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":296,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":61,"character":9}},"id":297,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":297,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":9}},"context":{"diagnostics":[]}},"id":298,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":298,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 286

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":59},"contentChanges":[{"range":{"start":{"line":61,"character":8},"end":{"line":61,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4045

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'serverbegin'","range":{"end":{"character":13,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":59}}
>>>
Content-Length: 456

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":61,"character":8},"end":{"line":61,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'serverbegin'"}]}},"id":299,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":299,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 456

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":61,"character":8},"end":{"line":61,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'serverbegin'"}]}},"id":300,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":300,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 271

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":60},"contentChanges":[{"range":{"start":{"line":61,"character":8},"end":{"line":61,"character":8}},"text":"-"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4225

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'begin'","range":{"end":{"character":14,"line":61},"start":{"character":9,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":60}}
>>>
Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'begin'"}]}},"id":301,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":301,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'begin'"}]}},"id":302,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":302,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":61},"contentChanges":[{"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":9}},"text":"\u003e"}]},"jsonrpc":"2.0"}Content-Length: 254

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":61,"character":10},"context":{"triggerKind":2,"triggerCharacter":"\u003e"}},"id":303,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":303,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 4039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":61}}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":61,"character":10},"end":{"line":61,"character":10}},"context":{"diagnostics":[]}},"id":304,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":304,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":61,"character":10},"end":{"line":61,"character":10}},"context":{"diagnostics":[]}},"id":305,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":305,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":61,"character":15}},"id":306,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":306,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":61,"character":15}},"id":307,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":307,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":60,"character":17}},"id":308,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":308,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":47,"character":25}},"id":309,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":309,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":50,"character":30}},"id":310,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":310,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":50,"character":30}},"id":311,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":311,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":54,"character":25}},"id":312,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":312,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":53,"character":36}},"id":313,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":313,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":310},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":9,"character":6}},"id":314,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":314,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":9,"character":5}},"id":315,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":315,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":9,"character":5}},"id":316,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":316,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":9,"character":5}},"id":317,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":317,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":314},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":9,"character":6}},"id":318,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":318,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":9,"character":5},"end":{"line":10,"character":1}},"context":{"diagnostics":[]}},"id":319,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":319,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":9,"character":6}},"id":320,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":320,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":9,"character":6}},"id":321,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":321,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":9,"character":5}},"id":322,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":322,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":9,"character":5}},"id":323,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":323,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":5}},"context":{"diagnostics":[]}},"id":324,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":324,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":12,"character":4}},"id":325,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":325,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 284

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":62},"contentChanges":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 269

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":63},"contentChanges":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},"text":"-"}]},"jsonrpc":"2.0"}Content-Length: 274

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":64},"contentChanges":[{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":5}},"text":"\u003e"}]},"jsonrpc":"2.0"}Content-Length: 252

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":9,"character":6},"context":{"triggerKind":2,"triggerCharacter":"\u003e"}},"id":326,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":326,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":6}},"context":{"diagnostics":[]}},"id":327,"jsonrpc":"2.0"}
<<<
Content-Length: 4039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":64}}Content-Length: 38

{"id":327,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":6}},"context":{"diagnostics":[]}},"id":328,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":328,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":12,"character":58}},"id":329,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"id":329,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `data`  \n\n---\nType: `uint8_t *`  \n\n---\n```cpp\n// In BcbAws::handleWebSocketMessage\nuint8_t *data\n```"},"range":{"end":{"character":60,"line":12},"start":{"character":56,"line":12}}}}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":326},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":10}},"id":330,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":330,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 436

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"}]}},"id":331,"jsonrpc":"2.0"}
<<<
Content-Length: 383

{"id":331,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","selection":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":3,"character":10}},"id":332,"jsonrpc":"2.0"}
<<<
Content-Length: 257

{"id":332,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `state`  \n\n---\nType: `State *`  \n\n---\n```cpp\n// In BcbAws\nprivate: State *state\n```"},"range":{"end":{"character":15,"line":3},"start":{"character":10,"line":3}}}}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":9}},"id":333,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":333,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":7}},"id":334,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":334,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 537

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"}]}},"id":335,"jsonrpc":"2.0"}
<<<
Content-Length: 598

{"id":335,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp":[{"newText":"iserver","range":{"end":{"character":16,"line":5},"start":{"character":2,"line":5}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'BcbAws::server' to 'iserver'"}]}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":20}},"id":336,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"id":336,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"end":{"character":26,"line":5},"start":{"character":19,"line":5}}}}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":8,"character":23}},"id":337,"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"id":337,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `BcbAws::notifyClients`  \n\n---\n→ `void`  \n\n---\n```cpp\n// In BcbAws\npublic: void BcbAws::notifyClients()\n```"},"range":{"end":{"character":26,"line":8},"start":{"character":13,"line":8}}}}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":14}},"id":338,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":338,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 205

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":14}},"id":339,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":339,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":335},"jsonrpc":"2.0"}Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"context":{"diagnostics":[]}},"id":340,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":340,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":14}},"id":341,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":341,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":338},"jsonrpc":"2.0"}Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":40,"character":12}},"id":342,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":342,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include <HTTPClient.h>  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"end":{"character":13,"line":40},"start":{"character":11,"line":40}}}}
>>>
Content-Length: 205

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":40,"character":13}},"id":343,"jsonrpc":"2.0"}
<<<
Content-Length: 126

{"id":343,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":26,"line":40},"start":{"character":13,"line":40}}}]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":339},"jsonrpc":"2.0"}Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":40,"character":13},"end":{"line":40,"character":13}},"context":{"diagnostics":[]}},"id":344,"jsonrpc":"2.0"}
<<<
Content-Length: 382

{"id":344,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","selection":{"end":{"character":13,"line":40},"start":{"character":13,"line":40}},"tweakID":"DefineInline"}],"command":"clangd.applyTweak","title":"Move function body to declaration"},"kind":"refactor","title":"Move function body to declaration"}]}
>>>
Content-Length: 266

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":40,"character":6},"end":{"line":40,"character":13}},"context":{"diagnostics":[]}},"id":345,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":345,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 266

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":40,"character":5},"end":{"line":40,"character":13}},"context":{"diagnostics":[]}},"id":346,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":346,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":40,"character":5}},"id":347,"jsonrpc":"2.0"}
<<<
Content-Length: 247

{"id":347,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include <HTTPClient.h>  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"end":{"character":11,"line":40},"start":{"character":5,"line":40}}}}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":14}},"id":348,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":348,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":13}},"id":349,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":349,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 205

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":14}},"id":350,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":350,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"context":{"diagnostics":[]}},"id":351,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":351,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 280

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":65},"contentChanges":[{"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"text":"BcbAws::"}]},"jsonrpc":"2.0"}Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":22}},"context":{"diagnostics":[]}},"id":352,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":352,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":20}},"id":353,"jsonrpc":"2.0"}
<<<
Content-Length: 4039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":23,"line":42},"start":{"character":21,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":65}}Content-Length: 40

{"id":353,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":350},"jsonrpc":"2.0"}Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":21}},"id":354,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":354,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"}]}},"id":355,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":355,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 205

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":21}},"id":356,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":356,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":351},"jsonrpc":"2.0"}Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"}]}},"id":357,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":357,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":349},"jsonrpc":"2.0"}Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"}]}},"id":358,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":358,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 280

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":66},"contentChanges":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"text":"BcbAws::"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4029

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":31,"line":42},"start":{"character":29,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":66}}
>>>
Content-Length: 440

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":31}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"}]}},"id":359,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":359,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":21}},"id":360,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":360,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 440

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":31}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"}]}},"id":361,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":361,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":0}},"id":362,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":362,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":1}},"id":363,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":363,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":2}},"id":364,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":364,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 446

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"}]}},"id":365,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":365,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":2}},"id":366,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":366,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 446

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"}]}},"id":367,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":367,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":2}},"id":368,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":368,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 446

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ws'"}]}},"id":369,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":369,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":67},"contentChanges":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":2}},"text":"BcbAws::"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4229

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":37,"line":41},"start":{"character":22,"line":41}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":41},"start":{"character":10,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":42},"start":{"character":2,"line":42}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":31,"line":42},"start":{"character":29,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":67}}
>>>
Content-Length: 440

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"}]}},"id":370,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":370,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 440

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"}]}},"id":371,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":371,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":2}},"id":372,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":372,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]}},"id":373,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":373,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":2}},"id":374,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":374,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":2}},"id":375,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":375,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]}},"id":376,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":376,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":2}},"id":377,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":377,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 450

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]}},"id":378,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":378,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":68},"contentChanges":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":2}},"text":"BcbAws::"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 4221

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":37,"line":41},"start":{"character":22,"line":41}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":41},"start":{"character":10,"line":41}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":39,"line":42},"start":{"character":37,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":68}}
>>>
Content-Length: 444

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"}]}},"id":379,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":379,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 444

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'server' in 'BcbAws'"}]}},"id":380,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":380,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":40}},"id":381,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":381,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":42,"character":40}},"id":382,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":382,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":50,"character":36}},"id":383,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":383,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":380},"jsonrpc":"2.0"}Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":58,"character":47}},"id":384,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":384,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":381},"jsonrpc":"2.0"}Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":58,"character":49}},"id":385,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":385,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":58,"character":50}},"id":386,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":386,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":58,"character":49}},"id":387,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":387,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":58,"character":48}},"id":388,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":388,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 725

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":43},"end":{"line":58,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"}]}},"id":389,"jsonrpc":"2.0"}
<<<
Content-Length: 561

{"id":389,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp":[{"newText":"->","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}}}]}},"isPreferred":true,"kind":"quickfix","title":"change '.' to '->'"}]}
>>>
Content-Length: 205

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":58,"character":49}},"id":390,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":390,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 528

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":58,"character":49},"end":{"line":58,"character":49}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"}]}},"id":391,"jsonrpc":"2.0"}
<<<
Content-Length: 561

{"id":391,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp":[{"newText":"->","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}}}]}},"isPreferred":true,"kind":"quickfix","title":"change '.' to '->'"}]}
>>>
Content-Length: 288

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":69},"contentChanges":[{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 273

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":70},"contentChanges":[{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":48}},"text":"-"}]},"jsonrpc":"2.0"}Content-Length: 528

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":58,"character":49},"end":{"line":58,"character":49}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":48},"end":{"line":58,"character":49}},"severity":1,"code":"typecheck_member_reference_suggestion","source":"clang","message":"Member reference type 'State *' is a pointer; did you mean to use '-\u003e'? (fix available)"}]}},"id":392,"jsonrpc":"2.0"}
<<<
Content-Length: 561

{"id":392,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"typecheck_member_reference_suggestion","message":"Member reference type 'State *' is a pointer; did you mean to use '->'? (fix available)","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp":[{"newText":"->","range":{"end":{"character":49,"line":58},"start":{"character":48,"line":58}}}]}},"isPreferred":true,"kind":"quickfix","title":"change '.' to '->'"}]}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":71},"contentChanges":[{"range":{"start":{"line":58,"character":49},"end":{"line":58,"character":49}},"text":"\u003e"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":389},"jsonrpc":"2.0"}Content-Length: 254

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":58,"character":50},"context":{"triggerKind":2,"triggerCharacter":"\u003e"}},"id":393,"jsonrpc":"2.0"}
<<<
Content-Length: 4153

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":37,"line":41},"start":{"character":22,"line":41}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":41},"start":{"character":10,"line":41}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":39,"line":42},"start":{"character":37,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'getJSON'","range":{"end":{"character":56,"line":58},"start":{"character":49,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":70}}Content-Length: 3964

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":37,"line":41},"start":{"character":22,"line":41}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":41},"start":{"character":10,"line":41}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":39,"line":42},"start":{"character":37,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":71}}Content-Length: 2456

{"id":393,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"String","filterText":"getJSON","insertText":"getJSON()","insertTextFormat":2,"kind":2,"label":" getJSON()","score":72.599998474121094,"sortText":"3d6ecccdgetJSON","textEdit":{"newText":"getJSON()","range":{"end":{"character":50,"line":58},"start":{"character":50,"line":58}}}},{"detail":"[2 overloads]","filterText":"filename","insertText":"filename($0)","insertTextFormat":2,"kind":2,"label":" filename(…)","score":54.166912078857422,"sortText":"3da75515filename","textEdit":{"newText":"filename($0)","range":{"end":{"character":50,"line":58},"start":{"character":50,"line":58}}}},{"detail":"[2 overloads]","filterText":"relay","insertText":"relay($0)","insertTextFormat":2,"kind":2,"label":" relay(…)","score":10.833381652832031,"sortText":"3ed2aa78relay","textEdit":{"newText":"relay($0)","range":{"end":{"character":50,"line":58},"start":{"character":50,"line":58}}}},{"detail":"[2 overloads]","filterText":"reload","insertText":"reload($0)","insertTextFormat":2,"kind":2,"label":" reload(…)","score":10.833381652832031,"sortText":"3ed2aa78reload","textEdit":{"newText":"reload($0)","range":{"end":{"character":50,"line":58},"start":{"character":50,"line":58}}}},{"detail":"bool","filterText":"getOta","insertText":"getOta()","insertTextFormat":2,"kind":2,"label":" getOta()","score":9.6800003051757812,"sortText":"3ee51eb8getOta","textEdit":{"newText":"getOta()","range":{"end":{"character":50,"line":58},"start":{"character":50,"line":58}}}},{"detail":"int","filterText":"moisture","insertText":"moisture()","insertTextFormat":2,"kind":2,"label":" moisture()","score":9.6800003051757812,"sortText":"3ee51eb8moisture","textEdit":{"newText":"moisture()","range":{"end":{"character":50,"line":58},"start":{"character":50,"line":58}}}},{"detail":"bool","filterText":"setOta","insertText":"setOta(${1:bool value})","insertTextFormat":2,"kind":2,"label":" setOta(bool value)","score":9.6800003051757812,"sortText":"3ee51eb8setOta","textEdit":{"newText":"setOta(${1:bool value})","range":{"end":{"character":50,"line":58},"start":{"character":50,"line":58}}}},{"detail":"[2 overloads]","filterText":"threshold","insertText":"threshold($0)","insertTextFormat":2,"kind":2,"label":" threshold(…)","score":9.6800003051757812,"sortText":"3ee51eb8threshold","textEdit":{"newText":"threshold($0)","range":{"end":{"character":50,"line":58},"start":{"character":50,"line":58}}}}]}}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":58,"character":50},"end":{"line":58,"character":50}},"context":{"diagnostics":[]}},"id":394,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":394,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":390},"jsonrpc":"2.0"}Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":58,"character":61},"end":{"line":58,"character":61}},"context":{"diagnostics":[]}},"id":395,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":395,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":391},"jsonrpc":"2.0"}Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":58,"character":61},"end":{"line":58,"character":61}},"context":{"diagnostics":[]}},"id":396,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":396,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":53,"character":29}},"id":397,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":397,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":48,"character":54}},"id":398,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":398,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":41,"character":1}},"id":399,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":399,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":396},"jsonrpc":"2.0"}Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":31,"character":21}},"id":400,"jsonrpc":"2.0"}
<<<
Content-Length: 415

{"id":400,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `BcbAws::handleWebSocketMessage`  \n\n---\n→ `void`  \nParameters:  \n- `void * arg`\n- `uint8_t * data`\n- `size_t len`\n\n---\n```cpp\n// In BcbAws\npublic: void BcbAws::handleWebSocketMessage(void *arg, uint8_t *data, size_t len)\n```"},"range":{"end":{"character":28,"line":31},"start":{"character":6,"line":31}}}}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":397},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":25}},"id":401,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"id":401,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"end":{"character":26,"line":5},"start":{"character":19,"line":5}}}}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":398},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":3}},"id":402,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":402,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":8}},"id":403,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":403,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":9}},"id":404,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":404,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":4,"character":10}},"id":405,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":405,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":402},"jsonrpc":"2.0"}Content-Length: 435

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ws' in 'BcbAws'"}]}},"id":406,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":406,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 285

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":72},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":10}},"rangeLength":8,"text":""}]},"jsonrpc":"2.0"}Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"context":{"diagnostics":[]}},"id":407,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":407,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":10}},"id":408,"jsonrpc":"2.0"}
<<<
Content-Length: 3972

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: no member named 'server' in 'BcbAws'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":37,"line":41},"start":{"character":22,"line":41}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":41},"start":{"character":10,"line":41}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":39,"line":42},"start":{"character":37,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":72}}Content-Length: 278

{"id":408,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"end":{"character":16,"line":5},"start":{"character":10,"line":5}}}}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":405},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":10}},"id":409,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"id":409,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"end":{"character":16,"line":5},"start":{"character":10,"line":5}}}}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":10}},"id":410,"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"id":410,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}}},{"kind":3,"range":{"end":{"character":16,"line":5},"start":{"character":10,"line":5}}},{"kind":2,"range":{"end":{"character":26,"line":5},"start":{"character":19,"line":5}}}]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":406},"jsonrpc":"2.0"}Content-Length: 538

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"}]}},"id":411,"jsonrpc":"2.0"}
<<<
Content-Length: 598

{"id":411,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp":[{"newText":"iserver","range":{"end":{"character":16,"line":5},"start":{"character":2,"line":5}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'BcbAws::server' to 'iserver'"}]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":404},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":407},"jsonrpc":"2.0"}Content-Length: 537

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"}]}},"id":412,"jsonrpc":"2.0"}
<<<
Content-Length: 598

{"id":412,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp":[{"newText":"iserver","range":{"end":{"character":16,"line":5},"start":{"character":2,"line":5}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'BcbAws::server' to 'iserver'"}]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":408},"jsonrpc":"2.0"}Content-Length: 537

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"}]}},"id":413,"jsonrpc":"2.0"}
<<<
Content-Length: 598

{"id":413,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"no_member_suggest","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":10,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp":[{"newText":"iserver","range":{"end":{"character":16,"line":5},"start":{"character":2,"line":5}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'BcbAws::server' to 'iserver'"}]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":409},"jsonrpc":"2.0"}Content-Length: 285

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":73},"contentChanges":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"rangeLength":8,"text":""}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":410},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":2}},"id":414,"jsonrpc":"2.0"}
<<<
Content-Length: 3982

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":8,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: use of undeclared identifier 'server'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":37,"line":41},"start":{"character":22,"line":41}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":41},"start":{"character":10,"line":41}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":39,"line":42},"start":{"character":37,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":57},"start":{"character":2,"line":57}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":58},"start":{"character":43,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":61},"start":{"character":2,"line":61}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":73}}Content-Length: 276

{"id":414,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"end":{"character":8,"line":5},"start":{"character":2,"line":5}}}}
>>>
Content-Length: 537

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"}]}},"id":415,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":415,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 536

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":10}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'server' in 'BcbAws'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"}]}},"id":416,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":416,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":411},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":5}},"id":417,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"id":417,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"end":{"character":8,"line":5},"start":{"character":2,"line":5}}}}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":414},"jsonrpc":"2.0"}Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":18}},"id":418,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"id":418,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `iserver`  \n\n---\nType: `AsyncWebServer *`  \n\n---\n```cpp\n// In BcbAws::BcbAws\nAsyncWebServer *iserver\n```"},"range":{"end":{"character":18,"line":5},"start":{"character":11,"line":5}}}}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":415},"jsonrpc":"2.0"}Content-Length: 545

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here"}]}},"id":419,"jsonrpc":"2.0"}
<<<
Content-Length: 598

{"id":419,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":8,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp":[{"newText":"iserver","range":{"end":{"character":8,"line":5},"start":{"character":2,"line":5}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'server' to 'iserver'"}]}
>>>
Content-Length: 274

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":74},"contentChanges":[{"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"text":"\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3984

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":8,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: use of undeclared identifier 'server'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":10},"start":{"character":2,"line":10}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":37,"line":42},"start":{"character":22,"line":42}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":43},"start":{"character":10,"line":43}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":39,"line":43},"start":{"character":37,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":54},"start":{"character":2,"line":54}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":58},"start":{"character":2,"line":58}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":59},"start":{"character":43,"line":59}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":62},"start":{"character":2,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":74}}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 284

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":75},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 3984

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":8,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: use of undeclared identifier 'server'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":10},"start":{"character":2,"line":10}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":37,"line":42},"start":{"character":22,"line":42}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":43},"start":{"character":10,"line":43}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":39,"line":43},"start":{"character":37,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":54},"start":{"character":2,"line":54}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":58},"start":{"character":2,"line":58}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":59},"start":{"character":43,"line":59}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":62},"start":{"character":2,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":75}}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":34,"character":20}},"id":420,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":420,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":43,"character":39}},"id":421,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":421,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":418},"jsonrpc":"2.0"}Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":43,"character":41},"end":{"line":43,"character":41}},"context":{"diagnostics":[]}},"id":422,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":422,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":62,"character":18},"end":{"line":62,"character":18}},"context":{"diagnostics":[]}},"id":423,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":423,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 1206

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":50,"character":0},"end":{"line":62,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":54,"character":2},"end":{"line":54,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":58,"character":2},"end":{"line":58,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"},{"range":{"start":{"line":59,"character":43},"end":{"line":59,"character":48}},"severity":1,"code":"this_capture","source":"clang","message":"'this' cannot be implicitly captured in this context"},{"range":{"start":{"line":62,"character":2},"end":{"line":62,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'server'"}]}},"id":424,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":424,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 274

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":76},"contentChanges":[{"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"text":"\n  "}]},"jsonrpc":"2.0"}Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 390

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":77},"contentChanges":[{"range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}},"rangeLength":1,"text":"  \n"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 714

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":78},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":0}},"text":"    request-\u003esend(SPIFFS, \"/index.htm\", \"text/html\");\n  });    \n  \n  server-\u003eon(\"/config\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request-\u003esend(SPIFFS, \"/config.htm\", \"text/html\");\n  }); \n  \n  server-\u003eon(\"/json\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request-\u003esend(200, \"application/json\", state-\u003egetJSON());\n  });\n  // start the web server\n  server-\u003ebegin();"}]},"jsonrpc":"2.0"}Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":18}},"context":{"diagnostics":[]}},"id":425,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":425,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":17,"character":2}},"id":426,"jsonrpc":"2.0"}
<<<
Content-Length: 3984

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":8,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: use of undeclared identifier 'server'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":37,"line":43},"start":{"character":22,"line":43}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":43},"start":{"character":10,"line":43}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":44},"start":{"character":10,"line":44}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":39,"line":44},"start":{"character":37,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":51},"start":{"character":2,"line":51}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":55},"start":{"character":2,"line":55}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":59},"start":{"character":2,"line":59}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":60},"start":{"character":43,"line":60}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":63},"start":{"character":2,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":76}}Content-Length: 5695

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"member_decl_does_not_match","message":"Out-of-line definition of 'BcbAws' does not match any declaration in 'BcbAws'\n\n/tmp/arduino-language-server415404255/sketch/bcbaws.h:15:22:\nnote: type of 2nd parameter of member declaration does not match definition ('AsyncWebServer' vs 'AsyncWebServer *')","range":{"end":{"character":14,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":4},"start":{"character":2,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'server'; did you mean 'iserver'? (fix available)\n\nbcbaws.cpp:3:46: note: 'iserver' declared here","range":{"end":{"character":8,"line":5},"start":{"character":2,"line":5}},"severity":1,"source":"clang"},{"message":"'iserver' declared here\n\nbcbaws.cpp:6:3: error: use of undeclared identifier 'server'; did you mean 'iserver'?","range":{"end":{"character":52,"line":2},"start":{"character":45,"line":2}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'request'","range":{"end":{"character":11,"line":6},"start":{"character":4,"line":6}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":4,"line":7},"start":{"character":3,"line":7}},"severity":1,"source":"clang"},{"code":"unknown_typename_suggest","message":"Unknown type name 'server'; did you mean 'Server'? (fix available)\n\n/home/brian/Arduino/hardware/espressif/esp32/cores/esp32/Server.h:25:7:\nnote: 'Server' declared here","range":{"end":{"character":8,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"invalid_operator_on_type","message":"Cannot use arrow operator on a type","range":{"end":{"character":10,"line":9},"start":{"character":8,"line":9}},"severity":1,"source":"clang"},{"code":"unknown_typename_suggest","message":"Unknown type name 'server'; did you mean 'Server'? (fix available)\n\n/home/brian/Arduino/hardware/espressif/esp32/cores/esp32/Server.h:25:7:\nnote: 'Server' declared here","range":{"end":{"character":8,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"code":"invalid_operator_on_type","message":"Cannot use arrow operator on a type","range":{"end":{"character":10,"line":13},"start":{"character":8,"line":13}},"severity":1,"source":"clang"},{"code":"unknown_typename_suggest","message":"Unknown type name 'server'; did you mean 'Server'? (fix available)\n\n/home/brian/Arduino/hardware/espressif/esp32/cores/esp32/Server.h:25:7:\nnote: 'Server' declared here","range":{"end":{"character":8,"line":17},"start":{"character":2,"line":17}},"severity":1,"source":"clang"},{"code":"invalid_operator_on_type","message":"Cannot use arrow operator on a type","range":{"end":{"character":10,"line":17},"start":{"character":8,"line":17}},"severity":1,"source":"clang"},{"code":"extraneous_closing_brace","message":"Extraneous closing brace ('}')","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ws'","range":{"end":{"character":4,"line":22},"start":{"character":2,"line":22}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":37,"line":54},"start":{"character":22,"line":54}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":12,"line":54},"start":{"character":10,"line":54}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'server' in 'BcbAws'","range":{"end":{"character":16,"line":55},"start":{"character":10,"line":55}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'ws' in 'BcbAws'","range":{"end":{"character":39,"line":55},"start":{"character":37,"line":55}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":62},"start":{"character":2,"line":62}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'server'","range":{"end":{"character":8,"line":66},"start":{"character":2,"line":66}},"severity":1,"source":"clang"},{"code":"fatal_too_many_errors","message":"Too many errors emitted, stopping now","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp","version":78}}Content-Length: 40

{"id":426,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":17,"character":2}},"id":427,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":427,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":423},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":2}},"context":{"diagnostics":[]}},"id":428,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":428,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":422},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":2}},"context":{"diagnostics":[]}},"id":429,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":429,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":5,"character":19}},"id":430,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":430,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":16,"character":20}},"id":431,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":431,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":428},"jsonrpc":"2.0"}Content-Length: 193

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.cpp"},"position":{"line":16,"character":19}},"id":432,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":432,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":21,"character":0},"end":{"line":22,"character":10}},"context":{"diagnostics":[]}},"id":433,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":433,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 286

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":17},"contentChanges":[{"range":{"start":{"line":21,"character":0},"end":{"line":22,"character":10}},"rangeLength":11,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1031

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h","version":17}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server415404255/sketch/bcbaws.h"},"range":{"start":{"line":24,"character":15},"end":{"line":24,"character":15}},"context":{"diagnostics":[]}},"id":434,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":434,"jsonrpc":"2.0","result":[]}






Started logging.

>>>
Content-Length: 2096

{"method":"initialize","params":{"processId":6524,"rootPath":"/tmp/arduino-language-server978808921/sketch","rootUri":"file:///tmp/arduino-language-server978808921/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 6018

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/garden.ino.cpp","languageId":"cpp","version":1,"text":"#line 1 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\n#include \u003cArduino.h\u003e\n#include \"State.h\"\n#include \"bcbaws.h\"\n#include \"bcbsdcard.h\"\n#include \"time.h\"\n#include \"WiFiCred1.h\"\n#include \u003cArduinoJson.h\u003e\n#include \u003cArduinoOTA.h\u003e\n#include \u003cESPmDNS.h\u003e\n#include \u003cWiFi.h\u003e\n#include \u003cWiFiUdp.h\u003e\n\n#define ARDUINO_RUNNING_CORE 1\nAsyncWebServer server(80);\nAsyncWebSocket ws(\"/ws\");\nState state;\nBcbAws aws(\u0026state,\u0026server,\u0026ws);\n\n// internal rtc variables\nconst char *ntpServer = \"pool.ntp.org\";\nconst long gmtOffset_sec = -18000;\nconst int daylightOffset_sec = 3600;\n\n\nbool wifiavail = false;\n\n// localtime from internal rtc\n#line 28 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalTime();\n#line 36 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalHour();\n#line 51 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nvoid setup();\n#line 133 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nvoid loop();\n#line 28 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalTime() {\n  struct tm timeinfo;\n  if (!getLocalTime(\u0026timeinfo)) {\n    return (\"\");\n  }\n  return (asctime(\u0026timeinfo));\n}\n\nString printLocalHour() {\n  struct tm timeinfo;\n  if (!getLocalTime(\u0026timeinfo)) {\n    return (\"\");\n  }\n  return (String(asctime(\u0026timeinfo)).substring(11, 16) + \" \");\n}\n\n// define functions\nvoid UpdateClients(void *pvParameters); // maintains the websocket display\n//void UpdateDatabase(void *pvParameters); // maintains the websocket display\nvoid initWiFi();\nvoid initTime();\n\n\nvoid setup() {\n  // start the serial interface\n  Serial.begin(115200);\n  delay(500);\n  initWiFi();\n  initTime();\n  aws.initWebServer();\n  aws.initWebSocket();\n  initSDCard();\n  checkForIndex();\n  digitalWrite(2, LOW);\n  pinMode(2, OUTPUT);\n  state.relay(false);\n  \n  xTaskCreatePinnedToCore(UpdateClients, // function name \n                          \"updateClients\" // A name just for humans\n                          ,\n                          4096 // This stack size can be checked \u0026 adjusted by\n                          // reading the Stack Highwater\n                          ,\n                          NULL,// task input parameter\n                          2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n                          // being the highest, and 0 being the lowest.\n                          ,\n                          NULL, // task handle\n                          ARDUINO_RUNNING_CORE);\n//\n//  xTaskCreatePinnedToCore(UpdateDatabase, \"updateDatabase\" // A name just for humans\n//                          ,\n//                          4096 // This stack size can be checked \u0026 adjusted by\n//                          // reading the Stack Highwater\n//                          ,\n//                          NULL, 2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n//                          // being the highest, and 0 being the lowest.\n//                          ,\n//                          NULL, ARDUINO_RUNNING_CORE);\n\n  ArduinoOTA\n  .onStart([]() {\n    String type;\n    if (ArduinoOTA.getCommand() == U_FLASH)\n      type = \"sketch\";\n    else // U_SPIFFS\n      type = \"filesystem\";\n\n    // NOTE: if updating SPIFFS this would be the place to unmount SPIFFS\n    SPIFFS.end();\n // Disable client connections    \n    ws.enable(false);\n\n    // Advertise connected clients what's going on\n    ws.textAll(\"OTA Update Started\");\n\n    // Close them\n    ws.closeAll();\n    state.setOta(true);\n\n    \n    Serial.println(\"Start updating \" + type);\n  })\n  .onEnd([]() {\n    Serial.println(\"\\nEnd\");\n  })\n  .onProgress([](unsigned int progress, unsigned int total) {\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\n  })\n  .onError([](ota_error_t error) {\n    Serial.printf(\"Error[%u]: \", error);\n    if (error == OTA_AUTH_ERROR)\n      Serial.println(\"Auth Failed\");\n    else if (error == OTA_BEGIN_ERROR)\n      Serial.println(\"Begin Failed\");\n    else if (error == OTA_CONNECT_ERROR)\n      Serial.println(\"Connect Failed\");\n    else if (error == OTA_RECEIVE_ERROR)\n      Serial.println(\"Receive Failed\");\n    else if (error == OTA_END_ERROR)\n      Serial.println(\"End Failed\");\n  });\n  ArduinoOTA.begin();\n}\n\nvoid loop() {\n  ArduinoOTA.handle(); // check if an update is available\n  if (WiFi.status() != WL_CONNECTED) // check if wifi is still connected, if not, reconnect\n    initWiFi();\n  vTaskDelay(60);\n}\n\nvoid UpdateClients(void *pvParameters) { // handle websocket and oled displays\n  (void)pvParameters;\n  for (;;) {\n    if(!state.getOta()) {aws.notifyClients();} // send state to the client as a json string\n    vTaskDelay(10000);\n  }\n}\n\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() \u003e 3400 \u0026\u0026 state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}\n\n\n\n\nvoid initWiFi() {\n  Serial.println(\"connecting to wifi\");\n  // connect to wifi\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  if (WiFi.waitForConnectResult() != WL_CONNECTED) {\n  Serial.println(\"connecting to wifi failed\");\n  delay(500);\n  initWiFi();\n  }\n  Serial.println(\"wifi connected\");\n  wifiavail = true;\n}\n\nvoid initTime() {\n  // set the clock from ntp server\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n  printLocalTime();\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 166

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/garden.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/garden.ino.cpp"},"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/67","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/67","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/67","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/67","percentage":2.9850746268656718}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/67","percentage":2.9850746268656718}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/67","percentage":4.4776119402985071}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/67","percentage":4.4776119402985071}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/67","percentage":5.9701492537313436}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/67","percentage":5.9701492537313436}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/67","percentage":7.4626865671641793}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/67","percentage":7.4626865671641793}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/67","percentage":8.9552238805970141}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/67","percentage":8.9552238805970141}}}Content-Length: 1036

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server978808921/sketch/garden.ino.cpp","version":1}}Content-Length: 4315

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"server","range":{"end":{"character":25,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":21,"line":14},"start":{"character":15,"line":14}}},{"kind":13,"name":"ws","range":{"end":{"character":24,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":17,"line":15},"start":{"character":15,"line":15}}},{"kind":13,"name":"state","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":11,"line":16},"start":{"character":6,"line":16}}},{"kind":13,"name":"aws","range":{"end":{"character":30,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":7,"line":17}}},{"kind":13,"name":"ntpServer","range":{"end":{"character":38,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":21,"line":20},"start":{"character":12,"line":20}}},{"kind":13,"name":"gmtOffset_sec","range":{"end":{"character":33,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":24,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"daylightOffset_sec","range":{"end":{"character":35,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":28,"line":22},"start":{"character":10,"line":22}}},{"kind":13,"name":"wifiavail","range":{"end":{"character":22,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":14,"line":25},"start":{"character":5,"line":25}}},{"kind":12,"name":"printLocalTime","range":{"end":{"character":23,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":7,"line":29}}},{"kind":12,"name":"printLocalHour","range":{"end":{"character":23,"line":31},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":21,"line":31},"start":{"character":7,"line":31}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":10,"line":33},"start":{"character":5,"line":33}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":9,"line":35},"start":{"character":5,"line":35}}},{"kind":12,"name":"printLocalTime","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":37}},"selectionRange":{"end":{"character":21,"line":37},"start":{"character":7,"line":37}}},{"kind":12,"name":"printLocalHour","range":{"end":{"character":1,"line":51},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":21,"line":45},"start":{"character":7,"line":45}}},{"kind":12,"name":"UpdateClients","range":{"end":{"character":38,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":18,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"initWiFi","range":{"end":{"character":15,"line":56},"start":{"character":0,"line":56}},"selectionRange":{"end":{"character":13,"line":56},"start":{"character":5,"line":56}}},{"kind":12,"name":"initTime","range":{"end":{"character":15,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":13,"line":57},"start":{"character":5,"line":57}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":140},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":10,"line":60},"start":{"character":5,"line":60}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":147},"start":{"character":0,"line":142}},"selectionRange":{"end":{"character":9,"line":142},"start":{"character":5,"line":142}}},{"kind":12,"name":"UpdateClients","range":{"end":{"character":1,"line":155},"start":{"character":0,"line":149}},"selectionRange":{"end":{"character":18,"line":149},"start":{"character":5,"line":149}}},{"kind":12,"name":"initWiFi","range":{"end":{"character":1,"line":183},"start":{"character":0,"line":171}},"selectionRange":{"end":{"character":13,"line":171},"start":{"character":5,"line":171}}},{"kind":12,"name":"initTime","range":{"end":{"character":1,"line":189},"start":{"character":0,"line":185}},"selectionRange":{"end":{"character":13,"line":185},"start":{"character":5,"line":185}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/67","percentage":10.447761194029852}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/67","percentage":10.447761194029852}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/67","percentage":11.940298507462687}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/67","percentage":11.940298507462687}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/67","percentage":13.432835820895523}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/67","percentage":13.432835820895523}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/67","percentage":14.925373134328359}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/67","percentage":14.925373134328359}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/67","percentage":16.417910447761194}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/67","percentage":16.417910447761194}}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/garden.ino.cpp"},"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/67","percentage":17.910447761194028}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/67","percentage":17.910447761194028}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/67","percentage":19.402985074626866}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/67","percentage":19.402985074626866}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/67","percentage":20.895522388059703}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/67","percentage":20.895522388059703}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/67","percentage":22.388059701492537}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/67","percentage":22.388059701492537}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/67","percentage":23.880597014925375}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/67","percentage":23.880597014925375}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/67","percentage":25.373134328358208}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/67","percentage":25.373134328358208}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/67","percentage":26.865671641791046}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/67","percentage":26.865671641791046}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/67","percentage":28.35820895522388}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/67","percentage":28.35820895522388}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/67","percentage":29.850746268656717}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/67","percentage":29.850746268656717}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/67","percentage":31.343283582089551}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/67","percentage":31.343283582089551}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/67","percentage":32.835820895522389}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/67","percentage":32.835820895522389}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/67","percentage":34.328358208955223}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/67","percentage":34.328358208955223}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/67","percentage":35.820895522388057}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/67","percentage":35.820895522388057}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/67","percentage":37.313432835820898}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/67","percentage":37.313432835820898}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/67","percentage":38.805970149253731}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/67","percentage":38.805970149253731}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/67","percentage":40.298507462686565}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/67","percentage":40.298507462686565}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/67","percentage":41.791044776119406}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/67","percentage":41.791044776119406}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/67","percentage":43.28358208955224}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/67","percentage":43.28358208955224}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/67","percentage":44.776119402985074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/67","percentage":44.776119402985074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/67","percentage":46.268656716417908}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/67","percentage":46.268656716417908}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/67","percentage":47.761194029850749}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/67","percentage":47.761194029850749}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/67","percentage":49.253731343283583}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/67","percentage":49.253731343283583}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/67","percentage":50.746268656716417}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/67","percentage":50.746268656716417}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/67","percentage":52.238805970149251}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/67","percentage":52.238805970149251}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/67","percentage":53.731343283582092}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/67","percentage":53.731343283582092}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/67","percentage":55.223880597014926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/67","percentage":55.223880597014926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/67","percentage":56.71641791044776}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/67","percentage":56.71641791044776}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/67","percentage":58.208955223880594}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/67","percentage":58.208955223880594}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/67","percentage":59.701492537313435}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/67","percentage":59.701492537313435}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/67","percentage":61.194029850746269}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/67","percentage":61.194029850746269}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/67","percentage":62.686567164179102}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/67","percentage":62.686567164179102}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/67","percentage":64.179104477611943}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/67","percentage":64.179104477611943}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/67","percentage":65.671641791044777}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/67","percentage":65.671641791044777}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/67","percentage":67.164179104477611}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/67","percentage":67.164179104477611}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/67","percentage":68.656716417910445}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/67","percentage":68.656716417910445}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/67","percentage":70.149253731343279}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/67","percentage":70.149253731343279}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/67","percentage":71.641791044776113}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/67","percentage":71.641791044776113}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/67","percentage":73.134328358208961}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/67","percentage":73.134328358208961}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/67","percentage":74.626865671641795}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/67","percentage":74.626865671641795}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/67","percentage":76.119402985074629}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/67","percentage":76.119402985074629}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/67","percentage":77.611940298507463}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/67","percentage":77.611940298507463}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/67","percentage":79.104477611940297}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/67","percentage":79.104477611940297}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/67","percentage":80.597014925373131}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/67","percentage":80.597014925373131}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/67","percentage":82.089552238805965}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/67","percentage":82.089552238805965}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/67","percentage":83.582089552238813}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/67","percentage":83.582089552238813}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/67","percentage":85.074626865671647}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/67","percentage":85.074626865671647}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"58/67","percentage":86.567164179104481}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"58/67","percentage":86.567164179104481}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"59/67","percentage":88.059701492537314}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"59/67","percentage":88.059701492537314}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"60/67","percentage":89.552238805970148}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"60/67","percentage":89.552238805970148}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"61/67","percentage":91.044776119402982}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"61/67","percentage":91.044776119402982}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"62/67","percentage":92.537313432835816}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"63/67","percentage":94.02985074626865}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"64/67","percentage":95.522388059701498}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"65/67","percentage":97.014925373134332}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"66/67","percentage":98.507462686567166}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 1908

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/State.cpp","languageId":"cpp","version":1,"text":"#include\"State.h\"\n\nint State::moisture() {\n      int avg = 0;\n      for (int num = 0; num \u003c= 9; num++) {\n        avg += analogRead(32);\n      }\n      jsonMap[\"moisture\"] = String(avg / 10);\n      return avg / 10;\n    }\n\n\n    int State::threshold() {\n      return jsonMap[\"threshold\"].toInt();\n    };\n    \n    int State::threshold(int value) {\n      jsonMap[\"threshold\"] = String(value);\n      return jsonMap[\"threshold\"].toInt();\n    };\n    \n\n    String State::filename() {\n      return jsonMap[\"filename\"];\n    };\n    \n    String State::filename(String value) {\n      jsonMap[\"filename\"] = value;\n      return jsonMap[\"filename\"];\n    };\n\n\n    bool State::setOta (bool value) {\n      ota = value;\n      return ota;\n    };\n    \n    bool State::getOta () {\n      return ota;\n    };\n\n\n    bool State::reload() {\n      return (jsonMap[\"reload\"] == \"true\");\n    };\n    \n    bool State::reload(bool value) {\n      jsonMap[\"reload\"] = value ? \"true\" : \"false\";\n      return (jsonMap[\"reload\"] == \"true\");\n    };\n\n\n    bool State::relay() {\n      return (jsonMap[\"relay\"] == \"true\");\n    };\n    \n    bool State::relay(bool value) {\n      jsonMap[\"relay\"] = value ? \"true\" : \"false\";\n      return (jsonMap[\"relay\"] == \"true\");\n    };\n\n\n    String State::getJSON() {\n      moisture();\n      String json = \"{\";\n      String quote = \"\\\"\";\n      for (auto const x : jsonMap) {\n        if (json.length() \u003e 3) json += \",\";\n        json += quote + x.first + quote + \":\" + quote + x.second + quote;\n      };\n      json += \"}\";\n      Serial.println(json);\n      return json;\n    }\n\nState state;\n"}},"jsonrpc":"2.0"}Content-Length: 260

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 1031

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":17,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server978808921/sketch/State.cpp","version":1}}Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 748

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/State.h","languageId":"cpp","version":1,"text":"#ifndef STATE\n#define STATE\n#include\u003cArduino.h\u003e\n#include\u003cmap\u003e\n//set initial state\n\nclass State {\n  public:\n\n    int moisture();\n\n    int threshold();\n    int threshold(int value);\n\n\n    String filename();\n    String filename(String value);\n\n\n    bool setOta (bool value);\n    bool getOta ();\n\n    bool reload();\n    bool reload(bool value);\n\n    bool relay();\n    bool relay(bool value);\n\n    String getJSON();\n\n  private:\n    std::map\u003cString, String\u003e jsonMap;\n    bool ota = false;\n\n};\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 258

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/State.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 1028

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":9,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server978808921/sketch/State.h","version":1}}Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 341

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/WiFiCred.h","languageId":"cpp","version":1,"text":"\n//wifi connection credentials\nconst char* ssid     = \"Espnet\";\n//const char* ssid     = \"Frontier4848\";\nconst char* password = \"*********\";\n"}},"jsonrpc":"2.0"}Content-Length: 294

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/WiFiCred1.h","languageId":"cpp","version":1,"text":"// wifi connection credentials\nconst char *ssid = \"Espnet\";\nconst char *password = \"8141695320\";\n"}},"jsonrpc":"2.0"}Content-Length: 262

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/WiFiCred1.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 1132

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"misc-definitions-in-headers","message":"Variable 'ssid' defined in a header file; variable definitions in header files can lead to ODR violations","range":{"end":{"character":16,"line":1},"start":{"character":12,"line":1}},"severity":2,"source":"clang-tidy"},{"code":"misc-definitions-in-headers","message":"Variable 'password' defined in a header file; variable definitions in header files can lead to ODR violations","range":{"end":{"character":20,"line":2},"start":{"character":12,"line":2}},"severity":2,"source":"clang-tidy"}],"uri":"file:///tmp/arduino-language-server978808921/sketch/WiFiCred1.h","version":1}}Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 3518

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbaws.cpp","languageId":"cpp","version":1,"text":"#include\"bcbaws.h\"\n\nBcbAws::BcbAws(State* istate,AsyncWebServer* iserver, AsyncWebSocket* iws){\n  BcbAws::state=istate;\n  ws = iws;\n  server = iserver; \n    request-\u003esend(SPIFFS, \"/index.htm\", \"text/html\");\n  });    \n  \n  server-\u003eon(\"/config\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request-\u003esend(SPIFFS, \"/config.htm\", \"text/html\");\n  }); \n  \n  server-\u003eon(\"/json\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request-\u003esend(200, \"application/json\", state-\u003egetJSON());\n  });\n  // start the web server\n  server-\u003ebegin();  \n  \n}\n\nvoid BcbAws::notifyClients() {\n  ws-\u003etextAll(state-\u003egetJSON());  // send non-slider updating data\n}\n\nvoid BcbAws::handleWebSocketMessage(void *arg, uint8_t *data, size_t len) { // receive the comm from the client and convert it into a string\n  AwsFrameInfo *info = (AwsFrameInfo *)arg;\n  if (info-\u003efinal \u0026\u0026 info-\u003eindex == 0 \u0026\u0026 info-\u003elen == len \u0026\u0026\n      info-\u003eopcode == WS_TEXT) {\n    data[len] = 0;\n    parseCommand((char *)data);\n  }\n}\n\nvoid BcbAws::onEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,\n             AwsEventType type, void *arg, uint8_t *data, size_t len) {\n  switch (type) {\n    case WS_EVT_CONNECT:\n      notifyClients();\n      break;\n    case WS_EVT_DISCONNECT:\n      Serial.printf(\"WebSocket client #%u disconnected\\n\", client-\u003eid());\n      break;\n    case WS_EVT_DATA:\n      handleWebSocketMessage(arg, data, len);\n      break;\n    case WS_EVT_PONG:\n    case WS_EVT_ERROR:\n      break;\n  }\n}\n\n\nvoid BcbAws::initWebSocket() {\n  BcbAws::ws-\u003eonEvent(BcbAws::onEvent);\n  BcbAws::server-\u003eaddHandler(BcbAws::ws);\n}\n\n\nvoid BcbAws::initWebServer() {\n  // Route for root / web page served from spiffs\n  // TODO add routines for dynamically updating index.htm\n  server-\u003eon(\"/\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request-\u003esend(SPIFFS, \"/index.htm\", \"text/html\");\n  });    \n  \n  server-\u003eon(\"/config\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request-\u003esend(SPIFFS, \"/config.htm\", \"text/html\");\n  }); \n  \n  server-\u003eon(\"/json\", HTTP_GET, [](AsyncWebServerRequest * request) {\n    request-\u003esend(200, \"application/json\", state-\u003egetJSON());\n  });\n  // start the web server\n  server-\u003ebegin();\n}\n\n\nvoid BcbAws::parseCommand(String command) {\n  \n  if (command == \"relay\") {\n    state-\u003erelay(!state-\u003erelay());\n    digitalWrite(2,state-\u003erelay());\n    notifyClients();\n  }\n  // file upload handler\n\n  if (command.substring(0, 4) == \"upld\") {\n    state-\u003efilename(command.substring(5));\n    deleteFile(SPIFFS, \"/temp.txt\");\n  }\n\n  if (command.substring(0, 4) == \"comp\") {\n    deleteFile(SPIFFS, (\"/\" + state-\u003efilename()).c_str());\n    renameFile(SPIFFS, \"/temp.txt\", (\"/\" + state-\u003efilename()).c_str());\n    state-\u003efilename(\"\");\n  }\n\n  if (command.substring(0, 4) == \"file\") {\n    String message = command.substring(5);\n    appendFile(SPIFFS, \"/temp.txt\", message.c_str());\n  }\n\n  if (command == \"reload\") {\n    state-\u003ereload(true);\n    notifyClients();\n    state-\u003ereload(false);\n  }\n}\n"}},"jsonrpc":"2.0"}Content-Length: 261

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbaws.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 1131

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"misc-definitions-in-headers","message":"Variable 'ssid' defined in a header file; variable definitions in header files can lead to ODR violations","range":{"end":{"character":16,"line":2},"start":{"character":12,"line":2}},"severity":2,"source":"clang-tidy"},{"code":"misc-definitions-in-headers","message":"Variable 'password' defined in a header file; variable definitions in header files can lead to ODR violations","range":{"end":{"character":20,"line":4},"start":{"character":12,"line":4}},"severity":2,"source":"clang-tidy"}],"uri":"file:///tmp/arduino-language-server978808921/sketch/WiFiCred.h","version":1}}Content-Length: 3530

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'request'","range":{"end":{"character":11,"line":6},"start":{"character":4,"line":6}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":4,"line":7},"start":{"character":3,"line":7}},"severity":1,"source":"clang"},{"code":"unknown_typename_suggest","message":"Unknown type name 'server'; did you mean 'Server'? (fix available)\n\n/home/brian/Arduino/hardware/espressif/esp32/cores/esp32/Server.h:25:7:\nnote: 'Server' declared here","range":{"end":{"character":8,"line":9},"start":{"character":2,"line":9}},"severity":1,"source":"clang"},{"code":"invalid_operator_on_type","message":"Cannot use arrow operator on a type","range":{"end":{"character":10,"line":9},"start":{"character":8,"line":9}},"severity":1,"source":"clang"},{"code":"unknown_typename_suggest","message":"Unknown type name 'server'; did you mean 'Server'? (fix available)\n\n/home/brian/Arduino/hardware/espressif/esp32/cores/esp32/Server.h:25:7:\nnote: 'Server' declared here","range":{"end":{"character":8,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"code":"invalid_operator_on_type","message":"Cannot use arrow operator on a type","range":{"end":{"character":10,"line":13},"start":{"character":8,"line":13}},"severity":1,"source":"clang"},{"code":"unknown_typename_suggest","message":"Unknown type name 'server'; did you mean 'Server'? (fix available)\n\n/home/brian/Arduino/hardware/espressif/esp32/cores/esp32/Server.h:25:7:\nnote: 'Server' declared here","range":{"end":{"character":8,"line":17},"start":{"character":2,"line":17}},"severity":1,"source":"clang"},{"code":"invalid_operator_on_type","message":"Cannot use arrow operator on a type","range":{"end":{"character":10,"line":17},"start":{"character":8,"line":17}},"severity":1,"source":"clang"},{"code":"extraneous_closing_brace","message":"Extraneous closing brace ('}')","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":37,"line":54},"start":{"character":22,"line":54}},"severity":1,"source":"clang"},{"code":"this_capture","message":"'this' cannot be implicitly captured in this context","range":{"end":{"character":48,"line":71},"start":{"character":43,"line":71}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbaws.cpp","version":1}}Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 680

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 5733

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbaws.h","languageId":"cpp","version":1,"text":"#ifndef BCBAWS\n#define BCBAWS\n#include \u003cArduino.h\u003e\n#include \u003cESPAsyncWebServer.h\u003e\n#include \"bcbsdcard.h\"\n#include \u003cSPIFFS.h\u003e\n#include \"State.h\"\n//#include \u003cHTTPClient.h\u003e\n\n\n\nclass BcbAws{\n  public:\nBcbAws(State*istate, AsyncWebServer* server, AsyncWebSocket* ws);\nvoid parseCommand(String command);\nvoid notifyClients();\nvoid handleWebSocketMessage(void *arg, uint8_t *data, size_t len);\nvoid initWebSocket();\nvoid initWebServer();\nvoid onEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,\n             AwsEventType type, void *arg, uint8_t *data, size_t len);\n\n  private:\n  AsyncWebServer* server;\n  AsyncWebSocket* ws;\n  State* state;\n};\n// define functions\n//void parseCommand(String command);\n//void notifyClients();\n//void handleWebSocketMessage(void *arg, uint8_t *data, size_t len);\n//void initWebSocket();\n//void initWebServer();\n//void updateDB();\n\n// web server variables\n//AsyncWebServer server(80);\n//AsyncWebSocket ws(\"/ws\");\n// web client\n//HTTPClient http;\n//char req[450];\n\n//void notifyClients() {\n//  ws.textAll(state.getJSON());  // send non-slider updating data\n//}\n\n//void handleWebSocketMessage(void *arg, uint8_t *data, size_t len) { // receive the comm from the client and convert it into a string\n//  AwsFrameInfo *info = (AwsFrameInfo *)arg;\n//  if (info-\u003efinal \u0026\u0026 info-\u003eindex == 0 \u0026\u0026 info-\u003elen == len \u0026\u0026\n//      info-\u003eopcode == WS_TEXT) {\n//    data[len] = 0;\n//    parseCommand((char *)data);\n//  }\n//}\n\n\n// handle websocket connections\n//void onEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,\n//             AwsEventType type, void *arg, uint8_t *data, size_t len) {\n//  switch (type) {\n//    case WS_EVT_CONNECT:\n//      notifyClients();\n//      break;\n//    case WS_EVT_DISCONNECT:\n//      Serial.printf(\"WebSocket client #%u disconnected\\n\", client-\u003eid());\n//      break;\n//    case WS_EVT_DATA:\n//      handleWebSocketMessage(arg, data, len);\n//      break;\n//    case WS_EVT_PONG:\n//    case WS_EVT_ERROR:\n//      break;\n//  }\n//}\n\n// init websockets\n//void initWebSocket() {\n//  ws.onEvent(onEvent);\n//  server.addHandler(\u0026ws);\n//}\n\n// init webserver\n//void initWebServer() {\n//  // Route for root / web page served from spiffs\n//  // TODO add routines for dynamically updating index.htm\n//  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest * request) {\n//    request-\u003esend(SPIFFS, \"/index.htm\", \"text/html\");\n//  });    \n//  \n//  server.on(\"/config\", HTTP_GET, [](AsyncWebServerRequest * request) {\n//    request-\u003esend(SPIFFS, \"/config.htm\", \"text/html\");\n//  }); \n//  \n//  server.on(\"/json\", HTTP_GET, [](AsyncWebServerRequest * request) {\n//    request-\u003esend(200, \"application/json\", state.getJSON());\n//  });\n//  // start the web server\n//  server.begin();\n//}\n\n\n\n//// convert state to json\n//String getJson(bool b) {\n//\n//  String response = \"{\\\"moisture\\\":\"+String(state.moisture())+\",\\\"relay\\\":\"+(state.relay()?\"\\\"on\\\"\":\"\\\"off\\\"\")+\",\\\"initial\\\": \\\"true\\\"}\";\n//\n//  return response;\n//}\n\n//parse the command coming from the client(s)\n//void parseCommand(String command) {\n//  Serial.println(command);\n//\n//  \n//  \n//  if (command == \"relay\") {\n//    state.relay(!state.relay());\n//    digitalWrite(2,state.relay());\n//    notifyClients();\n//  }\n//  // file upload handler\n//\n//  if (command.substring(0, 4) == \"upld\") {\n//    state.filename(command.substring(5));\n//    deleteFile(SPIFFS, \"/temp.txt\");\n//  }\n//\n//  if (command.substring(0, 4) == \"comp\") {\n//    deleteFile(SPIFFS, (\"/\" + state.filename()).c_str());\n//    renameFile(SPIFFS, \"/temp.txt\", (\"/\" + state.filename()).c_str());\n//    state.filename(\"\");\n//  }\n//\n//  if (command.substring(0, 4) == \"file\") {\n//    String message = command.substring(5);\n//    appendFile(SPIFFS, \"/temp.txt\", message.c_str());\n//  }\n//\n//  if (command == \"reload\") {\n//    state.reload(true);\n//    notifyClients();\n//    state.reload(false);\n//  }\n//}\n\n//void updateDB(){\n//      Serial.println(\"[HTTP] begin...\\n\");\n//      strcpy(req, (\"http://192.168.1.177/~brian/esp32/mysql-data-logger/garden.php?temp=\" + String(state.temp()) + \"\u0026press=\" + String(state.pressure()) + \"\u0026p64=\" + String(state.pressure64()) + \"\u0026humid=\" + String(state.humidity())).c_str());\n//      Serial.println(String(state.temp()));\n//      Serial.println(String(state.pressure()));\n//      Serial.println(String(state.pressure64()));\n//      Serial.println(String(state.humidity()));\n//      Serial.println(String(req));\n//      http.begin(req); //HTTP\n//\n//      Serial.print(\"[HTTP] GET...\\n\");\n//      // start connection and send HTTP header\n//      int httpCode = http.GET();\n//\n//      // httpCode will be negative on error\n//      if (httpCode \u003e 0) {\n//        // HTTP header has been send and Server response header has been handled\n//        Serial.printf(\"[HTTP] GET... code: %d\\n\", httpCode);\n//\n//        // file found at server\n//        if (httpCode == HTTP_CODE_OK) {\n//          String payload = http.getString();\n//          Serial.println(payload);\n//        }\n//      } else {\n//        Serial.printf(\"[HTTP] GET... failed, error: %s\\n\", http.errorToString(httpCode).c_str());\n//      }\n//\n//      http.end();\n//    }\n\n\n\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 259

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbaws.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 1030

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbaws.h","version":1}}Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 2495

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbsdcard.h","languageId":"cpp","version":1,"text":"#include \"FS.h\"\n#include \"SPIFFS.h\"\n#include \"State.h\"\n\n#ifndef BCBSD\n#define BCBSD\n#include \"defaulthtml.h\"\n\n\n// variables\nxSemaphoreHandle semFile = xSemaphoreCreateMutex(); // file operation lock\nvoid initSDCard() {\n  Serial.print(\"Initializing SD card...\");\n\n  if (!SPIFFS.begin(true)) {\n    Serial.println(\"initialization failed!\");\n    while (1);\n  }\n  Serial.println(\"initialization done.\");\n\n}\n\nvoid appendFile(fs::FS \u0026fs, const char * path, const char * message) {\n\n  if (xSemaphoreTake(semFile, 500)) {\n    File file = fs.open(path, FILE_APPEND);\n\n    if (!file) {\n      return;\n    }\n    file.print(message);\n    file.close();\n\n    xSemaphoreGive(semFile);\n  }\n}\n\nvoid writeFile(fs::FS \u0026fs, const char * path, const char * message) {\n\n  if (xSemaphoreTake(semFile, 500)) {\n    File file = fs.open(path, FILE_WRITE);\n\n    if (!file) {\n      return;\n    }\n    file.print(message);\n    file.close();\n\n    xSemaphoreGive(semFile);\n  }\n}\nString readFile(fs::FS \u0026fs, const char * path){\n    Serial.printf(\"Reading file: %s\\r\\n\", path);\n\n    File file = fs.open(path);\n    if(!file || file.isDirectory()){\n        Serial.println(\"- failed to open file for reading\");\n        return \"\";\n    }\n    String result;\n    Serial.println(\"- read from file:\");\n    while(file.available()){\n        result += String(char(file.read()));\n    }\n    file.close();\n    return result;\n}\n\nvoid renameFile(fs::FS \u0026fs, const char * path1, const char * path2) {\n  if (xSemaphoreTake(semFile, 500)) {\n    fs.rename(path1, path2);\n    xSemaphoreGive(semFile);\n  }\n}\n\nvoid deleteFile(fs::FS \u0026fs, const char * path) {\n  if (xSemaphoreTake(semFile, 500)) {\n    fs.remove(path);\n    xSemaphoreGive(semFile);\n  }\n}\n\n// write the default index.htm to SPIFFS\n//  check if index exists and only update if it doesn't\nvoid checkForIndex(){\n//  if(SPIFFS.exists(\"/data.json\")) {\n//    state.json(readFile(SPIFFS, \"/data.json\"));\n//    Serial.println(state.json());\n//  }\n  if(SPIFFS.exists(\"/index.htm\")) return; // \n  deleteFile(SPIFFS,\"/index.htm\");\n  delay(500);\n  File file = SPIFFS.open(\"/index.htm\", FILE_WRITE);\n    file.print(htmlCode);\n    file.close();\n    }\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 1033

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":15,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbsdcard.h","version":1}}Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 3695

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/defaulthtml.h","languageId":"cpp","version":1,"text":"//default html page if not in SPIFFS\n\n// beginning of default web page\nconst char htmlCode[]PROGMEM = R\"rawliteral(\n \u003c!DOCTYPE HTML\u003e\n\u003chtml\u003e\n\n\u003chead\u003e\n  \u003c! define meta data\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n    \u003c! define the style CSS of your page\u003e\n     \n\u003c/head\u003e\n\n\u003cbody\u003e\n\n\n\n    \u003cinput type='file' name='upload' id='upload' value=''\u003e\u003cspan id=\"percent\"\u003e\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cscript\u003e\n    var gateway = `ws://${window.location.hostname}/ws`;\n    var websocket;\n    var state = {};\n    var json = {};\n\n    window.addEventListener('load', onLoad);\n\n    function initWebSocket() {\n      console.log('Trying to open a WebSocket connection...');\n      websocket = new WebSocket(gateway);\n      websocket.onopen = onOpen;\n      websocket.onclose = onClose;\n      websocket.onmessage = onMessage;\n    }\n\n    function onOpen(event) {\n      console.log('Connection opened');\n    }\n\n    function onClose(event) {\n      console.log('Connection closed');\n      setTimeout(initWebSocket, 2000);\n    }\n\n    function toFixed(num, fixed) {\n      var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\n      return num.toString().match(re)[0];\n    }\n\n    function onMessage(event) {\n\n    }\n\n    // on page load\n    function onLoad(event) {\n      initWebSocket();\n      document.getElementById(\"upload\").addEventListener(\"change\", (e) =\u003e processFile(e));\n    }\n\n    function processFile(e) {\n      const reader = new FileReader();\n      reader.readAsText(e.path[0].files[0]);\n      var myfilename = e.path[0].files[0].name;\n\n      reader.onload = (e) =\u003e {\n        var myfile = e.target.result;\n        var myarray = myfile.split('');\n        var mylength = myfile.length;\n        i = 0;\n        k = 1;\n        var sendArray = [];\n        sendArray[0] = (\"upld:\" + myfilename);\n\n        function getChunk() {\n          var sendstring = '';\n          for (var j = 0; j \u003c 512; j++) {\n            if (i \u003c mylength) {\n              sendstring += myarray[i];\n            }\n            i++\n          }\n          return sendstring;\n        }\n\n        function loopThroughSplittedText(splittedText) {\n          splittedText.forEach(function (text, i) {\n            setTimeout(function () {\n              sendMessage(text, i);\n            }, i * 500)\n          })\n        }\n\n        while (i \u003c mylength) {\n\n          sendArray[k] = (\"file:\" + getChunk());\n          k++;\n        }\n        sendArray[k] = (\"comp\");\n        sendstring = '';\n        loopThroughSplittedText(sendArray);\n      };\n    }\n\n    function sendMessage(data, index) {\n      if (index) var percent = index / k * 100;\n      if (data.substring(0, 4) == 'file') document.getElementById('percent').innerHTML = percent + ' %';\n      if (data.substring(0, 4) == 'comp') {\n        document.getElementById('percent').innerHTML = \"completed\";\n        setTimeout(() =\u003e {\n          sendMessage(\"reload\");\n        }, 2000);\n      }\n      websocket.send(data);\n    }\n      function doTime() {\n        document.getElementById('time').innerHTML = new Date().toLocaleString();\n      }\n      setInterval(doTime, 1000);\n\n  \u003c/script\u003e\n\u003c/body\u003e\n\n\u003c/html\u003e\n)rawliteral\";\n\n// end of default web page\n"}},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/defaulthtml.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 1073

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"typecheck_incomplete_array_needs_initializer","message":"Definition of variable with array type needs an explicit size or an initializer","range":{"end":{"character":19,"line":3},"start":{"character":11,"line":3}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":28,"line":3},"start":{"character":21,"line":3}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server978808921/sketch/defaulthtml.h","version":1}}Content-Length: 37

{"id":11,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 679

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/State.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":12,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 683

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/WiFiCred1.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":13,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 682

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbaws.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":14,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 680

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbaws.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 683

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 685

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/defaulthtml.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":17,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/garden.ino.cpp"},"range":{"start":{"line":3,"character":19},"end":{"line":3,"character":19}},"context":{"diagnostics":[]}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":18,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 192

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server978808921/sketch/bcbaws.cpp"},"position":{"line":78,"character":36}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"id":19,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `command`  \n\n---\nType: `class String`  \n\n---\n```cpp\n// In BcbAws::parseCommand\nString command\n```"},"range":{"end":{"character":40,"line":78},"start":{"character":33,"line":78}}}}
>>>
Content-Length: 59

{"method":"shutdown","params":null,"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":20,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}






Started logging.

>>>
Content-Length: 2097

{"method":"initialize","params":{"processId":54631,"rootPath":"/tmp/arduino-language-server518537796/sketch","rootUri":"file:///tmp/arduino-language-server518537796/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}Content-Length: 3695

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/defaulthtml.h","languageId":"cpp","version":1,"text":"//default html page if not in SPIFFS\n\n// beginning of default web page\nconst char htmlCode[]PROGMEM = R\"rawliteral(\n \u003c!DOCTYPE HTML\u003e\n\u003chtml\u003e\n\n\u003chead\u003e\n  \u003c! define meta data\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n    \u003c! define the style CSS of your page\u003e\n     \n\u003c/head\u003e\n\n\u003cbody\u003e\n\n\n\n    \u003cinput type='file' name='upload' id='upload' value=''\u003e\u003cspan id=\"percent\"\u003e\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cscript\u003e\n    var gateway = `ws://${window.location.hostname}/ws`;\n    var websocket;\n    var state = {};\n    var json = {};\n\n    window.addEventListener('load', onLoad);\n\n    function initWebSocket() {\n      console.log('Trying to open a WebSocket connection...');\n      websocket = new WebSocket(gateway);\n      websocket.onopen = onOpen;\n      websocket.onclose = onClose;\n      websocket.onmessage = onMessage;\n    }\n\n    function onOpen(event) {\n      console.log('Connection opened');\n    }\n\n    function onClose(event) {\n      console.log('Connection closed');\n      setTimeout(initWebSocket, 2000);\n    }\n\n    function toFixed(num, fixed) {\n      var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\n      return num.toString().match(re)[0];\n    }\n\n    function onMessage(event) {\n\n    }\n\n    // on page load\n    function onLoad(event) {\n      initWebSocket();\n      document.getElementById(\"upload\").addEventListener(\"change\", (e) =\u003e processFile(e));\n    }\n\n    function processFile(e) {\n      const reader = new FileReader();\n      reader.readAsText(e.path[0].files[0]);\n      var myfilename = e.path[0].files[0].name;\n\n      reader.onload = (e) =\u003e {\n        var myfile = e.target.result;\n        var myarray = myfile.split('');\n        var mylength = myfile.length;\n        i = 0;\n        k = 1;\n        var sendArray = [];\n        sendArray[0] = (\"upld:\" + myfilename);\n\n        function getChunk() {\n          var sendstring = '';\n          for (var j = 0; j \u003c 512; j++) {\n            if (i \u003c mylength) {\n              sendstring += myarray[i];\n            }\n            i++\n          }\n          return sendstring;\n        }\n\n        function loopThroughSplittedText(splittedText) {\n          splittedText.forEach(function (text, i) {\n            setTimeout(function () {\n              sendMessage(text, i);\n            }, i * 500)\n          })\n        }\n\n        while (i \u003c mylength) {\n\n          sendArray[k] = (\"file:\" + getChunk());\n          k++;\n        }\n        sendArray[k] = (\"comp\");\n        sendstring = '';\n        loopThroughSplittedText(sendArray);\n      };\n    }\n\n    function sendMessage(data, index) {\n      if (index) var percent = index / k * 100;\n      if (data.substring(0, 4) == 'file') document.getElementById('percent').innerHTML = percent + ' %';\n      if (data.substring(0, 4) == 'comp') {\n        document.getElementById('percent').innerHTML = \"completed\";\n        setTimeout(() =\u003e {\n          sendMessage(\"reload\");\n        }, 2000);\n      }\n      websocket.send(data);\n    }\n      function doTime() {\n        document.getElementById('time').innerHTML = new Date().toLocaleString();\n      }\n      setInterval(doTime, 1000);\n\n  \u003c/script\u003e\n\u003c/body\u003e\n\n\u003c/html\u003e\n)rawliteral\";\n\n// end of default web page\n"}},"jsonrpc":"2.0"}Content-Length: 2519

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbsdcard.h","languageId":"cpp","version":1,"text":"#include \"FS.h\"\n#include \"SPIFFS.h\"\n#include \"State.h\"\n\n#ifndef BCBSD\n#define BCBSD\n#include \"defaulthtml.h\"\n\n\n// variables\nxSemaphoreHandle semFile = xSemaphoreCreateMutex(); // file operation lock\nvoid initSDCard() {\n  Serial.print(\"Initializing SD card...\");\n\n  if (!SPIFFS.begin(true)) {\n    Serial.println(\"initialization failed!\");\n    while (1);\n  }\n  Serial.println(\"initialization done.\");\n\n}\n\nvoid appendFile(fs::FS \u0026fs, const char * path, const char * message) {\n\n  if (xSemaphoreTake(semFile, 500)) {\n    File file = fs.open(path, FILE_APPEND);\n\n    if (!file) {\n      return;\n    }\n    file.print(message);\n    file.close();\n\n    xSemaphoreGive(semFile);\n  }\n}\n\nvoid writeFile(fs::FS \u0026fs, const char * path, const char * message) {\n\n  if (xSemaphoreTake(semFile, 500)) {\n    File file = fs.open(path, FILE_WRITE);\n\n    if (!file) {\n      return;\n    }\n    file.print(message);\n    file.close();\n\n    xSemaphoreGive(semFile);\n  }\n}\nString readFile(fs::FS \u0026fs, const char * path){\n    Serial.printf(\"Reading file: %s\\r\\n\", path);\n\n    File file = fs.open(path);\n    if(!file || file.isDirectory()){\n        Serial.println(\"- failed to open file for reading\");\n        return \"\";\n    }\n    String result;\n    Serial.println(\"- read from file:\");\n    while(file.available()){\n        result += String(char(file.read()));\n    }\n    file.close();\n    return result;\n}\n\nvoid renameFile(fs::FS \u0026fs, const char * path1, const char * path2) {\n  if (xSemaphoreTake(semFile, 500)) {\n    fs.rename(path1, path2);\n    xSemaphoreGive(semFile);\n  }\n}\n\nvoid deleteFile(fs::FS \u0026fs, const char * path) {\n  if (xSemaphoreTake(semFile, 500)) {\n    fs.remove(path);\n    xSemaphoreGive(semFile);\n  }\n}\n\n// write the default index.htm to SPIFFS\n//  check if index exists and only update if it doesn't\n//void checkForIndex(){\n////  if(SPIFFS.exists(\"/data.json\")) {\n////    state.json(readFile(SPIFFS, \"/data.json\"));\n////    Serial.println(state.json());\n////  }\n//  if(SPIFFS.exists(\"/index.htm\")) return; // \n//  deleteFile(SPIFFS,\"/index.htm\");\n//  delay(500);\n//  File file = SPIFFS.open(\"/index.htm\", FILE_WRITE);\n//    file.print(htmlCode);\n//    file.close();\n//    }\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 1052

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","languageId":"cpp","version":1,"text":"#ifndef BCBAWS\n#define BCBAWS\n#include \u003cArduino.h\u003e\n#include \u003cESPAsyncWebServer.h\u003e\n#include \u003cSPIFFS.h\u003e\n#include \"State.h\"\n//#include \u003cHTTPClient.h\u003e\n\n\n\nclass BcbAws{\n  public:\nBcbAws();  \nBcbAwsInit(State*istate);\nAsyncWebServer server = AsyncWebServer(80);\nAsyncWebSocket ws = AsyncWebSocket(\"/ws\");\n\nvoid parseCommand(String command);\nvoid notifyClients();\nvoid handleWebSocketMessage(void *arg, uint8_t *data, size_t len);\nvoid deleteFile(fs::FS \u0026fs, const char * path);\nvoid renameFile(fs::FS \u0026fs, const char * path1, const char * path2);\nString readFile(fs::FS \u0026fs, const char * path);\nvoid writeFile(fs::FS \u0026fs, const char * path, const char * message);\nvoid appendFile(fs::FS \u0026fs, const char * path, const char * message);\n\n  private:\n  State* state;\n};\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 3903

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp","languageId":"cpp","version":1,"text":"#include\"bcbaws.h\"\n#include\u003cFS.h\u003e\n#include\u003cSPIFFS.h\u003e\nBcbAws::BcbAws() {}\nBcbAws::BcbAwsInit(State* istate) {\n  state = istate;\n  SPIFFS.begin(true);\n  server.on(\"/\", HTTP_GET, [ = ](AsyncWebServerRequest * request) {\n    request-\u003esend(SPIFFS, \"/index.htm\", \"text/html\");\n  });\n\n  server.on(\"/config\", HTTP_GET, [ = ](AsyncWebServerRequest * request) {\n    request-\u003esend(SPIFFS, \"/config.htm\", \"text/html\");\n  });\n\n  server.on(\"/json\", HTTP_GET, [ = ](AsyncWebServerRequest * request) {\n    request-\u003esend(200, \"application/json\", state-\u003egetJSON());\n  });\n  // start the web server\n  server.begin();\n  ws.onEvent([ = ](AsyncWebSocket * server, AsyncWebSocketClient * client,\n  AwsEventType type, void *arg, uint8_t *data, size_t len) {\n    switch (type) {\n      case WS_EVT_CONNECT:\n        notifyClients();\n        break;\n      case WS_EVT_DISCONNECT:\n        Serial.printf(\"WebSocket client #%u disconnected\\n\", client-\u003eid());\n        break;\n      case WS_EVT_DATA:\n        handleWebSocketMessage(arg, data, len);\n        break;\n      case WS_EVT_PONG:\n      case WS_EVT_ERROR:\n        break;\n    }\n  });\n  server.addHandler(\u0026ws);\n}\n\nvoid BcbAws::notifyClients() {\n  ws.textAll(state-\u003egetJSON());  // send non-slider updating data\n}\n\nvoid BcbAws::handleWebSocketMessage(void *arg, uint8_t *data, size_t len) { // receive the comm from the client and convert it into a string\n  AwsFrameInfo *info = (AwsFrameInfo *)arg;\n  if (info-\u003efinal \u0026\u0026 info-\u003eindex == 0 \u0026\u0026 info-\u003elen == len \u0026\u0026\n      info-\u003eopcode == WS_TEXT) {\n    data[len] = 0;\n    parseCommand((char *)data);\n  }\n}\n\n\nvoid BcbAws::parseCommand(String command) {\n\n  if (command == \"relay\") {\n    state-\u003erelay(!state-\u003erelay());\n    digitalWrite(2, state-\u003erelay());\n    notifyClients();\n  }\n  // file upload handler\n\n  if (command.substring(0, 4) == \"upld\") {\n    state-\u003efilename(command.substring(5));\n    deleteFile(SPIFFS, \"/temp.txt\");\n  }\n\n  if (command.substring(0, 4) == \"comp\") {\n    deleteFile(SPIFFS, (\"/\" + state-\u003efilename()).c_str());\n    renameFile(SPIFFS, \"/temp.txt\", (\"/\" + state-\u003efilename()).c_str());\n    state-\u003efilename(\"\");\n  }\n\n  if (command.substring(0, 4) == \"file\") {\n    String message = command.substring(5);\n    appendFile(SPIFFS, \"/temp.txt\", message.c_str());\n  }\n\n  if (command == \"reload\") {\n    state-\u003ereload(true);\n    notifyClients();\n    state-\u003ereload(false);\n  }\n}\n\nvoid BcbAws::appendFile(fs::FS \u0026fs, const char * path, const char * message) {\n\n  File file = fs.open(path, FILE_APPEND);\n\n  if (!file) {\n    return;\n  }\n  file.print(message);\n  file.close();\n\n\n}\n\nvoid BcbAws::writeFile(fs::FS \u0026fs, const char * path, const char * message) {\n\n  File file = fs.open(path, FILE_WRITE);\n\n  if (!file) {\n    return;\n  }\n  file.print(message);\n  file.close();\n\n\n}\nString BcbAws::readFile(fs::FS \u0026fs, const char * path) {\n  Serial.printf(\"Reading file: %s\\r\\n\", path);\n\n  File file = fs.open(path);\n  if (!file || file.isDirectory()) {\n    Serial.println(\"- failed to open file for reading\");\n    return \"\";\n  }\n  String result;\n  Serial.println(\"- read from file:\");\n  while (file.available()) {\n    result += String(char(file.read()));\n  }\n  file.close();\n  return result;\n}\n\nvoid BcbAws::renameFile(fs::FS \u0026fs, const char * path1, const char * path2) {\n\n  fs.rename(path1, path2);\n}\n\nvoid BcbAws::deleteFile(fs::FS \u0026fs, const char * path) {\n\n  fs.remove(path);\n\n}\n"}},"jsonrpc":"2.0"}Content-Length: 294

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/WiFiCred1.h","languageId":"cpp","version":1,"text":"// wifi connection credentials\nconst char *ssid = \"Espnet\";\nconst char *password = \"8141695320\";\n"}},"jsonrpc":"2.0"}Content-Length: 341

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/WiFiCred.h","languageId":"cpp","version":1,"text":"\n//wifi connection credentials\nconst char* ssid     = \"Espnet\";\n//const char* ssid     = \"Frontier4848\";\nconst char* password = \"*********\";\n"}},"jsonrpc":"2.0"}Content-Length: 748

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.h","languageId":"cpp","version":1,"text":"#ifndef STATE\n#define STATE\n#include\u003cArduino.h\u003e\n#include\u003cmap\u003e\n//set initial state\n\nclass State {\n  public:\n\n    int moisture();\n\n    int threshold();\n    int threshold(int value);\n\n\n    String filename();\n    String filename(String value);\n\n\n    bool setOta (bool value);\n    bool getOta ();\n\n    bool reload();\n    bool reload(bool value);\n\n    bool relay();\n    bool relay(bool value);\n\n    String getJSON();\n\n  private:\n    std::map\u003cString, String\u003e jsonMap;\n    bool ota = false;\n\n};\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 1892

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp","languageId":"cpp","version":1,"text":"#include\"State.h\"\n\nint State::moisture() {\n      int avg = 0;\n      for (int num = 0; num \u003c= 9; num++) {\n        avg += analogRead(32);\n      }\n      jsonMap[\"moisture\"] = String(avg / 10);\n      return avg / 10;\n    }\n\n\n    int State::threshold() {\n      return jsonMap[\"threshold\"].toInt();\n    };\n    \n    int State::threshold(int value) {\n      jsonMap[\"threshold\"] = String(value);\n      return jsonMap[\"threshold\"].toInt();\n    };\n    \n\n    String State::filename() {\n      return jsonMap[\"filename\"];\n    };\n    \n    String State::filename(String value) {\n      jsonMap[\"filename\"] = value;\n      return jsonMap[\"filename\"];\n    };\n\n\n    bool State::setOta (bool value) {\n      ota = value;\n      return ota;\n    };\n    \n    bool State::getOta () {\n      return ota;\n    };\n\n\n    bool State::reload() {\n      return (jsonMap[\"reload\"] == \"true\");\n    };\n    \n    bool State::reload(bool value) {\n      jsonMap[\"reload\"] = value ? \"true\" : \"false\";\n      return (jsonMap[\"reload\"] == \"true\");\n    };\n\n\n    bool State::relay() {\n      return (jsonMap[\"relay\"] == \"true\");\n    };\n    \n    bool State::relay(bool value) {\n      jsonMap[\"relay\"] = value ? \"true\" : \"false\";\n      return (jsonMap[\"relay\"] == \"true\");\n    };\n\n\n    String State::getJSON() {\n      moisture();\n      String json = \"{\";\n      String quote = \"\\\"\";\n      for (auto const x : jsonMap) {\n        if (json.length() \u003e 3) json += \",\";\n        json += quote + x.first + quote + \":\" + quote + x.second + quote;\n      };\n      json += \"}\";\n      Serial.println(json);\n      return json;\n    }\n"}},"jsonrpc":"2.0"}Content-Length: 5851

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","languageId":"cpp","version":1,"text":"#line 1 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\n#include \u003cArduino.h\u003e\n#include \"State.h\"\n#include \"time.h\"\n#include \"WiFiCred1.h\"\n#include \u003cArduinoJson.h\u003e\n#include \u003cArduinoOTA.h\u003e\n#include \u003cESPmDNS.h\u003e\n#include \u003cWiFi.h\u003e\n#include \u003cWiFiUdp.h\u003e\n#include \"bcbaws.h\"\n\n#define ARDUINO_RUNNING_CORE 1\nState state;\n\n// internal rtc variables\nconst char *ntpServer = \"pool.ntp.org\";\nconst long gmtOffset_sec = -18000;\nconst int daylightOffset_sec = 3600;\n\n\nbool wifiavail = false;\n\n// localtime from internal rtc\n#line 24 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalTime();\n#line 32 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalHour();\n#line 49 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nvoid setup();\n#line 128 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nvoid loop();\n#line 24 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalTime() {\n  struct tm timeinfo;\n  if (!getLocalTime(\u0026timeinfo)) {\n    return (\"\");\n  }\n  return (asctime(\u0026timeinfo));\n}\n\nString printLocalHour() {\n  struct tm timeinfo;\n  if (!getLocalTime(\u0026timeinfo)) {\n    return (\"\");\n  }\n  return (String(asctime(\u0026timeinfo)).substring(11, 16) + \" \");\n}\n\n// define functions\nvoid UpdateClients(void *pvParameters); // maintains the websocket display\n//void UpdateDatabase(void *pvParameters); // maintains the websocket display\nvoid initWiFi();\nvoid initTime();\n\n\nBcbAws aws;\n\nvoid setup() {\n  // start the serial interface\n  Serial.begin(115200);\n  delay(500);\n  initWiFi();\n  initTime();\n  aws.(\u0026state);\n  digitalWrite(2, LOW);\n  pinMode(2, OUTPUT);\n  state.relay(false);\n  \n  xTaskCreatePinnedToCore(UpdateClients, // function name \n                          \"updateClients\" // A name just for humans\n                          ,\n                          4096 // This stack size can be checked \u0026 adjusted by\n                          // reading the Stack Highwater\n                          ,\n                          NULL,// task input parameter\n                          2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n                          // being the highest, and 0 being the lowest.\n                          ,\n                          NULL, // task handle\n                          ARDUINO_RUNNING_CORE);\n//\n//  xTaskCreatePinnedToCore(UpdateDatabase, \"updateDatabase\" // A name just for humans\n//                          ,\n//                          4096 // This stack size can be checked \u0026 adjusted by\n//                          // reading the Stack Highwater\n//                          ,\n//                          NULL, 2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n//                          // being the highest, and 0 being the lowest.\n//                          ,\n//                          NULL, ARDUINO_RUNNING_CORE);\n\n  ArduinoOTA\n  .onStart([]() {\n    String type;\n    if (ArduinoOTA.getCommand() == U_FLASH)\n      type = \"sketch\";\n    else // U_SPIFFS\n      type = \"filesystem\";\n\n    // NOTE: if updating SPIFFS this would be the place to unmount SPIFFS\n    SPIFFS.end();\n // Disable client connections    \n    aws.ws.enable(false);\n\n    // Advertise connected clients what's going on\n    aws.ws.textAll(\"OTA Update Started\");\n\n    // Close them\n    aws.ws.closeAll();\n    state.setOta(true);\n\n    \n    Serial.println(\"Start updating \" + type);\n  })\n  .onEnd([]() {\n    Serial.println(\"\\nEnd\");\n  })\n  .onProgress([](unsigned int progress, unsigned int total) {\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\n  })\n  .onError([](ota_error_t error) {\n    Serial.printf(\"Error[%u]: \", error);\n    if (error == OTA_AUTH_ERROR)\n      Serial.println(\"Auth Failed\");\n    else if (error == OTA_BEGIN_ERROR)\n      Serial.println(\"Begin Failed\");\n    else if (error == OTA_CONNECT_ERROR)\n      Serial.println(\"Connect Failed\");\n    else if (error == OTA_RECEIVE_ERROR)\n      Serial.println(\"Receive Failed\");\n    else if (error == OTA_END_ERROR)\n      Serial.println(\"End Failed\");\n  });\n  ArduinoOTA.begin();\n}\n\nvoid loop() {\n  ArduinoOTA.handle(); // check if an update is available\n  if (WiFi.status() != WL_CONNECTED) // check if wifi is still connected, if not, reconnect\n    initWiFi();\n  vTaskDelay(60);\n}\n\nvoid UpdateClients(void *pvParameters) { // handle websocket and oled displays\n  (void)pvParameters;\n  for (;;) {\n    if(!state.getOta()) {aws.notifyClients();} // send state to the client as a json string\n    vTaskDelay(10000);\n  }\n}\n\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() \u003e 3400 \u0026\u0026 state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}\n\n\n\n\nvoid initWiFi() {\n  Serial.println(\"connecting to wifi\");\n  // connect to wifi\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  if (WiFi.waitForConnectResult() != WL_CONNECTED) {\n  Serial.println(\"connecting to wifi failed\");\n  delay(500);\n  initWiFi();\n  }\n  Serial.println(\"wifi connected\");\n  wifiavail = true;\n}\n\nvoid initTime() {\n  // set the clock from ntp server\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n  printLocalTime();\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/defaulthtml.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/67","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/67","percentage":1.4925373134328359}}}Content-Length: 1132

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"misc-definitions-in-headers","message":"Variable 'ssid' defined in a header file; variable definitions in header files can lead to ODR violations","range":{"end":{"character":16,"line":1},"start":{"character":12,"line":1}},"severity":2,"source":"clang-tidy"},{"code":"misc-definitions-in-headers","message":"Variable 'password' defined in a header file; variable definitions in header files can lead to ODR violations","range":{"end":{"character":20,"line":2},"start":{"character":12,"line":2}},"severity":2,"source":"clang-tidy"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/WiFiCred1.h","version":1}}Content-Length: 1131

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"misc-definitions-in-headers","message":"Variable 'ssid' defined in a header file; variable definitions in header files can lead to ODR violations","range":{"end":{"character":16,"line":2},"start":{"character":12,"line":2}},"severity":2,"source":"clang-tidy"},{"code":"misc-definitions-in-headers","message":"Variable 'password' defined in a header file; variable definitions in header files can lead to ODR violations","range":{"end":{"character":20,"line":4},"start":{"character":12,"line":4}},"severity":2,"source":"clang-tidy"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/WiFiCred.h","version":1}}Content-Length: 1073

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"typecheck_incomplete_array_needs_initializer","message":"Definition of variable with array type needs an explicit size or an initializer","range":{"end":{"character":19,"line":3},"start":{"character":11,"line":3}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":28,"line":3},"start":{"character":21,"line":3}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/defaulthtml.h","version":1}}Content-Length: 36

{"id":1,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 1028

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":9,"line":2},"start":{"character":8,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/State.h","version":1}}Content-Length: 1031

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":17,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp","version":1}}Content-Length: 1033

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":15,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbsdcard.h","version":1}}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 259

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 1234

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":10,"line":13},"start":{"character":0,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","version":1}}Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 1234

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":18,"line":4},"start":{"character":8,"line":4}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp","version":1}}Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/WiFiCred1.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 258

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 1525

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here","range":{"end":{"character":19,"line":10},"start":{"character":9,"line":10}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":7,"line":64},"start":{"character":6,"line":64}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":1}}Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 260

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"context":{"diagnostics":[]}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 682

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/WiFiCred1.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":5},"jsonrpc":"2.0"}Content-Length: 685

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/defaulthtml.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 679

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":11,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":6},"jsonrpc":"2.0"}Content-Length: 681

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":12,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":7},"jsonrpc":"2.0"}Content-Length: 683

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbsdcard.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":13,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 680

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/67","percentage":2.9850746268656718}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/67","percentage":2.9850746268656718}}}Content-Length: 37

{"id":14,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 682

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"context":{"diagnostics":[]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/67","percentage":4.4776119402985071}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/67","percentage":4.4776119402985071}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/67","percentage":5.9701492537313436}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/67","percentage":5.9701492537313436}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/67","percentage":7.4626865671641793}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/67","percentage":7.4626865671641793}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/67","percentage":8.9552238805970141}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/67","percentage":8.9552238805970141}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/67","percentage":10.447761194029852}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/67","percentage":10.447761194029852}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/67","percentage":11.940298507462687}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/67","percentage":11.940298507462687}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/67","percentage":13.432835820895523}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/67","percentage":13.432835820895523}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/67","percentage":14.925373134328359}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/67","percentage":14.925373134328359}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/67","percentage":16.417910447761194}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/67","percentage":16.417910447761194}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/67","percentage":17.910447761194028}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/67","percentage":17.910447761194028}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/67","percentage":19.402985074626866}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/67","percentage":19.402985074626866}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/67","percentage":20.895522388059703}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/67","percentage":20.895522388059703}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/67","percentage":22.388059701492537}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/67","percentage":22.388059701492537}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/67","percentage":23.880597014925375}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/67","percentage":23.880597014925375}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/67","percentage":25.373134328358208}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/67","percentage":25.373134328358208}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/67","percentage":26.865671641791046}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/67","percentage":26.865671641791046}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/67","percentage":28.35820895522388}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/67","percentage":28.35820895522388}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/67","percentage":29.850746268656717}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/67","percentage":29.850746268656717}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/67","percentage":31.343283582089551}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/67","percentage":31.343283582089551}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/67","percentage":32.835820895522389}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/67","percentage":32.835820895522389}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/67","percentage":34.328358208955223}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/67","percentage":34.328358208955223}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/67","percentage":35.820895522388057}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/67","percentage":35.820895522388057}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/67","percentage":37.313432835820898}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/67","percentage":37.313432835820898}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/67","percentage":38.805970149253731}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/67","percentage":38.805970149253731}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/67","percentage":40.298507462686565}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/67","percentage":40.298507462686565}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/67","percentage":41.791044776119406}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/67","percentage":41.791044776119406}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/67","percentage":43.28358208955224}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/67","percentage":43.28358208955224}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/67","percentage":44.776119402985074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/67","percentage":44.776119402985074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/67","percentage":46.268656716417908}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/67","percentage":46.268656716417908}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/67","percentage":47.761194029850749}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/67","percentage":47.761194029850749}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/67","percentage":49.253731343283583}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/67","percentage":49.253731343283583}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/67","percentage":50.746268656716417}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/67","percentage":50.746268656716417}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/67","percentage":52.238805970149251}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/67","percentage":52.238805970149251}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/67","percentage":53.731343283582092}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/67","percentage":53.731343283582092}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/67","percentage":55.223880597014926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/67","percentage":55.223880597014926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/67","percentage":56.71641791044776}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/67","percentage":56.71641791044776}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/67","percentage":58.208955223880594}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/67","percentage":58.208955223880594}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/67","percentage":59.701492537313435}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/67","percentage":59.701492537313435}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/67","percentage":61.194029850746269}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/67","percentage":61.194029850746269}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/67","percentage":62.686567164179102}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/67","percentage":62.686567164179102}}}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":10,"character":19}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":17,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 580

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":19}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here"}]}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":18,"jsonrpc":"2.0","result":[]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/67","percentage":64.179104477611943}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/67","percentage":64.179104477611943}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/67","percentage":65.671641791044777}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/67","percentage":65.671641791044777}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/67","percentage":67.164179104477611}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/67","percentage":67.164179104477611}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/67","percentage":68.656716417910445}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/67","percentage":68.656716417910445}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/67","percentage":70.149253731343279}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/67","percentage":70.149253731343279}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/67","percentage":71.641791044776113}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/67","percentage":71.641791044776113}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/67","percentage":73.134328358208961}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/67","percentage":73.134328358208961}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/67","percentage":74.626865671641795}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/67","percentage":74.626865671641795}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/67","percentage":76.119402985074629}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/67","percentage":76.119402985074629}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/67","percentage":77.611940298507463}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/67","percentage":77.611940298507463}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/67","percentage":79.104477611940297}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/67","percentage":79.104477611940297}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/67","percentage":80.597014925373131}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/67","percentage":80.597014925373131}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/67","percentage":82.089552238805965}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/67","percentage":82.089552238805965}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/67","percentage":83.582089552238813}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/67","percentage":83.582089552238813}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/67","percentage":85.074626865671647}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/67","percentage":85.074626865671647}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"58/67","percentage":86.567164179104481}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"58/67","percentage":86.567164179104481}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"59/67","percentage":88.059701492537314}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"59/67","percentage":88.059701492537314}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"60/67","percentage":89.552238805970148}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"60/67","percentage":89.552238805970148}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"61/67","percentage":91.044776119402982}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"61/67","percentage":91.044776119402982}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"62/67","percentage":92.537313432835816}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"63/67","percentage":94.02985074626865}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"64/67","percentage":95.522388059701498}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"65/67","percentage":97.014925373134332}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"66/67","percentage":98.507462686567166}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 188

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.h"},"position":{"line":4,"character":14}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":19,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":13,"character":11}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 240

{"id":20,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `state`  \n\n---\nType: `class State`  \n\n---\n```cpp\nState state\n```"},"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":10,"character":17}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":21,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 580

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":19}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here"}]}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":22,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 208

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":10,"character":17}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":23,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 581

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":10,"character":17},"end":{"line":10,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":19}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here"}]}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":24,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"position":{"line":5,"character":8}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":25,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"position":{"line":3,"character":0}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 243

{"id":26,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include <HTTPClient.h>  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"end":{"character":6,"line":3},"start":{"character":0,"line":3}}}}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"position":{"line":3,"character":0}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 243

{"id":27,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include <HTTPClient.h>  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"end":{"character":6,"line":3},"start":{"character":0,"line":3}}}}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"position":{"line":4,"character":0}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 243

{"id":28,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `BcbAws`  \n\n---\n#include <HTTPClient.h>  \n\n---\n```cpp\nclass BcbAws {}\n```"},"range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}}}}
>>>
Content-Length: 202

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"position":{"line":4,"character":0}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 1002

{"id":29,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":6,"line":3},"start":{"character":0,"line":3}}},{"kind":1,"range":{"end":{"character":14,"line":3},"start":{"character":8,"line":3}}},{"kind":1,"range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}}},{"kind":1,"range":{"end":{"character":11,"line":40},"start":{"character":5,"line":40}}},{"kind":1,"range":{"end":{"character":11,"line":44},"start":{"character":5,"line":44}}},{"kind":1,"range":{"end":{"character":11,"line":54},"start":{"character":5,"line":54}}},{"kind":1,"range":{"end":{"character":11,"line":86},"start":{"character":5,"line":86}}},{"kind":1,"range":{"end":{"character":11,"line":99},"start":{"character":5,"line":99}}},{"kind":1,"range":{"end":{"character":13,"line":111},"start":{"character":7,"line":111}}},{"kind":1,"range":{"end":{"character":11,"line":128},"start":{"character":5,"line":128}}},{"kind":1,"range":{"end":{"character":11,"line":133},"start":{"character":5,"line":133}}}]}
>>>
Content-Length: 262

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":0}},"context":{"diagnostics":[]}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":30,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"position":{"line":6,"character":8}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 557

{"id":31,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `begin`  \n\n---\n→ `bool`  \nParameters:  \n- `bool formatOnFail = false`\n- `const char * basePath = \"/spiffs\"`\n- `uint8_t maxOpenFiles = 10`\n- `const char * partitionLabel = __null`\n\n---\n```cpp\n// In SPIFFSFS\npublic: bool begin(bool formatOnFail = false, const char *basePath = \"/spiffs\",\n           uint8_t maxOpenFiles = 10, const char *partitionLabel = __null)\n```"},"range":{"end":{"character":8,"line":6},"start":{"character":2,"line":6}}}}
>>>
Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp","version":2},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":0}},"text":"v"}]},"jsonrpc":"2.0"}Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp","version":3},"contentChanges":[{"range":{"start":{"line":4,"character":1},"end":{"line":4,"character":1}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp","version":4},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1562

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'voBcbAws'; did you mean 'BcbAws'? (fix available)\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:12:7:\nnote: 'BcbAws' declared here","range":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":20,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp","version":3}}Content-Length: 1563

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'voiBcbAws'; did you mean 'BcbAws'? (fix available)\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:12:7:\nnote: 'BcbAws' declared here","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":21,"line":4},"start":{"character":11,"line":4}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp","version":4}}
>>>
Content-Length: 589

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":3},"end":{"line":4,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'voiBcbAws'; did you mean 'BcbAws'? (fix available)\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:12:7:\nnote: 'BcbAws' declared here"}]}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 643

{"id":32,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'voiBcbAws'; did you mean 'BcbAws'? (fix available)\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:12:7:\nnote: 'BcbAws' declared here","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp":[{"newText":"BcbAws","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'voiBcbAws' to 'BcbAws'"}]}
>>>
Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp","version":5},"contentChanges":[{"range":{"start":{"line":4,"character":3},"end":{"line":4,"character":3}},"text":"d"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1221

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'voidBcbAws'","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp","version":5}}
>>>
Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp","version":6},"contentChanges":[{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1032

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp","version":6}}
>>>
Content-Length: 262

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":5},"end":{"line":4,"character":5}},"context":{"diagnostics":[]}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":33,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"position":{"line":3,"character":17}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":34,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 189

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"position":{"line":12,"character":7}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":35,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":35},"jsonrpc":"2.0"}Content-Length: 189

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"position":{"line":13,"character":3}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 317

{"id":36,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `BcbAwsInit`  \n\n---\n→ `int`  \nParameters:  \n- `State * istate`\n\n---\n```cpp\n// In BcbAws\npublic: int BcbAwsInit(State *istate)\n```"},"range":{"end":{"character":10,"line":13},"start":{"character":0,"line":13}}}}
>>>
Content-Length: 189

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"position":{"line":13,"character":1}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 317

{"id":37,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `BcbAwsInit`  \n\n---\n→ `int`  \nParameters:  \n- `State * istate`\n\n---\n```cpp\n// In BcbAws\npublic: int BcbAwsInit(State *istate)\n```"},"range":{"end":{"character":10,"line":13},"start":{"character":0,"line":13}}}}
>>>
Content-Length: 189

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"position":{"line":13,"character":1}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 317

{"id":38,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `BcbAwsInit`  \n\n---\n→ `int`  \nParameters:  \n- `State * istate`\n\n---\n```cpp\n// In BcbAws\npublic: int BcbAwsInit(State *istate)\n```"},"range":{"end":{"character":10,"line":13},"start":{"character":0,"line":13}}}}
>>>
Content-Length: 189

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"position":{"line":13,"character":0}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 317

{"id":39,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `BcbAwsInit`  \n\n---\n→ `int`  \nParameters:  \n- `State * istate`\n\n---\n```cpp\n// In BcbAws\npublic: int BcbAwsInit(State *istate)\n```"},"range":{"end":{"character":10,"line":13},"start":{"character":0,"line":13}}}}
>>>
Content-Length: 466

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":10}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":40,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 201

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"position":{"line":13,"character":0}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":41,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":13},"start":{"character":0,"line":13}}}]}
>>>
Content-Length: 465

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":10}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":42,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","version":2},"contentChanges":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":0}},"text":"v"}]},"jsonrpc":"2.0"}Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","version":3},"contentChanges":[{"range":{"start":{"line":13,"character":1},"end":{"line":13,"character":1}},"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1234

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","version":2}}Content-Length: 1234

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":12,"line":13},"start":{"character":0,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","version":3}}
>>>
Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","version":4},"contentChanges":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":2}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1234

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":13,"line":13},"start":{"character":0,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","version":4}}
>>>
Content-Length: 465

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":3},"end":{"line":13,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":43,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","version":5},"contentChanges":[{"range":{"start":{"line":13,"character":3},"end":{"line":13,"character":3}},"text":"d"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1234

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":14,"line":13},"start":{"character":0,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","version":5}}
>>>
Content-Length: 268

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","version":6},"contentChanges":[{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":4}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1030

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","version":6}}
>>>
Content-Length: 262

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":5},"end":{"line":13,"character":5}},"context":{"diagnostics":[]}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":44,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"}},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":30},"end":{"line":13,"character":30}},"context":{"diagnostics":[]}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":45,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 190

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"position":{"line":14,"character":39}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":46,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 581

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":10,"character":19},"end":{"line":10,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":19}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here"}]}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":47,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":13,"character":12},"end":{"line":13,"character":12}},"context":{"diagnostics":[]}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":48,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":10,"character":17}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":49,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 580

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":19}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here"}]}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":50,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":64,"character":8}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":51,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":64,"character":6}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":52,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 444

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":7}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":53,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 444

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":7}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":54,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":69,"character":11}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 923

{"id":55,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `xTaskCreatePinnedToCore`  \n\n---\n→ `BaseType_t`  \nParameters:  \n- `TaskFunction_t pvTaskCode`\n- `const char *const pcName`\n- `const uint32_t usStackDepth`\n- `void *const pvParameters`\n- `UBaseType_t uxPriority`\n- `TaskHandle_t *const pvCreatedTask`\n- `const BaseType_t xCoreID`\n\n---\n```cpp\nBaseType_t xTaskCreatePinnedToCore(TaskFunction_t pvTaskCode,\n                                   const char *const pcName,\n                                   const uint32_t usStackDepth,\n                                   void *const pvParameters,\n                                   UBaseType_t uxPriority,\n                                   TaskHandle_t *const pvCreatedTask,\n                                   const BaseType_t xCoreID)\n```"},"range":{"end":{"character":25,"line":69},"start":{"character":2,"line":69}}}}
>>>
Content-Length: 274

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 228

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":64,"character":7},"context":{"triggerKind":1}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 718

{"id":56,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"void","filterText":"appendFile","insertText":"appendFile","insertTextFormat":2,"kind":2,"label":" appendFile(fs::FS &fs, const char *path, const char *message)","score":9.6800003051757812,"sortText":"3ee51eb8appendFile","textEdit":{"newText":"appendFile","range":{"end":{"character":7,"line":64},"start":{"character":6,"line":64}}}},{"detail":"int","filterText":"BcbAwsInit","insertText":"BcbAwsInit","insertTextFormat":2,"kind":2,"label":" BcbAwsInit(State *istate)","score":1.1000000238418579,"sortText":"80000000BcbAwsInit","textEdit":{"newText":"BcbAwsInit","range":{"end":{"character":7,"line":64},"start":{"character":6,"line":64}}}}]}}Content-Length: 1519

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here","range":{"end":{"character":19,"line":10},"start":{"character":9,"line":10}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'a' in 'BcbAws'","range":{"end":{"character":7,"line":64},"start":{"character":6,"line":64}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":2}}
>>>
Content-Length: 274

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":64,"character":7},"end":{"line":64,"character":7}},"text":"w"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1520

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here","range":{"end":{"character":19,"line":10},"start":{"character":9,"line":10}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'aw' in 'BcbAws'","range":{"end":{"character":8,"line":64},"start":{"character":6,"line":64}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":3}}
>>>
Content-Length: 274

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":64,"character":8},"end":{"line":64,"character":8}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 274

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":64,"character":9},"end":{"line":64,"character":9}},"text":"w"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1523

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"In included file: C++ requires a type specifier for all declarations\n\n/tmp/arduino-language-server518537796/sketch/bcbaws.h:15:1:\nnote: error occurred here","range":{"end":{"character":19,"line":10},"start":{"character":9,"line":10}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'awsw' in 'BcbAws'","range":{"end":{"character":10,"line":64},"start":{"character":6,"line":64}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":5}}
>>>
Content-Length: 444

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":10},"end":{"line":64,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":10}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'awsw' in 'BcbAws'"}]}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":57,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 5859

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":6},"contentChanges":[{"text":"#line 1 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\n#include \u003cArduino.h\u003e\n#include \"State.h\"\n#include \"time.h\"\n#include \"WiFiCred1.h\"\n#include \u003cArduinoJson.h\u003e\n#include \u003cArduinoOTA.h\u003e\n#include \u003cESPmDNS.h\u003e\n#include \u003cWiFi.h\u003e\n#include \u003cWiFiUdp.h\u003e\n#include \"bcbaws.h\"\n\n#define ARDUINO_RUNNING_CORE 1\nState state;\n\n// internal rtc variables\nconst char *ntpServer = \"pool.ntp.org\";\nconst long gmtOffset_sec = -18000;\nconst int daylightOffset_sec = 3600;\n\n\nbool wifiavail = false;\n\n// localtime from internal rtc\n#line 24 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalTime();\n#line 32 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalHour();\n#line 49 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nvoid setup();\n#line 128 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nvoid loop();\n#line 24 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalTime() {\n  struct tm timeinfo;\n  if (!getLocalTime(\u0026timeinfo)) {\n    return (\"\");\n  }\n  return (asctime(\u0026timeinfo));\n}\n\nString printLocalHour() {\n  struct tm timeinfo;\n  if (!getLocalTime(\u0026timeinfo)) {\n    return (\"\");\n  }\n  return (String(asctime(\u0026timeinfo)).substring(11, 16) + \" \");\n}\n\n// define functions\nvoid UpdateClients(void *pvParameters); // maintains the websocket display\n//void UpdateDatabase(void *pvParameters); // maintains the websocket display\nvoid initWiFi();\nvoid initTime();\n\n\nBcbAws aws;\n\nvoid setup() {\n  // start the serial interface\n  Serial.begin(115200);\n  delay(500);\n  initWiFi();\n  initTime();\n  aws.awsw(\u0026state);\n  digitalWrite(2, LOW);\n  pinMode(2, OUTPUT);\n  state.relay(false);\n  \n  xTaskCreatePinnedToCore(UpdateClients, // function name \n                          \"updateClients\" // A name just for humans\n                          ,\n                          4096 // This stack size can be checked \u0026 adjusted by\n                          // reading the Stack Highwater\n                          ,\n                          NULL,// task input parameter\n                          2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n                          // being the highest, and 0 being the lowest.\n                          ,\n                          NULL, // task handle\n                          ARDUINO_RUNNING_CORE);\n//\n//  xTaskCreatePinnedToCore(UpdateDatabase, \"updateDatabase\" // A name just for humans\n//                          ,\n//                          4096 // This stack size can be checked \u0026 adjusted by\n//                          // reading the Stack Highwater\n//                          ,\n//                          NULL, 2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n//                          // being the highest, and 0 being the lowest.\n//                          ,\n//                          NULL, ARDUINO_RUNNING_CORE);\n\n  ArduinoOTA\n  .onStart([]() {\n    String type;\n    if (ArduinoOTA.getCommand() == U_FLASH)\n      type = \"sketch\";\n    else // U_SPIFFS\n      type = \"filesystem\";\n\n    // NOTE: if updating SPIFFS this would be the place to unmount SPIFFS\n    SPIFFS.end();\n // Disable client connections    \n    aws.ws.enable(false);\n\n    // Advertise connected clients what's going on\n    aws.ws.textAll(\"OTA Update Started\");\n\n    // Close them\n    aws.ws.closeAll();\n    state.setOta(true);\n\n    \n    Serial.println(\"Start updating \" + type);\n  })\n  .onEnd([]() {\n    Serial.println(\"\\nEnd\");\n  })\n  .onProgress([](unsigned int progress, unsigned int total) {\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\n  })\n  .onError([](ota_error_t error) {\n    Serial.printf(\"Error[%u]: \", error);\n    if (error == OTA_AUTH_ERROR)\n      Serial.println(\"Auth Failed\");\n    else if (error == OTA_BEGIN_ERROR)\n      Serial.println(\"Begin Failed\");\n    else if (error == OTA_CONNECT_ERROR)\n      Serial.println(\"Connect Failed\");\n    else if (error == OTA_RECEIVE_ERROR)\n      Serial.println(\"Receive Failed\");\n    else if (error == OTA_END_ERROR)\n      Serial.println(\"End Failed\");\n  });\n  ArduinoOTA.begin();\n}\n\nvoid loop() {\n  ArduinoOTA.handle(); // check if an update is available\n  if (WiFi.status() != WL_CONNECTED) // check if wifi is still connected, if not, reconnect\n    initWiFi();\n  vTaskDelay(60);\n}\n\nvoid UpdateClients(void *pvParameters) { // handle websocket and oled displays\n  (void)pvParameters;\n  for (;;) {\n    if(!state.getOta()) {aws.notifyClients();} // send state to the client as a json string\n    vTaskDelay(10000);\n  }\n}\n\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() \u003e 3400 \u0026\u0026 state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}\n\n\n\n\nvoid initWiFi() {\n  Serial.println(\"connecting to wifi\");\n  // connect to wifi\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  if (WiFi.waitForConnectResult() != WL_CONNECTED) {\n  Serial.println(\"connecting to wifi failed\");\n  delay(500);\n  initWiFi();\n  }\n  Serial.println(\"wifi connected\");\n  wifiavail = true;\n}\n\nvoid initTime() {\n  // set the clock from ntp server\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n  printLocalTime();\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 290

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":64,"character":9},"end":{"line":64,"character":10}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 442

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":9},"end":{"line":64,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":10}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'awsw' in 'BcbAws'"}]}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 37

{"id":58,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 167

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"}},"id":59,"jsonrpc":"2.0"}Content-Length: 289

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":64,"character":8},"end":{"line":64,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":58},"jsonrpc":"2.0"}
<<<
Content-Length: 113

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":59,"jsonrpc":"2.0"}
>>>
Content-Length: 289

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":64,"character":7},"end":{"line":64,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 290

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":7}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 442

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":10}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'awsw' in 'BcbAws'"}]}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":60,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 290

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":64,"character":5},"end":{"line":64,"character":6}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":59},"jsonrpc":"2.0"}Content-Length: 268

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":5},"end":{"line":64,"character":5}},"context":{"diagnostics":[]}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":61,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":64,"character":5},"end":{"line":64,"character":5}},"text":"."}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":60},"jsonrpc":"2.0"}Content-Length: 251

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":64,"character":6},"context":{"triggerKind":2,"triggerCharacter":"."}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 3604

{"id":62,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"int","filterText":"BcbAwsInit","insertText":"BcbAwsInit","insertTextFormat":2,"kind":2,"label":" BcbAwsInit(State *istate)","score":14.520001411437988,"sortText":"3e97ae13BcbAwsInit","textEdit":{"newText":"BcbAwsInit","range":{"end":{"character":6,"line":64},"start":{"character":6,"line":64}}}},{"detail":"AsyncWebSocket","filterText":"ws","insertText":"ws","insertTextFormat":2,"kind":5,"label":" ws","score":13.202095985412598,"sortText":"3eacc437ws","textEdit":{"newText":"ws","range":{"end":{"character":6,"line":64},"start":{"character":6,"line":64}}}},{"detail":"void","filterText":"appendFile","insertText":"appendFile","insertTextFormat":2,"kind":2,"label":" appendFile(fs::FS &fs, const char *path, const char *message)","score":9.6800003051757812,"sortText":"3ee51eb8appendFile","textEdit":{"newText":"appendFile","range":{"end":{"character":6,"line":64},"start":{"character":6,"line":64}}}},{"detail":"void","filterText":"deleteFile","insertText":"deleteFile","insertTextFormat":2,"kind":2,"label":" deleteFile(fs::FS &fs, const char *path)","score":9.6800003051757812,"sortText":"3ee51eb8deleteFile","textEdit":{"newText":"deleteFile","range":{"end":{"character":6,"line":64},"start":{"character":6,"line":64}}}},{"detail":"void","filterText":"handleWebSocketMessage","insertText":"handleWebSocketMessage","insertTextFormat":2,"kind":2,"label":" handleWebSocketMessage(void *arg, uint8_t *data, size_t len)","score":9.6800003051757812,"sortText":"3ee51eb8handleWebSocketMessage","textEdit":{"newText":"handleWebSocketMessage","range":{"end":{"character":6,"line":64},"start":{"character":6,"line":64}}}},{"detail":"void","filterText":"notifyClients","insertText":"notifyClients","insertTextFormat":2,"kind":2,"label":" notifyClients()","score":9.6800003051757812,"sortText":"3ee51eb8notifyClients","textEdit":{"newText":"notifyClients","range":{"end":{"character":6,"line":64},"start":{"character":6,"line":64}}}},{"detail":"void","filterText":"parseCommand","insertText":"parseCommand","insertTextFormat":2,"kind":2,"label":" parseCommand(String command)","score":9.6800003051757812,"sortText":"3ee51eb8parseCommand","textEdit":{"newText":"parseCommand","range":{"end":{"character":6,"line":64},"start":{"character":6,"line":64}}}},{"detail":"String","filterText":"readFile","insertText":"readFile","insertTextFormat":2,"kind":2,"label":" readFile(fs::FS &fs, const char *path)","score":9.6800003051757812,"sortText":"3ee51eb8readFile","textEdit":{"newText":"readFile","range":{"end":{"character":6,"line":64},"start":{"character":6,"line":64}}}},{"detail":"void","filterText":"renameFile","insertText":"renameFile","insertTextFormat":2,"kind":2,"label":" renameFile(fs::FS &fs, const char *path1, const char *path2)","score":9.6800003051757812,"sortText":"3ee51eb8renameFile","textEdit":{"newText":"renameFile","range":{"end":{"character":6,"line":64},"start":{"character":6,"line":64}}}},{"detail":"AsyncWebServer","filterText":"server","insertText":"server","insertTextFormat":2,"kind":5,"label":" server","score":9.6800003051757812,"sortText":"3ee51eb8server","textEdit":{"newText":"server","range":{"end":{"character":6,"line":64},"start":{"character":6,"line":64}}}},{"detail":"void","filterText":"writeFile","insertText":"writeFile","insertTextFormat":2,"kind":2,"label":" writeFile(fs::FS &fs, const char *path, const char *message)","score":9.6800003051757812,"sortText":"3ee51eb8writeFile","textEdit":{"newText":"writeFile","range":{"end":{"character":6,"line":64},"start":{"character":6,"line":64}}}}]}}
>>>
Content-Length: 442

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":10}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'awsw' in 'BcbAws'"}]}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":63,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":62},"jsonrpc":"2.0"}Content-Length: 442

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":7},"end":{"line":64,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":10}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'awsw' in 'BcbAws'"}]}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":64,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":64,"character":7},"end":{"line":64,"character":7}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":63},"jsonrpc":"2.0"}Content-Length: 442

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":8},"end":{"line":64,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":10}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'awsw' in 'BcbAws'"}]}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":65,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 290

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":64,"character":7},"end":{"line":64,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":64},"jsonrpc":"2.0"}Content-Length: 442

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":7},"end":{"line":64,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":10}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'awsw' in 'BcbAws'"}]}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":66,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":64,"character":7},"end":{"line":64,"character":7}},"text":"w"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":65},"jsonrpc":"2.0"}Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":64,"character":8},"end":{"line":64,"character":8}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 442

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":9},"end":{"line":64,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":10}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'awsw' in 'BcbAws'"}]}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":67,"jsonrpc":"2.0","result":[]}Content-Length: 1209

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'aws' in 'BcbAws'","range":{"end":{"character":9,"line":64},"start":{"character":6,"line":64}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":7}}
>>>
Content-Length: 440

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":9},"end":{"line":64,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":9}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'aws' in 'BcbAws'"}]}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":68,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":21}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":69,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 300

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":9}},"rangeLength":3,"text":"BcbAwsInit"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":18}}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":16},"end":{"line":64,"character":16}},"context":{"diagnostics":[]}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":70,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":64,"character":25}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":71,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":25},"end":{"line":64,"character":25}},"context":{"diagnostics":[]}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":72,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 194

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":1,"character":9}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":73,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 707

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":74,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":5,"character":15}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":75,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 194

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":2,"character":8}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":76,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":53,"character":1}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":77,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":59,"character":25}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":78,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":59,"character":25}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":79,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":56,"character":11}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":80,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":56,"character":0},"end":{"line":56,"character":11}},"context":{"diagnostics":[]}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":81,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":56,"character":8}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 238

{"id":82,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `aws`  \n\n---\nType: `class BcbAws`  \n\n---\n```cpp\nBcbAws aws\n```"},"range":{"end":{"character":10,"line":56},"start":{"character":7,"line":56}}}}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":56,"character":7}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 238

{"id":83,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `aws`  \n\n---\nType: `class BcbAws`  \n\n---\n```cpp\nBcbAws aws\n```"},"range":{"end":{"character":10,"line":56},"start":{"character":7,"line":56}}}}
>>>
Content-Length: 391

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":56,"character":0},"end":{"line":56,"character":11}},"rangeLength":11,"text":""},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":0}},"text":"BcbAws aws;"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":20}}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":11}},"context":{"diagnostics":[]}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":84,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":14,"character":11},"end":{"line":14,"character":11}},"context":{"diagnostics":[]}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":85,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":10,"character":16}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":86,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":15,"character":3}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":87,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":12,"character":6}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":88,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 194

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":5,"character":9}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":89,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":7,"character":14}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":90,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":3,"character":10}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":91,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 194

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":2,"character":9}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":92,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 194

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":2,"character":9}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":93,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 195

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":1,"character":10}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":94,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 207

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":1,"character":10}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":95,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 708

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":96,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 194

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":1,"character":9}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":97,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 707

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":98,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 150

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbsdcard.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 160

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbsdcard.h"}}
>>>
Content-Length: 290

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":54,"character":0},"end":{"line":55,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":21}}
>>>
Content-Length: 290

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":54,"character":0},"end":{"line":55,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":22}}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":56,"character":13}},"id":99,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":99,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":56,"character":12}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":100,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":56,"character":0},"end":{"line":56,"character":12}},"context":{"diagnostics":[]}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":101,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":55,"character":0}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":102,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":54,"character":0}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":103,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":53,"character":1}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":104,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 208

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":53,"character":2}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":105,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":2}},"context":{"diagnostics":[]}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":106,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":54,"character":0}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":107,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":54,"character":0}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":108,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 285

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":54,"character":0},"end":{"line":54,"character":0}},"text":"oid setup()"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1478

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"unknown_typename_suggest","message":"Unknown type name 'oid'; did you mean 'void'? (fix available)","range":{"end":{"character":3,"line":54},"start":{"character":0,"line":54}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":56},"start":{"character":0,"line":56}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":23}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":54,"character":11},"end":{"line":54,"character":11}},"context":{"diagnostics":[]}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":109,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 208

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":54,"character":0}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":110,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 484

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":54,"character":0},"end":{"line":54,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":0},"end":{"line":54,"character":3}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'oid'; did you mean 'void'? (fix available)"}]}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 528

{"id":111,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'oid'; did you mean 'void'? (fix available)","range":{"end":{"character":3,"line":54},"start":{"character":0,"line":54}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp":[{"newText":"void","range":{"end":{"character":3,"line":54},"start":{"character":0,"line":54}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'oid' to 'void'"}]}
>>>
Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":54,"character":0},"end":{"line":54,"character":0}},"text":"v"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1262

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":56},"start":{"character":0,"line":56}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":24}}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":54,"character":1},"end":{"line":54,"character":1}},"context":{"diagnostics":[]}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":112,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":54,"character":12},"end":{"line":54,"character":12}},"context":{"diagnostics":[]}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":113,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":54,"character":12},"end":{"line":54,"character":12}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":25}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":54,"character":13},"end":{"line":54,"character":13}},"context":{"diagnostics":[]}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":114,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":54,"character":13},"end":{"line":54,"character":13}},"text":"\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":26}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":89,"character":18}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":115,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":81,"character":0},"end":{"line":89,"character":56}},"context":{"diagnostics":[]}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":116,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":80,"character":0},"end":{"line":89,"character":56}},"context":{"diagnostics":[]}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":117,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":80,"character":0},"end":{"line":89,"character":56}},"rangeLength":533,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":27}}
>>>
Content-Length: 290

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":80,"character":0},"end":{"line":81,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":28}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":79,"character":18}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":118,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":79,"character":18}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":119,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 198

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":102,"character":44}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"id":120,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `const String & s`\n\n---\n```cpp\n// In Print\npublic: size_t println(const String &s)\n```"},"range":{"end":{"character":45,"line":102},"start":{"character":44,"line":102}}}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":102,"character":45},"end":{"line":102,"character":45}},"context":{"diagnostics":[]}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":121,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 272

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":101,"character":4},"end":{"line":102,"character":45}},"context":{"diagnostics":[]}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":122,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 294

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":101,"character":4},"end":{"line":102,"character":45}},"rangeLength":46,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":29}}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":101,"character":2},"end":{"line":101,"character":4}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":30}}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":101,"character":0},"end":{"line":101,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":31}}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":100,"character":0},"end":{"line":101,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":32}}
>>>
Content-Length: 198

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":103,"character":28}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":123,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":103,"character":28},"end":{"line":103,"character":28}},"context":{"diagnostics":[]}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":124,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":102,"character":15},"end":{"line":103,"character":28}},"context":{"diagnostics":[]}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":125,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 295

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":102,"character":15},"end":{"line":103,"character":28}},"rangeLength":29,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":33}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":102,"character":15},"end":{"line":102,"character":15}},"context":{"diagnostics":[]}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":126,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":105,"character":66},"end":{"line":105,"character":66}},"context":{"diagnostics":[]}},"id":127,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":127,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":104,"character":61},"end":{"line":105,"character":66}},"context":{"diagnostics":[]}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":128,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 295

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":34},"contentChanges":[{"range":{"start":{"line":104,"character":61},"end":{"line":105,"character":66}},"rangeLength":67,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":34}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":104,"character":61},"end":{"line":104,"character":61}},"context":{"diagnostics":[]}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":129,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 198

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":110,"character":36}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"id":130,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `OTA_BEGIN_ERROR`  \n\n---\nType: `enum ota_error_t`  \nValue = `1`  \n\n---\n```cpp\nOTA_BEGIN_ERROR\n```"},"range":{"end":{"character":37,"line":110},"start":{"character":22,"line":110}}}}
>>>
Content-Length: 198

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":109,"character":36}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":131,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":109,"character":36},"end":{"line":109,"character":36}},"context":{"diagnostics":[]}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":132,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":108,"character":32},"end":{"line":109,"character":36}},"context":{"diagnostics":[]}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":133,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 295

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":108,"character":32},"end":{"line":109,"character":36}},"rangeLength":37,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1208

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":8,"line":109},"start":{"character":4,"line":109}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":35}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":108,"character":32},"end":{"line":108,"character":32}},"context":{"diagnostics":[]}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":134,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 198

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":107,"character":39}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 333

{"id":135,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `printf`  \n\n---\n→ `size_t`  \nParameters:  \n- `const char * format`\n\n---\n```cpp\n// In Print\npublic: size_t printf(const char *format, ...)\n```"},"range":{"end":{"character":40,"line":107},"start":{"character":39,"line":107}}}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":107,"character":40},"end":{"line":107,"character":40}},"context":{"diagnostics":[]}},"id":136,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":136,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":106,"character":34},"end":{"line":107,"character":40}},"context":{"diagnostics":[]}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":137,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 295

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":106,"character":34},"end":{"line":107,"character":40}},"rangeLength":41,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1208

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":8,"line":108},"start":{"character":4,"line":108}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":36}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":106,"character":34},"end":{"line":106,"character":34}},"context":{"diagnostics":[]}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":138,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 198

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":108,"character":34}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":139,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 198

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":108,"character":33}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":140,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 198

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":108,"character":33}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":141,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 198

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":108,"character":33}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":142,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 322

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":106,"character":34},"end":{"line":106,"character":34}},"text":"\n    Serial.printf(\"Error[%u]: \", error);"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1208

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":8,"line":109},"start":{"character":4,"line":109}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":37}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":106,"character":34},"end":{"line":107,"character":40}},"context":{"diagnostics":[]}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":143,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":107,"character":40},"end":{"line":107,"character":40}},"context":{"diagnostics":[]}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":144,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":108,"character":32},"end":{"line":108,"character":32}},"context":{"diagnostics":[]}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":145,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":108,"character":32},"end":{"line":108,"character":32}},"text":"\n      Serial.println(\"Auth Failed\");"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":38}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":108,"character":32},"end":{"line":109,"character":36}},"context":{"diagnostics":[]}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":146,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":109,"character":36},"end":{"line":109,"character":36}},"context":{"diagnostics":[]}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":147,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":118,"character":4}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 467

{"id":148,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `onError`  \n\n---\n→ `ArduinoOTAClass &`  \nParameters:  \n- `ArduinoOTAClass::THandlerFunction_Error fn`\n\nThis callback will be called when OTA encountered Error  \n\n---\n```cpp\n// In ArduinoOTAClass\npublic: ArduinoOTAClass &onError(ArduinoOTAClass::THandlerFunction_Error fn)\n```"},"range":{"end":{"character":5,"line":118},"start":{"character":4,"line":118}}}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":117,"character":35},"end":{"line":117,"character":35}},"context":{"diagnostics":[]}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":149,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 272

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":106,"character":0},"end":{"line":117,"character":35}},"context":{"diagnostics":[]}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":150,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":106,"character":33},"end":{"line":117,"character":35}},"context":{"diagnostics":[]}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":151,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":106,"character":34},"end":{"line":117,"character":35}},"context":{"diagnostics":[]}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":152,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 296

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":39},"contentChanges":[{"range":{"start":{"line":106,"character":34},"end":{"line":117,"character":35}},"rangeLength":423,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":39}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":106,"character":34},"end":{"line":106,"character":34}},"context":{"diagnostics":[]}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":153,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":106,"character":34},"end":{"line":107,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":40}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":106,"character":34},"end":{"line":106,"character":34}},"context":{"diagnostics":[]}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":154,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 294

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":106,"character":34},"end":{"line":106,"character":35}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":41}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":106,"character":34},"end":{"line":106,"character":34}},"context":{"diagnostics":[]}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":155,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 294

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":42},"contentChanges":[{"range":{"start":{"line":106,"character":34},"end":{"line":106,"character":35}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":42}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":106,"character":34},"end":{"line":106,"character":34}},"context":{"diagnostics":[]}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":156,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 198

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":106,"character":36}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 469

{"id":157,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `onError`  \n\n---\n→ `ArduinoOTAClass &`  \nParameters:  \n- `ArduinoOTAClass::THandlerFunction_Error fn`\n\nThis callback will be called when OTA encountered Error  \n\n---\n```cpp\n// In ArduinoOTAClass\npublic: ArduinoOTAClass &onError(ArduinoOTAClass::THandlerFunction_Error fn)\n```"},"range":{"end":{"character":37,"line":106},"start":{"character":36,"line":106}}}}
>>>
Content-Length: 273

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":106,"character":37},"end":{"line":106,"character":37}},"context":{"diagnostics":[]}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":158,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 272

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":105,"character":4},"end":{"line":106,"character":37}},"context":{"diagnostics":[]}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":159,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 294

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":105,"character":4},"end":{"line":106,"character":37}},"rangeLength":38,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1240

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":12,"line":106},"start":{"character":2,"line":106}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":43}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":105,"character":4},"end":{"line":105,"character":4}},"context":{"diagnostics":[]}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":160,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":105,"character":4},"end":{"line":105,"character":4}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":44}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":5}},"context":{"diagnostics":[]}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":161,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":103,"character":4},"end":{"line":103,"character":4}},"context":{"diagnostics":[]}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":162,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":101,"character":4},"end":{"line":103,"character":4}},"context":{"diagnostics":[]}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":163,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":101,"character":4},"end":{"line":103,"character":4}},"rangeLength":21,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":45}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":101,"character":4},"end":{"line":101,"character":4}},"context":{"diagnostics":[]}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":164,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 198

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":102,"character":26}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":165,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":102,"character":8}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 480

{"id":166,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `onProgress`  \n\n---\n→ `ArduinoOTAClass &`  \nParameters:  \n- `ArduinoOTAClass::THandlerFunction_Progress fn`\n\nThis callback will be called when OTA is receiving data  \n\n---\n```cpp\n// In ArduinoOTAClass\npublic: ArduinoOTAClass &onProgress(ArduinoOTAClass::THandlerFunction_Progress fn)\n```"},"range":{"end":{"character":13,"line":102},"start":{"character":3,"line":102}}}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":103,"character":5}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":167,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":103,"character":5},"end":{"line":103,"character":5}},"context":{"diagnostics":[]}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":168,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":101,"character":4},"end":{"line":103,"character":5}},"context":{"diagnostics":[]}},"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":169,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 294

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":101,"character":4},"end":{"line":103,"character":5}},"rangeLength":68,"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":46}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":101,"character":5},"end":{"line":101,"character":5}},"context":{"diagnostics":[]}},"id":170,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":170,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":79,"character":16}},"id":171,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":171,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":79,"character":16}},"id":172,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":172,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":78,"character":11}},"id":173,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":173,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":95,"character":35}},"id":174,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":174,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 147

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"}},"jsonrpc":"2.0"}Content-Length: 145

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.h"}},"jsonrpc":"2.0"}Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/WiFiCred.h"}},"jsonrpc":"2.0"}Content-Length: 149

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/WiFiCred1.h"}},"jsonrpc":"2.0"}Content-Length: 148

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"}},"jsonrpc":"2.0"}Content-Length: 146

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"}},"jsonrpc":"2.0"}Content-Length: 151

{"method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/defaulthtml.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 1031

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":17,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp","version":1}}
>>>
Content-Length: 682

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"}]}},"id":175,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":175,"jsonrpc":"2.0","result":[]}Content-Length: 1030

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h","version":6}}Content-Length: 1032

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":18,"line":0},"start":{"character":8,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp","version":6}}
>>>
Content-Length: 265

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"range":{"start":{"line":13,"character":30},"end":{"line":13,"character":30}},"context":{"diagnostics":[]}},"id":176,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":176,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 263

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.cpp"},"range":{"start":{"line":4,"character":5},"end":{"line":4,"character":5}},"context":{"diagnostics":[]}},"id":177,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":177,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"position":{"line":15,"character":31}},"id":178,"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"id":178,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `AsyncWebSocket`  \n\n---\nWebServer Handler implementation that plays the role of a socket server  \n\n---\n```cpp\nclass AsyncWebSocket : public AsyncWebHandler {}\n```"},"range":{"end":{"character":34,"line":15},"start":{"character":20,"line":15}}}}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/bcbaws.h"},"position":{"line":20,"character":30}},"id":179,"jsonrpc":"2.0"}
<<<
Content-Length: 270

{"id":179,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `path`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In BcbAws::deleteFile\nconst char *path\n```"},"range":{"end":{"character":33,"line":20},"start":{"character":28,"line":20}}}}
>>>
Content-Length: 203

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"},"position":{"line":0,"character":14}},"id":180,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":180,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 704

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"},"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]}},"id":181,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":181,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"},"position":{"line":4,"character":16}},"id":182,"jsonrpc":"2.0"}
<<<
Content-Length: 268

{"id":182,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `num`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In State::moisture\nint num = 0\n```"},"range":{"end":{"character":18,"line":4},"start":{"character":15,"line":4}}}}
>>>
Content-Length: 704

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"},"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here"}]}},"id":183,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":183,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"},"position":{"line":3,"character":17}},"id":184,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":184,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"},"position":{"line":2,"character":17}},"id":185,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"id":185,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `State::moisture`  \n\n---\n→ `int`  \n\n---\n```cpp\n// In State\npublic: int State::moisture()\n```"},"range":{"end":{"character":19,"line":2},"start":{"character":11,"line":2}}}}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"},"position":{"line":2,"character":16}},"id":186,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"id":186,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `State::moisture`  \n\n---\n→ `int`  \n\n---\n```cpp\n// In State\npublic: int State::moisture()\n```"},"range":{"end":{"character":19,"line":2},"start":{"character":11,"line":2}}}}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"},"position":{"line":5,"character":16}},"id":187,"jsonrpc":"2.0"}
<<<
Content-Length: 320

{"id":187,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `analogRead`  \n\n---\n→ `uint16_t`  \nParameters:  \n- `uint8_t pin`\n\nGet ADC value for pin  \n\n---\n```cpp\nuint16_t analogRead(uint8_t pin)\n```"},"range":{"end":{"character":25,"line":5},"start":{"character":15,"line":5}}}}
>>>
Content-Length: 191

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/State.cpp"},"position":{"line":4,"character":28}},"id":188,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":188,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":94,"character":38}},"id":189,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":189,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":188},"jsonrpc":"2.0"}Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":129,"character":3},"end":{"line":129,"character":3}},"context":{"diagnostics":[]}},"id":190,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":190,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":119,"character":0},"end":{"line":129,"character":3}},"context":{"diagnostics":[]}},"id":191,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":191,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 294

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":119,"character":0},"end":{"line":129,"character":3}},"rangeLength":286,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":47}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":132,"character":8}},"id":192,"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"id":192,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `initWiFi`  \n\n---\n→ `void`  \nvoid UpdateDatabase(void \\*pvParameters); // maintains the websocket display  \n\n---\n```cpp\nvoid initWiFi()\n```"},"range":{"end":{"character":10,"line":132},"start":{"character":2,"line":132}}}}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":119,"character":0},"end":{"line":120,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":48}}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":119,"character":0},"end":{"line":120,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":49}}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":50},"contentChanges":[{"range":{"start":{"line":119,"character":0},"end":{"line":120,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":50}}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":51},"contentChanges":[{"range":{"start":{"line":119,"character":0},"end":{"line":120,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":51}}
>>>
Content-Length: 198

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":125,"character":27}},"id":193,"jsonrpc":"2.0"}
<<<
Content-Length: 307

{"id":193,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `waitForConnectResult`  \n\n---\n→ `uint8_t`  \n\n---\n```cpp\n// In WiFiSTAClass\npublic: uint8_t waitForConnectResult()\n```"},"range":{"end":{"character":31,"line":125},"start":{"character":11,"line":125}}}}
>>>
Content-Length: 290

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":52},"contentChanges":[{"range":{"start":{"line":55,"character":0},"end":{"line":56,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":52}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":54,"character":13},"end":{"line":54,"character":13}},"context":{"diagnostics":[]}},"id":194,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":194,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":53,"character":16},"end":{"line":54,"character":13}},"context":{"diagnostics":[]}},"id":195,"jsonrpc":"2.0"}
<<<
Content-Length: 386

{"id":195,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","selection":{"end":{"character":13,"line":54},"start":{"character":16,"line":53}},"tweakID":"DefineInline"}],"command":"clangd.applyTweak","title":"Move function body to declaration"},"kind":"refactor","title":"Move function body to declaration"}]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":54,"character":13},"end":{"line":54,"character":13}},"context":{"diagnostics":[]}},"id":196,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":196,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 587

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":53},"contentChanges":[{"range":{"start":{"line":54,"character":13},"end":{"line":54,"character":13}},"text":"\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() \u003e 3400 \u0026\u0026 state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":53}}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":3},"end":{"line":64,"character":3}},"context":{"diagnostics":[]}},"id":197,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":197,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":56,"character":14}},"id":198,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":198,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":56,"character":14}},"id":199,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":199,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":56,"character":14}},"id":200,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":200,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":54},"contentChanges":[{"range":{"start":{"line":54,"character":13},"end":{"line":64,"character":3}},"rangeLength":286,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":54}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":54,"character":13},"end":{"line":54,"character":13}},"context":{"diagnostics":[]}},"id":201,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":201,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":53,"character":16},"end":{"line":54,"character":13}},"context":{"diagnostics":[]}},"id":202,"jsonrpc":"2.0"}
<<<
Content-Length: 386

{"id":202,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","selection":{"end":{"character":13,"line":54},"start":{"character":16,"line":53}},"tweakID":"DefineInline"}],"command":"clangd.applyTweak","title":"Move function body to declaration"},"kind":"refactor","title":"Move function body to declaration"}]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":54,"character":13},"end":{"line":54,"character":13}},"context":{"diagnostics":[]}},"id":203,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":203,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 587

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":55},"contentChanges":[{"range":{"start":{"line":54,"character":13},"end":{"line":54,"character":13}},"text":"\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() \u003e 3400 \u0026\u0026 state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":55}}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":3},"end":{"line":64,"character":3}},"context":{"diagnostics":[]}},"id":204,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":204,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 4481

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":56},"contentChanges":[{"text":"#line 1 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\n#include \u003cArduino.h\u003e\n#include \"State.h\"\n#include \"time.h\"\n#include \"WiFiCred1.h\"\n#include \u003cArduinoJson.h\u003e\n#include \u003cArduinoOTA.h\u003e\n#include \u003cESPmDNS.h\u003e\n#include \u003cWiFi.h\u003e\n#include \u003cWiFiUdp.h\u003e\n#include \"bcbaws.h\"\n\n#define ARDUINO_RUNNING_CORE 1\nState state;\nBcbAws aws;\n// internal rtc variables\nconst char *ntpServer = \"pool.ntp.org\";\nconst long gmtOffset_sec = -18000;\nconst int daylightOffset_sec = 3600;\n\n\nbool wifiavail = false;\n\n// localtime from internal rtc\n#line 24 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalTime();\n#line 32 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalHour();\n#line 105 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nvoid loop();\n#line 24 \"/home/brian/Arduino/projects/garden/esp32/garden/garden/garden.ino\"\nString printLocalTime() {\n  struct tm timeinfo;\n  if (!getLocalTime(\u0026timeinfo)) {\n    return (\"\");\n  }\n  return (asctime(\u0026timeinfo));\n}\n\nString printLocalHour() {\n  struct tm timeinfo;\n  if (!getLocalTime(\u0026timeinfo)) {\n    return (\"\");\n  }\n  return (String(asctime(\u0026timeinfo)).substring(11, 16) + \" \");\n}\n\n// define functions\nvoid UpdateClients(void *pvParameters); // maintains the websocket display\n//void UpdateDatabase(void *pvParameters); // maintains the websocket display\nvoid initWiFi();\nvoid initTime();\nvoid setup();\n//void UpdateDatabase(void *pvParameters) { // handle websocket and oled displays\n//  (void)pvParameters;\n//  for (;;) {\n//    if(state.moisture() \u003e 3400 \u0026\u0026 state.relay()) {\n//      digitalWrite(2, HIGH);}else{\n//      digitalWrite(2, LOW);\n//      }\n//    vTaskDelay(60000);\n//  }\n//}\n\nvoid setup() {\n  // start the serial interface\n  Serial.begin(115200);\n  delay(500);\n  initWiFi();\n  initTime();\n  aws.BcbAwsInit(\u0026state);\n  digitalWrite(2, LOW);\n  pinMode(2, OUTPUT);\n  state.relay(false);\n  \n  xTaskCreatePinnedToCore(UpdateClients, // function name \n                          \"updateClients\" // A name just for humans\n                          ,\n                          4096 // This stack size can be checked \u0026 adjusted by\n                          // reading the Stack Highwater\n                          ,\n                          NULL,// task input parameter\n                          2 // Priority, with 3 (configMAX_PRIORITIES - 1)\n                          // being the highest, and 0 being the lowest.\n                          ,\n                          NULL, // task handle\n                          ARDUINO_RUNNING_CORE);\n\n  ArduinoOTA\n  .onStart([]() {\n    String type;\n    if (ArduinoOTA.getCommand() == U_FLASH)\n      type = \"sketch\";\n    else // U_SPIFFS\n      type = \"filesystem\";\n\n    // NOTE: if updating SPIFFS this would be the place to unmount SPIFFS\n    SPIFFS.end();\n // Disable client connections    \n    aws.ws.enable(false);\n\n    // Advertise connected clients what's going on\n    aws.ws.textAll(\"OTA Update Started\");\n\n    // Close them\n    aws.ws.closeAll();\n    state.setOta(true);\n\n  });\n  ArduinoOTA.begin();\n}\n\nvoid loop() {\n  ArduinoOTA.handle(); // check if an update is available\n  if (WiFi.status() != WL_CONNECTED) // check if wifi is still connected, if not, reconnect\n    initWiFi();\n  vTaskDelay(60);\n}\n\nvoid UpdateClients(void *pvParameters) { // handle websocket and oled displays\n  (void)pvParameters;\n  for (;;) {\n    if(!state.getOta()) {aws.notifyClients();} // send state to the client as a json string\n    vTaskDelay(10000);\n  }\n}\n\nvoid initWiFi() {\n  Serial.println(\"connecting to wifi\");\n  // connect to wifi\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  if (WiFi.waitForConnectResult() != WL_CONNECTED) {\n  Serial.println(\"connecting to wifi failed\");\n  delay(500);\n  initWiFi();\n  }\n  Serial.println(\"wifi connected\");\n  wifiavail = true;\n}\n\nvoid initTime() {\n  // set the clock from ntp server\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n  printLocalTime();\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":57},"contentChanges":[{"range":{"start":{"line":52,"character":13},"end":{"line":62,"character":3}},"rangeLength":286,"text":""}]},"jsonrpc":"2.0"}Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":52,"character":13},"end":{"line":52,"character":13}},"context":{"diagnostics":[]}},"id":205,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 38

{"id":205,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":58},"contentChanges":[{"range":{"start":{"line":52,"character":13},"end":{"line":52,"character":13}},"text":"\n"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":204},"jsonrpc":"2.0"}Content-Length: 168

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"}},"id":206,"jsonrpc":"2.0"}Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":59},"contentChanges":[{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":0}},"text":"v"}]},"jsonrpc":"2.0"}Content-Length: 229

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":53,"character":1},"context":{"triggerKind":1}},"id":207,"jsonrpc":"2.0"}
<<<
Content-Length: 114

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":206,"jsonrpc":"2.0"}Content-Length: 88708

{"id":207,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"filterText":"void","insertText":"void","insertTextFormat":2,"kind":14,"label":" void","score":12,"sortText":"3ec00000void","textEdit":{"newText":"void","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"filterText":"volatile","insertText":"volatile","insertTextFormat":2,"kind":14,"label":" volatile","score":8,"sortText":"3f000000volatile","textEdit":{"newText":"volatile","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Get the state of running tasks as a string  \nconfigGENERATE_RUN_TIME_STATS and configUSE_STATS_FORMATTING_FUNCTIONS must both be defined as 1 for this function to be available. The application must also then provide definitions for portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() and portGET_RUN_TIME_COUNTER_VALUE() to configure a peripheral timer/counter and return the timers current count value respectively. The counter should be at least 10 times the frequency of the tick count.  \n@note This function will disable interrupts for its duration. It is not intended for normal application runtime use but as a debug aid.  \nSetting configGENERATE_RUN_TIME_STATS to 1 will result in a total accumulated execution time being stored for each task. The resolution of the accumulated time value depends on the frequency of the timer configured by the portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() macro.  \nCalling vTaskGetRunTimeStats() writes the total execution time of each task into a buffer, both as an absolute count value and as a percentage of the total system execution time.  \n@note This function is provided for convenience only, and is used by many of the demo applications. Do not consider it to be part of the scheduler.  \nvTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part of the uxTaskGetSystemState() output into a human readable table that displays the amount of time each task has spent in the Running state in both absolute and percentage terms.  \nvTaskGetRunTimeStats() has a dependency on the sprintf() C library function that might bloat the code size, use a lot of stack, and provide different results on different platforms. An alternative, tiny, third party, and limited functionality implementation of sprintf() is provided in many of the FreeRTOS/Demo sub-directories in a file called printf-stdarg.c (note printf-stdarg.c does not provide a full snprintf() implementation!).  \nIt is recommended that production systems call uxTaskGetSystemState() directly to get access to raw stats data, rather than indirectly through a call to vTaskGetRunTimeStats().  \n@param pcWriteBuffer A buffer into which the execution times will be written, in ASCII form. This buffer is assumed to be large enough to contain the generated report. Approximately 40 bytes per task should be sufficient.  \n\\\\ingroup TaskUtils"},"filterText":"vTaskGetRunTimeStats","insertText":"vTaskGetRunTimeStats(${1:char *pcWriteBuffer})","insertTextFormat":2,"kind":3,"label":" vTaskGetRunTimeStats(char *pcWriteBuffer)","score":2.2556054592132568,"sortText":"3fefa429vTaskGetRunTimeStats","textEdit":{"newText":"vTaskGetRunTimeStats(${1:char *pcWriteBuffer})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Capture the current time status for future reference."},"filterText":"vTaskSetTimeOutState","insertText":"vTaskSetTimeOutState(${1:TimeOut_t *const pxTimeOut})","insertTextFormat":2,"kind":3,"label":" vTaskSetTimeOutState(TimeOut_t *const pxTimeOut)","score":2.2556054592132568,"sortText":"3fefa429vTaskSetTimeOutState","textEdit":{"newText":"vTaskSetTimeOutState(${1:TimeOut_t *const pxTimeOut})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"wiring_private.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"filterText":"voidFuncPtr","insertText":"voidFuncPtr","insertTextFormat":2,"kind":8,"label":"•voidFuncPtr","score":2.0620818138122559,"sortText":"3ffc06davoidFuncPtr","textEdit":{"newText":"voidFuncPtr","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Must be called before a list is used! This initialises all the members of the list structure and inserts the xListEnd item into the list as a marker to the back of the list.  \n@param pxList Pointer to the list being initialised.  \n\\\\page vListInitialise vListInitialise  \n\\\\ingroup LinkedList"},"filterText":"vListInitialise","insertText":"vListInitialise(${1:List_t *const pxList})","insertTextFormat":2,"kind":3,"label":" vListInitialise(List_t *const pxList)","score":1.9036375284194946,"sortText":"400c559bvListInitialise","textEdit":{"newText":"vListInitialise(${1:List_t *const pxList})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Must be called before a list item is used. This sets the list container to null so the item does not think that it is already contained in a list.  \n@param pxItem Pointer to the list item being initialised.  \n\\\\page vListInitialiseItem vListInitialiseItem  \n\\\\ingroup LinkedList"},"filterText":"vListInitialiseItem","insertText":"vListInitialiseItem(${1:ListItem_t *const pxItem})","insertTextFormat":2,"kind":3,"label":" vListInitialiseItem(ListItem_t *const pxItem)","score":1.9036375284194946,"sortText":"400c559bvListInitialiseItem","textEdit":{"newText":"vListInitialiseItem(${1:ListItem_t *const pxItem})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"freertos/portmacro.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"bool","documentation":{"kind":"markdown","value":"From `\"freertos/portmacro.h\"`  \n@brief Acquire a portmux spinlock with a timeout  \n@param mux Pointer to portmux to acquire.  \n@param timeout_cycles Timeout to spin, in CPU cycles. Pass portMUX_NO_TIMEOUT to wait forever,  \nportMUX_TRY_LOCK to try a single time to acquire the lock.  \n@return true if mutex is successfully acquired, false on timeout."},"filterText":"vPortCPUAcquireMutexTimeout","insertText":"vPortCPUAcquireMutexTimeout(${1:portMUX_TYPE *mux}, ${2:int timeout_cycles})","insertTextFormat":2,"kind":3,"label":"•vPortCPUAcquireMutexTimeout(portMUX_TYPE *mux, int timeout_cycles)","score":1.9036375284194946,"sortText":"400c559bvPortCPUAcquireMutexTimeout","textEdit":{"newText":"vPortCPUAcquireMutexTimeout(${1:portMUX_TYPE *mux}, ${2:int timeout_cycles})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"freertos/portmacro.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portmacro.h\"`  \nModifications to portENTER_CRITICAL.  \nFor an introduction, see \"Critical Sections & Disabling Interrupts\" in docs/api-guides/freertos-smp.rst  \nThe original portENTER_CRITICAL only disabled the ISRs. This is enough for single-CPU operation: by disabling the interrupts, there is no task switch so no other tasks can meddle in the data, and because interrupts are disabled, ISRs can't corrupt data structures either.  \nFor multiprocessing, things get a bit more hairy. First of all, disabling the interrupts doesn't stop the tasks or ISRs on the other processors meddling with our CPU. For tasks, this is solved by adding a spinlock to the portENTER_CRITICAL macro. A task running on the other CPU accessing the same data will spinlock in the portENTER_CRITICAL code until the first CPU is done.  \nFor ISRs, we now also need muxes: while portENTER_CRITICAL disabling interrupts will stop ISRs on the same CPU from meddling with the data, it does not stop interrupts on the other cores from interfering with the data. For this, we also use a spinlock in the routines called by the ISR, but these spinlocks do not disable the interrupts (because they already are).  \nThis all assumes that interrupts are either entirely disabled or enabled. Interrupt priority levels will break this scheme.  \nRemark: For the ESP32, portENTER_CRITICAL and portENTER_CRITICAL_ISR both alias vTaskEnterCritical, meaning that either function can be called both from ISR as well as task context. This is not standard FreeRTOS behaviour; please keep this in mind if you need any compatibility with other FreeRTOS implementations."},"filterText":"vPortCPUInitializeMutex","insertText":"vPortCPUInitializeMutex(${1:portMUX_TYPE *mux})","insertTextFormat":2,"kind":3,"label":"•vPortCPUInitializeMutex(portMUX_TYPE *mux)","score":1.9036375284194946,"sortText":"400c559bvPortCPUInitializeMutex","textEdit":{"newText":"vPortCPUInitializeMutex(${1:portMUX_TYPE *mux})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Sets the ID assigned to the timer.  \nIDs are assigned to timers using the pvTimerID parameter of the call to xTimerCreated() that was used to create the timer.  \nIf the same callback function is assigned to multiple timers then the timer ID can be used as time specific (timer local) storage.  \n@param xTimer The timer being updated.  \n@param pvNewID The ID to assign to the timer.  \nExample usage:  \nSee the xTimerCreate() API function example usage scenario."},"filterText":"vTimerSetTimerID","insertText":"vTimerSetTimerID(${1:TimerHandle_t xTimer}, ${2:void *pvNewID})","insertTextFormat":2,"kind":3,"label":" vTimerSetTimerID(TimerHandle_t xTimer, void *pvNewID)","score":1.7739145755767822,"sortText":"401cf05evTimerSetTimerID","textEdit":{"newText":"vTimerSetTimerID(${1:TimerHandle_t xTimer}, ${2:void *pvNewID})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Delay a task for a given number of ticks.  \nThe actual time that the task remains blocked depends on the tick rate.  \nThe constant portTICK_PERIOD_MS can be used to calculate real time from the tick rate - with the resolution of one tick period.  \nINCLUDE_vTaskDelay must be defined as 1 for this function to be available.  \nSee the configuration section for more information.  \nvTaskDelay() specifies a time at which the task wishes to unblock relative to the time at which vTaskDelay() is called. For example, specifying a block period of 100 ticks will cause the task to unblock 100 ticks after vTaskDelay() is called. vTaskDelay() does not therefore provide a good method of controlling the frequency of a periodic task as the path taken through the code, as well as other task and interrupt activity, will effect the frequency at which vTaskDelay() gets called and therefore the time at which the task next executes. See vTaskDelayUntil() for an alternative API function designed to facilitate fixed frequency execution. It does this by specifying an absolute time (rather than a relative time) at which the calling task should unblock.  \n@param xTicksToDelay The amount of time, in tick periods, that the calling task should block.  \nExample usage:  \n@code{c} void vTaskFunction( void * pvParameters ) { // Block for 500ms.  \nconst TickType_t xDelay = 500 / portTICK_PERIOD_MS;  \nfor( ;; ) { // Simply toggle the LED every 500ms, blocking between each toggle.  \nvToggleLED();  \nvTaskDelay( xDelay );  \n} }  \n@endcode  \n\\\\ingroup TaskCtrl"},"filterText":"vTaskDelay","insertText":"vTaskDelay(${1:const TickType_t xTicksToDelay})","insertTextFormat":2,"kind":3,"label":" vTaskDelay(const TickType_t xTicksToDelay)","score":1.6829090118408203,"sortText":"40289670vTaskDelay","textEdit":{"newText":"vTaskDelay(${1:const TickType_t xTicksToDelay})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"vsnprintf","insertText":"vsnprintf(${1:char *}, ${2:size_t}, ${3:const char *}, ${4:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•vsnprintf(char *, size_t, const char *, __va_list_tag *)","score":1.5351324081420898,"sortText":"403b80c8vsnprintf","textEdit":{"newText":"vsnprintf(${1:char *}, ${2:size_t}, ${3:const char *}, ${4:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Memory regions are assigned to a restricted task when the task is created by a call to xTaskCreateRestricted(). These regions can be redefined using vTaskAllocateMPURegions().  \n@param xTask The handle of the task being updated.  \n@param xRegions A pointer to an MemoryRegion_t structure that contains the new memory region definitions.  \nExample usage:  \n@code{c} // Define an array of MemoryRegion_t structures that configures an MPU region // allowing read/write access for 1024 bytes starting at the beginning of the // ucOneKByte array. The other two of the maximum 3 definable regions are // unused so set to zero.  \nstatic const MemoryRegion_t xAltRegions[ portNUM_CONFIGURABLE_REGIONS ] = { // Base address Length Parameters { ucOneKByte, 1024, portMPU_REGION_READ_WRITE },  \n{ 0, 0, 0 },  \n{ 0, 0, 0 } };  \nvoid vATask( void \\*pvParameters ) { // This task was created such that it has access to certain regions of // memory as defined by the MPU configuration. At some point it is // desired that these MPU regions are replaced with that defined in the // xAltRegions const struct above. Use a call to vTaskAllocateMPURegions() // for this purpose. NULL is used as the task handle to indicate that this // function should modify the MPU regions of the calling task.  \nvTaskAllocateMPURegions( NULL, xAltRegions );  \n// Now the task can continue its function, but from this point on can only // access its stack and the ucOneKByte array (unless any other statically // defined or shared regions have been declared elsewhere).  \n}  \n@endcode  \n\\\\ingroup Tasks"},"filterText":"vTaskAllocateMPURegions","insertText":"vTaskAllocateMPURegions(${1:TaskHandle_t xTask}, ${2:const MemoryRegion_t *const pxRegions})","insertTextFormat":2,"kind":3,"label":" vTaskAllocateMPURegions(TaskHandle_t xTask, const MemoryRegion_t *const pxRegions)","score":1.5037370920181274,"sortText":"403f858bvTaskAllocateMPURegions","textEdit":{"newText":"vTaskAllocateMPURegions(${1:TaskHandle_t xTask}, ${2:const MemoryRegion_t *const pxRegions})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Delay a task until a specified time.  \nINCLUDE_vTaskDelayUntil must be defined as 1 for this function to be available.  \nSee the configuration section for more information.  \nThis function can be used by periodic tasks to ensure a constant execution frequency.  \nThis function differs from vTaskDelay () in one important aspect: vTaskDelay () will cause a task to block for the specified number of ticks from the time vTaskDelay () is called. It is therefore difficult to use vTaskDelay () by itself to generate a fixed execution frequency as the time between a task starting to execute and that task calling vTaskDelay () may not be fixed [the task may take a different path though the code between calls, or may get interrupted or preempted a different number of times each time it executes].  \nWhereas vTaskDelay () specifies a wake time relative to the time at which the function is called, vTaskDelayUntil () specifies the absolute (exact) time at which it wishes to unblock.  \nThe constant portTICK_PERIOD_MS can be used to calculate real time from the tick rate - with the resolution of one tick period.  \n@param pxPreviousWakeTime Pointer to a variable that holds the time at which the task was last unblocked. The variable must be initialised with the current time prior to its first use (see the example below). Following this the variable is automatically updated within vTaskDelayUntil ().  \n@param xTimeIncrement The cycle time period. The task will be unblocked at time \\*pxPreviousWakeTime + xTimeIncrement. Calling vTaskDelayUntil with the same xTimeIncrement parameter value will cause the task to execute with a fixed interface period.  \nExample usage:  \n@code{c} // Perform an action every 10 ticks.  \nvoid vTaskFunction( void * pvParameters ) { TickType_t xLastWakeTime;  \nconst TickType_t xFrequency = 10;  \n// Initialise the xLastWakeTime variable with the current time.  \nxLastWakeTime = xTaskGetTickCount ();  \nfor( ;; ) { // Wait for the next cycle.  \nvTaskDelayUntil( &xLastWakeTime, xFrequency );  \n// Perform action here.  \n} }  \n@endcode  \n\\\\ingroup TaskCtrl"},"filterText":"vTaskDelayUntil","insertText":"vTaskDelayUntil(${1:TickType_t *const pxPreviousWakeTime}, ${2:const TickType_t xTimeIncrement})","insertTextFormat":2,"kind":3,"label":" vTaskDelayUntil(TickType_t *const pxPreviousWakeTime, const TickType_t xTimeIncrement)","score":1.5037370920181274,"sortText":"403f858bvTaskDelayUntil","textEdit":{"newText":"vTaskDelayUntil(${1:TickType_t *const pxPreviousWakeTime}, ${2:const TickType_t xTimeIncrement})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Remove a task from the RTOS real time kernel's management.  \nThe task being deleted will be removed from all ready, blocked, suspended and event lists.  \nINCLUDE_vTaskDelete must be defined as 1 for this function to be available.  \nSee the configuration section for more information.  \n@note The idle task is responsible for freeing the kernel allocated memory from tasks that have been deleted. It is therefore important that the idle task is not starved of microcontroller processing time if your application makes any calls to vTaskDelete (). Memory allocated by the task code is not automatically freed, and should be freed before the task is deleted.  \nSee the demo application file death.c for sample code that utilises vTaskDelete ().  \n@param xTaskToDelete The handle of the task to be deleted. Passing NULL will cause the calling task to be deleted.  \nExample usage:  \n@code{c} void vOtherFunction( void ) { TaskHandle_t xHandle;  \n// Create the task, storing the handle.  \nxTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, &xHandle );  \n// Use the handle to delete the task.  \nvTaskDelete( xHandle );  \n}  \n@endcode  \n\\\\ingroup Tasks"},"filterText":"vTaskDelete","insertText":"vTaskDelete(${1:TaskHandle_t xTaskToDelete})","insertTextFormat":2,"kind":3,"label":" vTaskDelete(TaskHandle_t xTaskToDelete)","score":1.5037370920181274,"sortText":"403f858bvTaskDelete","textEdit":{"newText":"vTaskDelete(${1:TaskHandle_t xTaskToDelete})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Stops the real time kernel tick.  \n@note At the time of writing only the x86 real mode port, which runs on a PC in place of DOS, implements this function.  \nAll created tasks will be automatically deleted and multitasking (either preemptive or cooperative) will stop.  \nExecution then resumes from the point where vTaskStartScheduler () was called, as if vTaskStartScheduler () had just returned.  \nSee the demo application file main. c in the demo/PC directory for an example that uses vTaskEndScheduler ().  \nvTaskEndScheduler () requires an exit function to be defined within the portable layer (see vPortEndScheduler () in port. c for the PC port). This performs hardware specific operations such as stopping the kernel tick.  \nvTaskEndScheduler () will cause all of the resources allocated by the kernel to be freed - but will not free resources allocated by application tasks.  \nExample usage:  \n@code{c} void vTaskCode( void * pvParameters ) { for( ;; ) { // Task code goes here.  \n// At some point we want to end the real time kernel processing // so call ...  \nvTaskEndScheduler ();  \n} }  \nvoid vAFunction( void ) { // Create at least one task before starting the kernel.  \nxTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, NULL );  \n// Start the real time kernel with preemption.  \nvTaskStartScheduler ();  \n// Will only get here when the vTaskCode () task has called // vTaskEndScheduler (). When we get here we are back to single task // execution.  \n}  \n@endcode  \n\\\\ingroup SchedulerControl"},"filterText":"vTaskEndScheduler","insertText":"vTaskEndScheduler()","insertTextFormat":2,"kind":3,"label":" vTaskEndScheduler()","score":1.5037370920181274,"sortText":"403f858bvTaskEndScheduler","textEdit":{"newText":"vTaskEndScheduler()","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"List all the current tasks.  \nconfigUSE_TRACE_FACILITY and configUSE_STATS_FORMATTING_FUNCTIONS must both be defined as 1 for this function to be available. See the configuration section of the FreeRTOS.org website for more information.  \n@note This function will disable interrupts for its duration. It is not intended for normal application runtime use but as a debug aid.  \nLists all the current tasks, along with their current state and stack usage high water mark.  \nTasks are reported as blocked ('B'), ready ('R'), deleted ('D') or suspended ('S').  \n@note This function is provided for convenience only, and is used by many of the demo applications. Do not consider it to be part of the scheduler.  \nvTaskList() calls uxTaskGetSystemState(), then formats part of the uxTaskGetSystemState() output into a human readable table that displays task names, states and stack usage.  \nvTaskList() has a dependency on the sprintf() C library function that might bloat the code size, use a lot of stack, and provide different results on different platforms. An alternative, tiny, third party, and limited functionality implementation of sprintf() is provided in many of the FreeRTOS/Demo sub-directories in a file called printf-stdarg.c (note printf-stdarg.c does not provide a full snprintf() implementation!).  \nIt is recommended that production systems call uxTaskGetSystemState() directly to get access to raw stats data, rather than indirectly through a call to vTaskList().  \n@param pcWriteBuffer A buffer into which the above mentioned details will be written, in ASCII form. This buffer is assumed to be large enough to contain the generated report. Approximately 40 bytes per task should be sufficient.  \n\\\\ingroup TaskUtils"},"filterText":"vTaskList","insertText":"vTaskList(${1:char *pcWriteBuffer})","insertTextFormat":2,"kind":3,"label":" vTaskList(char *pcWriteBuffer)","score":1.5037370920181274,"sortText":"403f858bvTaskList","textEdit":{"newText":"vTaskList(${1:char *pcWriteBuffer})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Shortcut used by the queue implementation to prevent unnecessary call to taskYIELD();"},"filterText":"vTaskMissedYield","insertText":"vTaskMissedYield()","insertTextFormat":2,"kind":3,"label":" vTaskMissedYield()","score":1.5037370920181274,"sortText":"403f858bvTaskMissedYield","textEdit":{"newText":"vTaskMissedYield()","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Simplified macro for sending task notification from ISR.  \nconfigUSE_TASK_NOTIFICATIONS must be undefined or defined as 1 for this macro to be available.  \nWhen configUSE_TASK_NOTIFICATIONS is set to one each task has its own private \"notification value\", which is a 32-bit unsigned integer (uint32_t).  \nA version of xTaskNotifyGive() that can be called from an interrupt service routine (ISR).  \nEvents can be sent to a task using an intermediary object. Examples of such objects are queues, semaphores, mutexes and event groups. Task notifications are a method of sending an event directly to a task without the need for such an intermediary object.  \nA notification sent to a task can optionally perform an action, such as update, overwrite or increment the task's notification value. In that way task notifications can be used to send data to a task, or be used as light weight and fast binary or counting semaphores.  \nvTaskNotifyGiveFromISR() is intended for use when task notifications are used as light weight and faster binary or counting semaphore equivalents.  \nActual FreeRTOS semaphores are given from an ISR using the xSemaphoreGiveFromISR() API function, the equivalent action that instead uses a task notification is vTaskNotifyGiveFromISR().  \nWhen task notifications are being used as a binary or counting semaphore equivalent then the task being notified should wait for the notification using the ulTaskNotificationTake() API function rather than the xTaskNotifyWait() API function.  \nSee http://www.FreeRTOS.org/RTOS-task-notifications.html for more details.  \n@param xTaskToNotify The handle of the task being notified. The handle to a task can be returned from the xTaskCreate() API function used to create the task, and the handle of the currently running task can be obtained by calling xTaskGetCurrentTaskHandle().  \n@param pxHigherPriorityTaskWoken vTaskNotifyGiveFromISR() will set  \n\\*pxHigherPriorityTaskWoken to pdTRUE if sending the notification caused the task to which the notification was sent to leave the Blocked state, and the unblocked task has a priority higher than the currently running task. If vTaskNotifyGiveFromISR() sets this value to pdTRUE then a context switch should be requested before the interrupt is exited. How a context switch is requested from an ISR is dependent on the port - see the documentation page for the port in use.  \n\\\\ingroup TaskNotifications"},"filterText":"vTaskNotifyGiveFromISR","insertText":"vTaskNotifyGiveFromISR(${1:TaskHandle_t xTaskToNotify}, ${2:BaseType_t *pxHigherPriorityTaskWoken})","insertTextFormat":2,"kind":3,"label":" vTaskNotifyGiveFromISR(TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken)","score":1.5037370920181274,"sortText":"403f858bvTaskNotifyGiveFromISR","textEdit":{"newText":"vTaskNotifyGiveFromISR(${1:TaskHandle_t xTaskToNotify}, ${2:BaseType_t *pxHigherPriorityTaskWoken})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"THIS FUNCTION MUST NOT BE USED FROM APPLICATION CODE. IT IS AN INTERFACE WHICH IS FOR THE EXCLUSIVE USE OF THE SCHEDULER.  \nTHIS FUNCTION MUST BE CALLED WITH INTERRUPTS DISABLED.  \nRemoves the calling task from the ready list and places it both on the list of tasks waiting for a particular event, and the list of delayed tasks. The task will be removed from both lists and replaced on the ready list should either the event occur (and there be no higher priority tasks waiting on the same event) or the delay period expires.  \nThe 'unordered' version replaces the event list item value with the xItemValue value, and inserts the list item at the end of the list.  \nThe 'ordered' version uses the existing event list item value (which is the owning tasks priority) to insert the list item into the event list is task priority order.  \n@param pxEventList The list containing tasks that are blocked waiting for the event to occur.  \n@param xItemValue The item value to use for the event list item when the event list is not ordered by task priority.  \n@param xTicksToWait The maximum amount of time that the task should wait for the event to occur. This is specified in kernel ticks,the constant portTICK_PERIOD_MS can be used to convert kernel ticks into a real time period."},"filterText":"vTaskPlaceOnEventList","insertText":"vTaskPlaceOnEventList(${1:List_t *const pxEventList}, ${2:const TickType_t xTicksToWait})","insertTextFormat":2,"kind":3,"label":" vTaskPlaceOnEventList(List_t *const pxEventList, const TickType_t xTicksToWait)","score":1.5037370920181274,"sortText":"403f858bvTaskPlaceOnEventList","textEdit":{"newText":"vTaskPlaceOnEventList(${1:List_t *const pxEventList}, ${2:const TickType_t xTicksToWait})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"THIS FUNCTION MUST NOT BE USED FROM APPLICATION CODE. IT IS AN INTERFACE WHICH IS FOR THE EXCLUSIVE USE OF THE SCHEDULER.  \nTHIS FUNCTION MUST BE CALLED WITH INTERRUPTS DISABLED.  \nThis function performs nearly the same function as vTaskPlaceOnEventList().  \nThe difference being that this function does not permit tasks to block indefinitely, whereas vTaskPlaceOnEventList() does."},"filterText":"vTaskPlaceOnEventListRestricted","insertText":"vTaskPlaceOnEventListRestricted(${1:List_t *const pxEventList}, ${2:const TickType_t xTicksToWait})","insertTextFormat":2,"kind":3,"label":" vTaskPlaceOnEventListRestricted(List_t *const pxEventList, const TickType_t xTicksToWait)","score":1.5037370920181274,"sortText":"403f858bvTaskPlaceOnEventListRestricted","textEdit":{"newText":"vTaskPlaceOnEventListRestricted(${1:List_t *const pxEventList}, ${2:const TickType_t xTicksToWait})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","filterText":"vTaskPlaceOnUnorderedEventList","insertText":"vTaskPlaceOnUnorderedEventList(${1:List_t *pxEventList}, ${2:const TickType_t xItemValue}, ${3:const TickType_t xTicksToWait})","insertTextFormat":2,"kind":3,"label":" vTaskPlaceOnUnorderedEventList(List_t *pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait)","score":1.5037370920181274,"sortText":"403f858bvTaskPlaceOnUnorderedEventList","textEdit":{"newText":"vTaskPlaceOnUnorderedEventList(${1:List_t *pxEventList}, ${2:const TickType_t xItemValue}, ${3:const TickType_t xTicksToWait})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Raises the priority of the mutex holder to that of the calling task should the mutex holder have a priority less than the calling task."},"filterText":"vTaskPriorityInherit","insertText":"vTaskPriorityInherit(${1:const TaskHandle_t pxMutexHolder})","insertTextFormat":2,"kind":3,"label":" vTaskPriorityInherit(const TaskHandle_t pxMutexHolder)","score":1.5037370920181274,"sortText":"403f858bvTaskPriorityInherit","textEdit":{"newText":"vTaskPriorityInherit(${1:const TaskHandle_t pxMutexHolder})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Set the priority of any task.  \nINCLUDE_vTaskPrioritySet must be defined as 1 for this function to be available.  \nSee the configuration section for more information.  \nA context switch will occur before the function returns if the priority being set is higher than the currently executing task.  \n@param xTask Handle to the task for which the priority is being set.  \nPassing a NULL handle results in the priority of the calling task being set.  \n@param uxNewPriority The priority to which the task will be set.  \nExample usage:  \n@code{c} void vAFunction( void ) { TaskHandle_t xHandle;  \n// Create a task, storing the handle.  \nxTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, &xHandle );  \n// ...  \n// Use the handle to raise the priority of the created task.  \nvTaskPrioritySet( xHandle, tskIDLE_PRIORITY + 1 );  \n// ...  \n// Use a NULL handle to raise our priority to the same value.  \nvTaskPrioritySet( NULL, tskIDLE_PRIORITY + 1 );  \n}  \n@endcode  \n\\\\ingroup TaskCtrl"},"filterText":"vTaskPrioritySet","insertText":"vTaskPrioritySet(${1:TaskHandle_t xTask}, ${2:UBaseType_t uxNewPriority})","insertTextFormat":2,"kind":3,"label":" vTaskPrioritySet(TaskHandle_t xTask, UBaseType_t uxNewPriority)","score":1.5037370920181274,"sortText":"403f858bvTaskPrioritySet","textEdit":{"newText":"vTaskPrioritySet(${1:TaskHandle_t xTask}, ${2:UBaseType_t uxNewPriority})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Resumes a suspended task.  \nINCLUDE_vTaskSuspend must be defined as 1 for this function to be available.  \nSee the configuration section for more information.  \nA task that has been suspended by one or more calls to vTaskSuspend () will be made available for running again by a single call to vTaskResume ().  \n@param xTaskToResume Handle to the task being readied.  \nExample usage:  \n@code{c} void vAFunction( void ) { TaskHandle_t xHandle;  \n// Create a task, storing the handle.  \nxTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, &xHandle );  \n// ...  \n// Use the handle to suspend the created task.  \nvTaskSuspend( xHandle );  \n// ...  \n// The created task will not run during this period, unless // another task calls vTaskResume( xHandle ).  \n//...  \n// Resume the suspended task ourselves.  \nvTaskResume( xHandle );  \n// The created task will once again get microcontroller processing // time in accordance with its priority within the system.  \n}  \n@endcode  \n\\\\ingroup TaskCtrl"},"filterText":"vTaskResume","insertText":"vTaskResume(${1:TaskHandle_t xTaskToResume})","insertTextFormat":2,"kind":3,"label":" vTaskResume(TaskHandle_t xTaskToResume)","score":1.5037370920181274,"sortText":"403f858bvTaskResume","textEdit":{"newText":"vTaskResume(${1:TaskHandle_t xTaskToResume})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Set the uxTaskNumber of the task referenced by the xTask parameter to uxHandle."},"filterText":"vTaskSetTaskNumber","insertText":"vTaskSetTaskNumber(${1:TaskHandle_t xTask}, ${2:const UBaseType_t uxHandle})","insertTextFormat":2,"kind":3,"label":" vTaskSetTaskNumber(TaskHandle_t xTask, const UBaseType_t uxHandle)","score":1.5037370920181274,"sortText":"403f858bvTaskSetTaskNumber","textEdit":{"newText":"vTaskSetTaskNumber(${1:TaskHandle_t xTask}, ${2:const UBaseType_t uxHandle})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Set local storage pointer specific to the given task.  \nEach task contains an array of pointers that is dimensioned by the configNUM_THREAD_LOCAL_STORAGE_POINTERS setting in FreeRTOSConfig.h.  \nThe kernel does not use the pointers itself, so the application writer can use the pointers for any purpose they wish.  \n@param xTaskToSet Task to set thread local storage pointer for  \n@param xIndex The index of the pointer to set, from 0 to configNUM_THREAD_LOCAL_STORAGE_POINTERS - 1.  \n@param pvValue Pointer value to set."},"filterText":"vTaskSetThreadLocalStoragePointer","insertText":"vTaskSetThreadLocalStoragePointer(${1:TaskHandle_t xTaskToSet}, ${2:BaseType_t xIndex}, ${3:void *pvValue})","insertTextFormat":2,"kind":3,"label":" vTaskSetThreadLocalStoragePointer(TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue)","score":1.5037370920181274,"sortText":"403f858bvTaskSetThreadLocalStoragePointer","textEdit":{"newText":"vTaskSetThreadLocalStoragePointer(${1:TaskHandle_t xTaskToSet}, ${2:BaseType_t xIndex}, ${3:void *pvValue})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Set local storage pointer and deletion callback.  \nEach task contains an array of pointers that is dimensioned by the configNUM_THREAD_LOCAL_STORAGE_POINTERS setting in FreeRTOSConfig.h.  \nThe kernel does not use the pointers itself, so the application writer can use the pointers for any purpose they wish.  \nLocal storage pointers set for a task can reference dynamically allocated resources. This function is similar to vTaskSetThreadLocalStoragePointer, but provides a way to release these resources when the task gets deleted. For each pointer,  \na callback function can be set. This function will be called when task is deleted, with the local storage pointer index and value as arguments.  \n@param xTaskToSet Task to set thread local storage pointer for  \n@param xIndex The index of the pointer to set, from 0 to configNUM_THREAD_LOCAL_STORAGE_POINTERS - 1.  \n@param pvValue Pointer value to set.  \n@param pvDelCallback Function to call to dispose of the local storage pointer when the task is deleted."},"filterText":"vTaskSetThreadLocalStoragePointerAndDelCallback","insertText":"vTaskSetThreadLocalStoragePointerAndDelCallback(${1:TaskHandle_t xTaskToSet}, ${2:BaseType_t xIndex}, ${3:void *pvValue}, ${4:TlsDeleteCallbackFunction_t pvDelCallback})","insertTextFormat":2,"kind":3,"label":" vTaskSetThreadLocalStoragePointerAndDelCallback(TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue, TlsDeleteCallbackFunction_t pvDelCallback)","score":1.5037370920181274,"sortText":"403f858bvTaskSetThreadLocalStoragePointerAndDelCallback","textEdit":{"newText":"vTaskSetThreadLocalStoragePointerAndDelCallback(${1:TaskHandle_t xTaskToSet}, ${2:BaseType_t xIndex}, ${3:void *pvValue}, ${4:TlsDeleteCallbackFunction_t pvDelCallback})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"\\----------------------------------------------------------- SCHEDULER CONTROL  \n\\----------------------------------------------------------  \n@cond  \nStarts the real time kernel tick processing.  \nAfter calling the kernel has control over which tasks are executed and when.  \nSee the demo application file main.c for an example of creating tasks and starting the kernel.  \nExample usage:  \n@code{c} void vAFunction( void ) { // Create at least one task before starting the kernel.  \nxTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, NULL );  \n// Start the real time kernel with preemption.  \nvTaskStartScheduler ();  \n// Will not get here unless a task calls vTaskEndScheduler () }  \n@endcode  \n\\\\ingroup SchedulerControl"},"filterText":"vTaskStartScheduler","insertText":"vTaskStartScheduler()","insertTextFormat":2,"kind":3,"label":" vTaskStartScheduler()","score":1.5037370920181274,"sortText":"403f858bvTaskStartScheduler","textEdit":{"newText":"vTaskStartScheduler()","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Only available when configUSE_TICKLESS_IDLE is set to 1.  \nIf tickless mode is being used, or a low power mode is implemented, then the tick interrupt will not execute during idle periods. When this is the case, the tick count value maintained by the scheduler needs to be kept up to date with the actual execution time by being skipped forward by a time equal to the idle period."},"filterText":"vTaskStepTick","insertText":"vTaskStepTick(${1:const TickType_t xTicksToJump})","insertTextFormat":2,"kind":3,"label":" vTaskStepTick(const TickType_t xTicksToJump)","score":1.5037370920181274,"sortText":"403f858bvTaskStepTick","textEdit":{"newText":"vTaskStepTick(${1:const TickType_t xTicksToJump})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Suspend a task.  \nINCLUDE_vTaskSuspend must be defined as 1 for this function to be available.  \nSee the configuration section for more information.  \nWhen suspended, a task will never get any microcontroller processing time,  \nno matter what its priority.  \nCalls to vTaskSuspend are not accumulative - i.e. calling vTaskSuspend () twice on the same task still only requires one call to vTaskResume () to ready the suspended task.  \n@param xTaskToSuspend Handle to the task being suspended. Passing a NULL handle will cause the calling task to be suspended.  \nExample usage:  \n@code{c} void vAFunction( void ) { TaskHandle_t xHandle;  \n// Create a task, storing the handle.  \nxTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, &xHandle );  \n// ...  \n// Use the handle to suspend the created task.  \nvTaskSuspend( xHandle );  \n// ...  \n// The created task will not run during this period, unless // another task calls vTaskResume( xHandle ).  \n//...  \n// Suspend ourselves.  \nvTaskSuspend( NULL );  \n// We cannot get here unless another task calls vTaskResume // with our handle as the parameter.  \n}  \n@endcode  \n\\\\ingroup TaskCtrl"},"filterText":"vTaskSuspend","insertText":"vTaskSuspend(${1:TaskHandle_t xTaskToSuspend})","insertTextFormat":2,"kind":3,"label":" vTaskSuspend(TaskHandle_t xTaskToSuspend)","score":1.5037370920181274,"sortText":"403f858bvTaskSuspend","textEdit":{"newText":"vTaskSuspend(${1:TaskHandle_t xTaskToSuspend})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Suspends the scheduler without disabling interrupts.  \nContext switches will not occur while the scheduler is suspended.  \nAfter calling vTaskSuspendAll () the calling task will continue to execute without risk of being swapped out until a call to xTaskResumeAll () has been made.  \nAPI functions that have the potential to cause a context switch (for example,  \nvTaskDelayUntil(), xQueueSend(), etc.) must not be called while the scheduler is suspended.  \nExample usage:  \n@code{c} void vTask1( void * pvParameters ) { for( ;; ) { // Task code goes here.  \n// ...  \n// At some point the task wants to perform a long operation during // which it does not want to get swapped out. It cannot use // taskENTER_CRITICAL ()/taskEXIT_CRITICAL () as the length of the // operation may cause interrupts to be missed - including the // ticks.  \n// Prevent the real time kernel swapping out the task.  \nvTaskSuspendAll ();  \n// Perform the operation here. There is no need to use critical // sections as we have all the microcontroller processing time.  \n// During this time interrupts will still operate and the kernel // tick count will be maintained.  \n// ...  \n// The operation is complete. Restart the kernel.  \nxTaskResumeAll ();  \n} }  \n@endcode  \n\\\\ingroup SchedulerControl"},"filterText":"vTaskSuspendAll","insertText":"vTaskSuspendAll()","insertTextFormat":2,"kind":3,"label":" vTaskSuspendAll()","score":1.5037370920181274,"sortText":"403f858bvTaskSuspendAll","textEdit":{"newText":"vTaskSuspendAll()","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"THIS FUNCTION MUST NOT BE USED FROM APPLICATION CODE. IT IS ONLY INTENDED FOR USE WHEN IMPLEMENTING A PORT OF THE SCHEDULER AND IS AN INTERFACE WHICH IS FOR THE EXCLUSIVE USE OF THE SCHEDULER.  \nSets the pointer to the current TCB to the TCB of the highest priority task that is ready to run."},"filterText":"vTaskSwitchContext","insertText":"vTaskSwitchContext()","insertTextFormat":2,"kind":3,"label":" vTaskSwitchContext()","score":1.5037370920181274,"sortText":"403f858bvTaskSwitchContext","textEdit":{"newText":"vTaskSwitchContext()","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include <cstdarg>\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `<cstdarg>`"},"filterText":"va_list","insertText":"va_list","insertTextFormat":2,"kind":8,"label":"•va_list","score":1.5037370920181274,"sortText":"403f858bva_list","textEdit":{"newText":"va_list","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"vasiprintf","insertText":"vasiprintf(${1:char **}, ${2:const char *}, ${3:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•vasiprintf(char **, const char *, __va_list_tag *)","score":1.5037370920181274,"sortText":"403f858bvasiprintf","textEdit":{"newText":"vasiprintf(${1:char **}, ${2:const char *}, ${3:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"vfiprintf","insertText":"vfiprintf(${1:FILE *}, ${2:const char *}, ${3:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•vfiprintf(FILE *, const char *, __va_list_tag *)","score":1.5037370920181274,"sortText":"403f858bvfiprintf","textEdit":{"newText":"vfiprintf(${1:FILE *}, ${2:const char *}, ${3:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"vfiscanf","insertText":"vfiscanf(${1:FILE *}, ${2:const char *}, ${3:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•vfiscanf(FILE *, const char *, __va_list_tag *)","score":1.5037370920181274,"sortText":"403f858bvfiscanf","textEdit":{"newText":"vfiscanf(${1:FILE *}, ${2:const char *}, ${3:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"viprintf","insertText":"viprintf(${1:const char *}, ${2:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•viprintf(const char *, __va_list_tag *)","score":1.5037370920181274,"sortText":"403f858bviprintf","textEdit":{"newText":"viprintf(${1:const char *}, ${2:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"viscanf","insertText":"viscanf(${1:const char *}, ${2:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•viscanf(const char *, __va_list_tag *)","score":1.5037370920181274,"sortText":"403f858bviscanf","textEdit":{"newText":"viscanf(${1:const char *}, ${2:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"vscanf","insertText":"vscanf(${1:const char *}, ${2:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•vscanf(const char *, __va_list_tag *)","score":1.5037370920181274,"sortText":"403f858bvscanf","textEdit":{"newText":"vscanf(${1:const char *}, ${2:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"vsiprintf","insertText":"vsiprintf(${1:char *}, ${2:const char *}, ${3:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•vsiprintf(char *, const char *, __va_list_tag *)","score":1.5037370920181274,"sortText":"403f858bvsiprintf","textEdit":{"newText":"vsiprintf(${1:char *}, ${2:const char *}, ${3:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"vsniprintf","insertText":"vsniprintf(${1:char *}, ${2:size_t}, ${3:const char *}, ${4:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•vsniprintf(char *, size_t, const char *, __va_list_tag *)","score":1.5037370920181274,"sortText":"403f858bvsniprintf","textEdit":{"newText":"vsniprintf(${1:char *}, ${2:size_t}, ${3:const char *}, ${4:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"stdio.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"stdio.h\"`"},"filterText":"vsprintf","insertText":"vsprintf(${1:char *}, ${2:const char *}, ${3:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•vsprintf(char *, const char *, __va_list_tag *)","score":1.5037370920181274,"sortText":"403f858bvsprintf","textEdit":{"newText":"vsprintf(${1:char *}, ${2:const char *}, ${3:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Deserialization/Readers/IteratorReader.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Deserialization/Readers/IteratorReader.hpp\"`"},"filterText":"void_","insertText":"ArduinoJson6173_91::void_<${1:typename T}>","insertTextFormat":2,"kind":22,"label":"•ArduinoJson6173_91::void_<typename T>","score":1.3897553682327271,"sortText":"404e1c7fvoid_","textEdit":{"newText":"ArduinoJson6173_91::void_<${1:typename T}>","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"vfwprintf","insertText":"vfwprintf(${1:__FILE *}, ${2:const wchar_t *}, ${3:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•vfwprintf(__FILE *, const wchar_t *, __va_list_tag *)","score":1.3747211694717407,"sortText":"40500923vfwprintf","textEdit":{"newText":"vfwprintf(${1:__FILE *}, ${2:const wchar_t *}, ${3:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"vswscanf","insertText":"vswscanf(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•vswscanf(const wchar_t *, const wchar_t *, __va_list_tag *)","score":1.3747211694717407,"sortText":"40500923vswscanf","textEdit":{"newText":"vswscanf(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"wchar.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"wchar.h\"`"},"filterText":"vwscanf","insertText":"vwscanf(${1:const wchar_t *}, ${2:__va_list_tag *})","insertTextFormat":2,"kind":3,"label":"•vwscanf(const wchar_t *, __va_list_tag *)","score":1.3747211694717407,"sortText":"40500923vwscanf","textEdit":{"newText":"vwscanf(${1:const wchar_t *}, ${2:__va_list_tag *})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Insert a list item into a list. The item will be inserted into the list in a position determined by its item value (descending item value order).  \n@param pxList The list into which the item is to be inserted.  \n@param pxNewListItem The item that is to be placed in the list.  \n\\\\page vListInsert vListInsert  \n\\\\ingroup LinkedList"},"filterText":"vListInsert","insertText":"vListInsert(${1:List_t *const pxList}, ${2:ListItem_t *const pxNewListItem})","insertTextFormat":2,"kind":3,"label":" vListInsert(List_t *const pxList, ListItem_t *const pxNewListItem)","score":1.2690916061401367,"sortText":"405d8e68vListInsert","textEdit":{"newText":"vListInsert(${1:List_t *const pxList}, ${2:ListItem_t *const pxNewListItem})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Insert a list item into a list. The item will be inserted in a position such that it will be the last item within the list returned by multiple calls to listGET_OWNER_OF_NEXT_ENTRY.  \nThe list member pvIndex is used to walk through a list. Calling listGET_OWNER_OF_NEXT_ENTRY increments pvIndex to the next item in the list.  \nPlacing an item in a list using vListInsertEnd effectively places the item in the list position pointed to by pvIndex. This means that every other item within the list will be returned by listGET_OWNER_OF_NEXT_ENTRY before the pvIndex parameter again points to the item being inserted.  \n@param pxList The list into which the item is to be inserted.  \n@param pxNewListItem The list item to be inserted into the list.  \n\\\\page vListInsertEnd vListInsertEnd  \n\\\\ingroup LinkedList"},"filterText":"vListInsertEnd","insertText":"vListInsertEnd(${1:List_t *const pxList}, ${2:ListItem_t *const pxNewListItem})","insertTextFormat":2,"kind":3,"label":" vListInsertEnd(List_t *const pxList, ListItem_t *const pxNewListItem)","score":1.2690916061401367,"sortText":"405d8e68vListInsertEnd","textEdit":{"newText":"vListInsertEnd(${1:List_t *const pxList}, ${2:ListItem_t *const pxNewListItem})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"freertos/portmacro.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portmacro.h\"`"},"filterText":"vPortCPUAcquireMutex","insertText":"vPortCPUAcquireMutex(${1:portMUX_TYPE *mux})","insertTextFormat":2,"kind":3,"label":"•vPortCPUAcquireMutex(portMUX_TYPE *mux)","score":1.2690916061401367,"sortText":"405d8e68vPortCPUAcquireMutex","textEdit":{"newText":"vPortCPUAcquireMutex(${1:portMUX_TYPE *mux})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"freertos/portmacro.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portmacro.h\"`"},"filterText":"vPortCPUReleaseMutex","insertText":"vPortCPUReleaseMutex(${1:portMUX_TYPE *mux})","insertTextFormat":2,"kind":3,"label":"•vPortCPUReleaseMutex(portMUX_TYPE *mux)","score":1.2690916061401367,"sortText":"405d8e68vPortCPUReleaseMutex","textEdit":{"newText":"vPortCPUReleaseMutex(${1:portMUX_TYPE *mux})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"freertos/portable.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portable.h\"`  \nUndo any hardware/ISR setup that was performed by xPortStartScheduler() so the hardware is left in its original condition after the scheduler stops executing."},"filterText":"vPortEndScheduler","insertText":"vPortEndScheduler()","insertTextFormat":2,"kind":3,"label":"•vPortEndScheduler()","score":1.2690916061401367,"sortText":"405d8e68vPortEndScheduler","textEdit":{"newText":"vPortEndScheduler()","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"freertos/portable.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portable.h\"`"},"filterText":"vPortReleaseTaskMPUSettings","insertText":"vPortReleaseTaskMPUSettings(${1:xMPU_SETTINGS *xMPUSettings})","insertTextFormat":2,"kind":3,"label":"•vPortReleaseTaskMPUSettings(xMPU_SETTINGS *xMPUSettings)","score":1.2690916061401367,"sortText":"405d8e68vPortReleaseTaskMPUSettings","textEdit":{"newText":"vPortReleaseTaskMPUSettings(${1:xMPU_SETTINGS *xMPUSettings})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"freertos/portable.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portable.h\"`  \nCallback to set a watchpoint on the end of the stack. Called every context switch to change the stack watchpoint around."},"filterText":"vPortSetStackWatchpoint","insertText":"vPortSetStackWatchpoint(${1:void *pxStackStart})","insertTextFormat":2,"kind":3,"label":"•vPortSetStackWatchpoint(void *pxStackStart)","score":1.2690916061401367,"sortText":"405d8e68vPortSetStackWatchpoint","textEdit":{"newText":"vPortSetStackWatchpoint(${1:void *pxStackStart})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"freertos/portable.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portable.h\"`"},"filterText":"vPortStoreTaskMPUSettings","insertText":"vPortStoreTaskMPUSettings(${1:xMPU_SETTINGS *xMPUSettings}, ${2:const struct xMEMORY_REGION *const xRegions}, ${3:StackType_t *pxBottomOfStack}, ${4:uint32_t usStackDepth})","insertTextFormat":2,"kind":3,"label":"•vPortStoreTaskMPUSettings(xMPU_SETTINGS *xMPUSettings, const struct xMEMORY_REGION *const xRegions, StackType_t *pxBottomOfStack, uint32_t usStackDepth)","score":1.2690916061401367,"sortText":"405d8e68vPortStoreTaskMPUSettings","textEdit":{"newText":"vPortStoreTaskMPUSettings(${1:xMPU_SETTINGS *xMPUSettings}, ${2:const struct xMEMORY_REGION *const xRegions}, ${3:StackType_t *pxBottomOfStack}, ${4:uint32_t usStackDepth})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"freertos/portmacro.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portmacro.h\"`  \nKernel utilities."},"filterText":"vPortYield","insertText":"vPortYield()","insertTextFormat":2,"kind":3,"label":"•vPortYield()","score":1.2690916061401367,"sortText":"405d8e68vPortYield","textEdit":{"newText":"vPortYield()","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"freertos/portable.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portable.h\"`  \nSend an interrupt to another core in order to make the task running on it yield for a higher-priority task."},"filterText":"vPortYieldOtherCore","insertText":"vPortYieldOtherCore(${1:BaseType_t coreid})","insertTextFormat":2,"kind":3,"label":"•vPortYieldOtherCore(BaseType_t coreid)","score":1.2690916061401367,"sortText":"405d8e68vPortYieldOtherCore","textEdit":{"newText":"vPortYieldOtherCore(${1:BaseType_t coreid})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Delete a queue - freeing all the memory allocated for storing of items placed on the queue.  \n@param xQueue A handle to the queue to be deleted.  \n\\\\ingroup QueueManagement"},"filterText":"vQueueDelete","insertText":"vQueueDelete(${1:QueueHandle_t xQueue})","insertTextFormat":2,"kind":3,"label":" vQueueDelete(QueueHandle_t xQueue)","score":1.2690916061401367,"sortText":"405d8e68vQueueDelete","textEdit":{"newText":"vQueueDelete(${1:QueueHandle_t xQueue})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","filterText":"vQueueSetQueueNumber","insertText":"vQueueSetQueueNumber(${1:QueueHandle_t xQueue}, ${2:UBaseType_t uxQueueNumber})","insertTextFormat":2,"kind":3,"label":" vQueueSetQueueNumber(QueueHandle_t xQueue, UBaseType_t uxQueueNumber)","score":1.2690916061401367,"sortText":"405d8e68vQueueSetQueueNumber","textEdit":{"newText":"vQueueSetQueueNumber(${1:QueueHandle_t xQueue}, ${2:UBaseType_t uxQueueNumber})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"@cond  \nNot public API functions."},"filterText":"vQueueWaitForMessageRestricted","insertText":"vQueueWaitForMessageRestricted(${1:QueueHandle_t xQueue}, ${2:TickType_t xTicksToWait})","insertTextFormat":2,"kind":3,"label":" vQueueWaitForMessageRestricted(QueueHandle_t xQueue, TickType_t xTicksToWait)","score":1.2690916061401367,"sortText":"405d8e68vQueueWaitForMessageRestricted","textEdit":{"newText":"vQueueWaitForMessageRestricted(${1:QueueHandle_t xQueue}, ${2:TickType_t xTicksToWait})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"freertos/portmacro.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"freertos/portmacro.h\"`"},"filterText":"vTaskEnterCritical","insertText":"vTaskEnterCritical(${1:portMUX_TYPE *mux})","insertTextFormat":2,"kind":3,"label":"•vTaskEnterCritical(portMUX_TYPE *mux)","score":1.2690916061401367,"sortText":"405d8e68vTaskEnterCritical","textEdit":{"newText":"vTaskEnterCritical(${1:portMUX_TYPE *mux})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"sys/unistd.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"pid_t","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"filterText":"vfork","insertText":"vfork()","insertTextFormat":2,"kind":3,"label":"•vfork()","score":1.2690916061401367,"sortText":"405d8e68vfork","textEdit":{"newText":"vfork()","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"sys/unistd.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"sys/unistd.h\"`"},"filterText":"vhangup","insertText":"vhangup()","insertTextFormat":2,"kind":3,"label":"•vhangup()","score":1.2690916061401367,"sortText":"405d8e68vhangup","textEdit":{"newText":"vhangup()","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"vfs_api.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"vfs_api.h\"`"},"filterText":"VFSFileImpl","insertText":"VFSFileImpl","insertTextFormat":2,"kind":7,"label":"•VFSFileImpl","score":1.2378295660018921,"sortText":"40618ecdVFSFileImpl","textEdit":{"newText":"VFSFileImpl","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"detail":"void","documentation":{"kind":"markdown","value":"For internal use only."},"filterText":"vEventGroupSetBitsCallback","insertText":"vEventGroupSetBitsCallback(${1:void *pvEventGroup}, ${2:const uint32_t ulBitsToSet})","insertTextFormat":2,"kind":3,"label":" vEventGroupSetBitsCallback(void *pvEventGroup, const uint32_t ulBitsToSet)","score":1.1826096773147583,"sortText":"4068a03fvEventGroupSetBitsCallback","textEdit":{"newText":"vEventGroupSetBitsCallback(${1:void *pvEventGroup}, ${2:const uint32_t ulBitsToSet})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"esp_log.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"esp_log.h\"`"},"filterText":"vprintf_like_t","insertText":"vprintf_like_t","insertTextFormat":2,"kind":8,"label":"•vprintf_like_t","score":1.1118042469024658,"sortText":"4071b066vprintf_like_t","textEdit":{"newText":"vprintf_like_t","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantRef.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantRef.hpp\"`"},"filterText":"VariantConstRef","insertText":"ArduinoJson6173_91::VariantConstRef","insertTextFormat":2,"kind":7,"label":"•ArduinoJson6173_91::VariantConstRef","score":1.0575764179229736,"sortText":"4078a156VariantConstRef","textEdit":{"newText":"ArduinoJson6173_91::VariantConstRef","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantRef.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantRef.hpp\"`  \nA variant that can be a any value serializable to a JSON value.  \nIt can be set to:  \n\\- a boolean  \n\\- a char, short, int or a long (signed or unsigned)  \n\\- a string (const char\\*)  \n\\- a reference to a ArrayRef or ObjectRef"},"filterText":"VariantRef","insertText":"ArduinoJson6173_91::VariantRef","insertTextFormat":2,"kind":7,"label":"•ArduinoJson6173_91::VariantRef","score":1.0575764179229736,"sortText":"4078a156VariantRef","textEdit":{"newText":"ArduinoJson6173_91::VariantRef","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantRef.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantRef.hpp\"`  \nContains the methods shared by VariantRef and VariantConstRef"},"filterText":"VariantRefBase","insertText":"ArduinoJson6173_91::VariantRefBase<${1:typename TData}>","insertTextFormat":2,"kind":7,"label":"•ArduinoJson6173_91::VariantRefBase<typename TData>","score":1.0575764179229736,"sortText":"4078a156VariantRefBase","textEdit":{"newText":"ArduinoJson6173_91::VariantRefBase<${1:typename TData}>","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantAsImpl.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArrayRef","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantAsImpl.hpp\"`"},"filterText":"variantAs","insertText":"ArduinoJson6173_91::variantAs(${1:VariantData *data}, ${2:MemoryPool *pool})","insertTextFormat":2,"kind":3,"label":"•ArduinoJson6173_91::variantAs(VariantData *data, MemoryPool *pool)","score":1.0575764179229736,"sortText":"4078a156variantAs","textEdit":{"newText":"ArduinoJson6173_91::variantAs(${1:VariantData *data}, ${2:MemoryPool *pool})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Collection/CollectionImpl.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"bool","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Collection/CollectionImpl.hpp\"`"},"filterText":"variantEquals","insertText":"ArduinoJson6173_91::variantEquals(${1:const VariantData *a}, ${2:const VariantData *b})","insertTextFormat":2,"kind":3,"label":"•ArduinoJson6173_91::variantEquals(const VariantData *a, const VariantData *b)","score":1.0575764179229736,"sortText":"4078a156variantEquals","textEdit":{"newText":"ArduinoJson6173_91::variantEquals(${1:const VariantData *a}, ${2:const VariantData *b})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"vfs_api.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"vfs_api.h\"`"},"filterText":"VFSImpl","insertText":"VFSImpl","insertTextFormat":2,"kind":7,"label":"•VFSImpl","score":1.0538334846496582,"sortText":"40791bfcVFSImpl","textEdit":{"newText":"VFSImpl","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`  \nCAUTION: no VALUE_IS_OWNED below"},"filterText":"VALUE_IS_ARRAY","insertText":"ArduinoJson6173_91::VALUE_IS_ARRAY","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_IS_ARRAY","score":0.98550808429718018,"sortText":"4083b5beVALUE_IS_ARRAY","textEdit":{"newText":"ArduinoJson6173_91::VALUE_IS_ARRAY","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`  \nCAUTION: no VALUE_IS_OWNED below"},"filterText":"VALUE_IS_BOOLEAN","insertText":"ArduinoJson6173_91::VALUE_IS_BOOLEAN","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_IS_BOOLEAN","score":0.98550808429718018,"sortText":"4083b5beVALUE_IS_BOOLEAN","textEdit":{"newText":"ArduinoJson6173_91::VALUE_IS_BOOLEAN","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`  \nCAUTION: no VALUE_IS_OWNED below"},"filterText":"VALUE_IS_FLOAT","insertText":"ArduinoJson6173_91::VALUE_IS_FLOAT","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_IS_FLOAT","score":0.98550808429718018,"sortText":"4083b5beVALUE_IS_FLOAT","textEdit":{"newText":"ArduinoJson6173_91::VALUE_IS_FLOAT","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"filterText":"VALUE_IS_LINKED_RAW","insertText":"ArduinoJson6173_91::VALUE_IS_LINKED_RAW","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_IS_LINKED_RAW","score":0.98550808429718018,"sortText":"4083b5beVALUE_IS_LINKED_RAW","textEdit":{"newText":"ArduinoJson6173_91::VALUE_IS_LINKED_RAW","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"filterText":"VALUE_IS_LINKED_STRING","insertText":"ArduinoJson6173_91::VALUE_IS_LINKED_STRING","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_IS_LINKED_STRING","score":0.98550808429718018,"sortText":"4083b5beVALUE_IS_LINKED_STRING","textEdit":{"newText":"ArduinoJson6173_91::VALUE_IS_LINKED_STRING","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`  \nCAUTION: no VALUE_IS_OWNED below"},"filterText":"VALUE_IS_NEGATIVE_INTEGER","insertText":"ArduinoJson6173_91::VALUE_IS_NEGATIVE_INTEGER","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_IS_NEGATIVE_INTEGER","score":0.98550808429718018,"sortText":"4083b5beVALUE_IS_NEGATIVE_INTEGER","textEdit":{"newText":"ArduinoJson6173_91::VALUE_IS_NEGATIVE_INTEGER","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"filterText":"VALUE_IS_NULL","insertText":"ArduinoJson6173_91::VALUE_IS_NULL","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_IS_NULL","score":0.98550808429718018,"sortText":"4083b5beVALUE_IS_NULL","textEdit":{"newText":"ArduinoJson6173_91::VALUE_IS_NULL","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`  \nCAUTION: no VALUE_IS_OWNED below"},"filterText":"VALUE_IS_OBJECT","insertText":"ArduinoJson6173_91::VALUE_IS_OBJECT","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_IS_OBJECT","score":0.98550808429718018,"sortText":"4083b5beVALUE_IS_OBJECT","textEdit":{"newText":"ArduinoJson6173_91::VALUE_IS_OBJECT","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"filterText":"VALUE_IS_OWNED","insertText":"ArduinoJson6173_91::VALUE_IS_OWNED","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_IS_OWNED","score":0.98550808429718018,"sortText":"4083b5beVALUE_IS_OWNED","textEdit":{"newText":"ArduinoJson6173_91::VALUE_IS_OWNED","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"filterText":"VALUE_IS_OWNED_RAW","insertText":"ArduinoJson6173_91::VALUE_IS_OWNED_RAW","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_IS_OWNED_RAW","score":0.98550808429718018,"sortText":"4083b5beVALUE_IS_OWNED_RAW","textEdit":{"newText":"ArduinoJson6173_91::VALUE_IS_OWNED_RAW","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"filterText":"VALUE_IS_OWNED_STRING","insertText":"ArduinoJson6173_91::VALUE_IS_OWNED_STRING","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_IS_OWNED_STRING","score":0.98550808429718018,"sortText":"4083b5beVALUE_IS_OWNED_STRING","textEdit":{"newText":"ArduinoJson6173_91::VALUE_IS_OWNED_STRING","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`  \nCAUTION: no VALUE_IS_OWNED below"},"filterText":"VALUE_IS_POSITIVE_INTEGER","insertText":"ArduinoJson6173_91::VALUE_IS_POSITIVE_INTEGER","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_IS_POSITIVE_INTEGER","score":0.98550808429718018,"sortText":"4083b5beVALUE_IS_POSITIVE_INTEGER","textEdit":{"newText":"ArduinoJson6173_91::VALUE_IS_POSITIVE_INTEGER","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"ArduinoJson6173_91::(anonymous)","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"filterText":"VALUE_MASK","insertText":"ArduinoJson6173_91::VALUE_MASK","insertTextFormat":2,"kind":20,"label":"•ArduinoJson6173_91::VALUE_MASK","score":0.98550808429718018,"sortText":"4083b5beVALUE_MASK","textEdit":{"newText":"ArduinoJson6173_91::VALUE_MASK","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantAs.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantAs.hpp\"`  \nA metafunction that returns the type of the value returned by VariantRef::as\\<T>()"},"filterText":"VariantAs","insertText":"ArduinoJson6173_91::VariantAs<${1:typename T}>","insertTextFormat":2,"kind":22,"label":"•ArduinoJson6173_91::VariantAs<typename T>","score":0.98550808429718018,"sortText":"4083b5beVariantAs","textEdit":{"newText":"ArduinoJson6173_91::VariantAs<${1:typename T}>","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Array/ArrayIterator.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Array/ArrayIterator.hpp\"`"},"filterText":"VariantConstPtr","insertText":"ArduinoJson6173_91::VariantConstPtr","insertTextFormat":2,"kind":7,"label":"•ArduinoJson6173_91::VariantConstPtr","score":0.98550808429718018,"sortText":"4083b5beVariantConstPtr","textEdit":{"newText":"ArduinoJson6173_91::VariantConstPtr","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantContent.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantContent.hpp\"`"},"filterText":"VariantContent","insertText":"ArduinoJson6173_91::VariantContent","insertTextFormat":2,"kind":7,"label":"•ArduinoJson6173_91::VariantContent","score":0.98550808429718018,"sortText":"4083b5beVariantContent","textEdit":{"newText":"ArduinoJson6173_91::VariantContent","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantOperators.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantOperators.hpp\"`"},"filterText":"VariantOperators","insertText":"ArduinoJson6173_91::VariantOperators<${1:typename TVariant}>","insertTextFormat":2,"kind":22,"label":"•ArduinoJson6173_91::VariantOperators<typename TVariant>","score":0.98550808429718018,"sortText":"4083b5beVariantOperators","textEdit":{"newText":"ArduinoJson6173_91::VariantOperators<${1:typename TVariant}>","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Array/ArrayIterator.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Array/ArrayIterator.hpp\"`"},"filterText":"VariantPtr","insertText":"ArduinoJson6173_91::VariantPtr","insertTextFormat":2,"kind":7,"label":"•ArduinoJson6173_91::VariantPtr","score":0.98550808429718018,"sortText":"4083b5beVariantPtr","textEdit":{"newText":"ArduinoJson6173_91::VariantPtr","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantShortcuts.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantShortcuts.hpp\"`"},"filterText":"VariantShortcuts","insertText":"ArduinoJson6173_91::VariantShortcuts<${1:typename TVariant}>","insertTextFormat":2,"kind":7,"label":"•ArduinoJson6173_91::VariantShortcuts<typename TVariant>","score":0.98550808429718018,"sortText":"4083b5beVariantShortcuts","textEdit":{"newText":"ArduinoJson6173_91::VariantShortcuts<${1:typename TVariant}>","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantSlot.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantSlot.hpp\"`"},"filterText":"VariantSlot","insertText":"ArduinoJson6173_91::VariantSlot","insertTextFormat":2,"kind":7,"label":"•ArduinoJson6173_91::VariantSlot","score":0.98550808429718018,"sortText":"4083b5beVariantSlot","textEdit":{"newText":"ArduinoJson6173_91::VariantSlot","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantSlot.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantSlot.hpp\"`"},"filterText":"VariantSlotDiff","insertText":"ArduinoJson6173_91::VariantSlotDiff","insertTextFormat":2,"kind":8,"label":"•ArduinoJson6173_91::VariantSlotDiff","score":0.98550808429718018,"sortText":"4083b5beVariantSlotDiff","textEdit":{"newText":"ArduinoJson6173_91::VariantSlotDiff","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantTag.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantTag.hpp\"`"},"filterText":"VariantTag","insertText":"ArduinoJson6173_91::VariantTag","insertTextFormat":2,"kind":22,"label":"•ArduinoJson6173_91::VariantTag","score":0.98550808429718018,"sortText":"4083b5beVariantTag","textEdit":{"newText":"ArduinoJson6173_91::VariantTag","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantTo.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantTo.hpp\"`  \nA metafunction that returns the type of the value returned by VariantRef::to\\<T>()"},"filterText":"VariantTo","insertText":"ArduinoJson6173_91::VariantTo<${1:typename T}>","insertTextFormat":2,"kind":22,"label":"•ArduinoJson6173_91::VariantTo<typename T>","score":0.98550808429718018,"sortText":"4083b5beVariantTo","textEdit":{"newText":"ArduinoJson6173_91::VariantTo<${1:typename T}>","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Misc/Visitable.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Misc/Visitable.hpp\"`"},"filterText":"Visitable","insertText":"ArduinoJson6173_91::Visitable","insertTextFormat":2,"kind":22,"label":"•ArduinoJson6173_91::Visitable","score":0.98550808429718018,"sortText":"4083b5beVisitable","textEdit":{"newText":"ArduinoJson6173_91::Visitable","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Misc/Visitable.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Misc/Visitable.hpp\"`"},"filterText":"Visitor","insertText":"ArduinoJson6173_91::Visitor<${1:typename TResult}>","insertTextFormat":2,"kind":22,"label":"•ArduinoJson6173_91::Visitor<typename TResult>","score":0.98550808429718018,"sortText":"4083b5beVisitor","textEdit":{"newText":"ArduinoJson6173_91::Visitor<${1:typename TResult}>","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantFunctions.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"typename TVisitor::result_type","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantFunctions.hpp\"`"},"filterText":"variantAccept","insertText":"ArduinoJson6173_91::variantAccept(${1:const VariantData *var}, ${2:TVisitor &visitor})","insertTextFormat":2,"kind":3,"label":"•ArduinoJson6173_91::variantAccept(const VariantData *var, TVisitor &visitor)","score":0.98550808429718018,"sortText":"4083b5bevariantAccept","textEdit":{"newText":"ArduinoJson6173_91::variantAccept(${1:const VariantData *var}, ${2:TVisitor &visitor})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantFunctions.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"VariantData *","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantFunctions.hpp\"`"},"filterText":"variantAddElement","insertText":"ArduinoJson6173_91::variantAddElement(${1:VariantData *var}, ${2:MemoryPool *pool})","insertTextFormat":2,"kind":3,"label":"•ArduinoJson6173_91::variantAddElement(VariantData *var, MemoryPool *pool)","score":0.98550808429718018,"sortText":"4083b5bevariantAddElement","textEdit":{"newText":"ArduinoJson6173_91::variantAddElement(${1:VariantData *var}, ${2:MemoryPool *pool})","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}},{"additionalTextEdits":[{"newText":"#include \"ArduinoJson/Variant/VariantAs.hpp\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"[7 overloads]","documentation":{"kind":"markdown","value":"From `\"ArduinoJson/Variant/VariantAs.hpp\"`"},"filterText":"variantAs","insertText":"ArduinoJson6173_91::variantAs($0)","insertTextFormat":2,"kind":3,"label":"•ArduinoJson6173_91::variantAs(…)","score":0.98550808429718018,"sortText":"4083b5bevariantAs","textEdit":{"newText":"ArduinoJson6173_91::variantAs($0)","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":53}}}}]}}
>>>
Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":60},"contentChanges":[{"range":{"start":{"line":53,"character":1},"end":{"line":53,"character":1}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":61},"contentChanges":[{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":2}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":53,"character":3},"end":{"line":53,"character":3}},"context":{"diagnostics":[]}},"id":208,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":208,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":62},"contentChanges":[{"range":{"start":{"line":53,"character":3},"end":{"line":53,"character":3}},"text":"d"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":206},"jsonrpc":"2.0"}Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":4}},"context":{"diagnostics":[]}},"id":209,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":209,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":63},"contentChanges":[{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":4}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":207},"jsonrpc":"2.0"}Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":64},"contentChanges":[{"range":{"start":{"line":53,"character":5},"end":{"line":53,"character":5}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":65},"contentChanges":[{"range":{"start":{"line":53,"character":6},"end":{"line":53,"character":6}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":66},"contentChanges":[{"range":{"start":{"line":53,"character":7},"end":{"line":53,"character":7}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 275

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":67},"contentChanges":[{"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":8}},"text":"p"}]},"jsonrpc":"2.0"}Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":9}},"context":{"diagnostics":[]}},"id":210,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":210,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 276

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":68},"contentChanges":[{"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":9}},"text":"()"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":208},"jsonrpc":"2.0"}Content-Length: 205

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":53,"character":10}},"id":211,"jsonrpc":"2.0"}
<<<
Content-Length: 93

{"id":211,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":69},"contentChanges":[{"range":{"start":{"line":53,"character":10},"end":{"line":53,"character":11}},"rangeLength":1,"text":")"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":209},"jsonrpc":"2.0"}Content-Length: 205

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":53,"character":11}},"id":212,"jsonrpc":"2.0"}
<<<
Content-Length: 93

{"id":212,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":53,"character":11},"end":{"line":53,"character":11}},"context":{"diagnostics":[]}},"id":213,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":213,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":70},"contentChanges":[{"range":{"start":{"line":53,"character":11},"end":{"line":53,"character":11}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":211},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":210},"jsonrpc":"2.0"}Content-Length: 205

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":53,"character":12}},"id":214,"jsonrpc":"2.0"}
<<<
Content-Length: 93

{"id":214,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":53,"character":12},"end":{"line":53,"character":12}},"context":{"diagnostics":[]}},"id":215,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":215,"jsonrpc":"2.0","result":[]}Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":57}}Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":70}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":53,"character":12},"end":{"line":53,"character":12}},"context":{"diagnostics":[]}},"id":216,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":216,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":49,"character":77}},"id":217,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":217,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":49,"character":77},"end":{"line":49,"character":77}},"context":{"diagnostics":[]}},"id":218,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":218,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":48,"character":74},"end":{"line":49,"character":77}},"context":{"diagnostics":[]}},"id":219,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":219,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":71},"contentChanges":[{"range":{"start":{"line":48,"character":74},"end":{"line":49,"character":77}},"rangeLength":78,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":71}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":48,"character":74},"end":{"line":48,"character":74}},"context":{"diagnostics":[]}},"id":220,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":220,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":48,"character":40}},"id":221,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":221,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":48,"character":39}},"id":222,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":222,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":48,"character":38}},"id":223,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":223,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":48,"character":38}},"id":224,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":224,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":48,"character":39}},"id":225,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":225,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":48,"character":39}},"id":226,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":226,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":48,"character":39},"end":{"line":48,"character":74}},"context":{"diagnostics":[]}},"id":227,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":227,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":72},"contentChanges":[{"range":{"start":{"line":48,"character":39},"end":{"line":48,"character":74}},"rangeLength":35,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":72}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":48,"character":39},"end":{"line":48,"character":39}},"context":{"diagnostics":[]}},"id":228,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":228,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":55,"character":13}},"id":229,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":229,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":55,"character":27}},"id":230,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":230,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":55,"character":31}},"id":231,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":231,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":55,"character":31},"end":{"line":55,"character":31}},"context":{"diagnostics":[]}},"id":232,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":232,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":54,"character":14},"end":{"line":55,"character":31}},"context":{"diagnostics":[]}},"id":233,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":233,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":73},"contentChanges":[{"range":{"start":{"line":54,"character":14},"end":{"line":55,"character":31}},"rangeLength":32,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":73}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":54,"character":14},"end":{"line":54,"character":14}},"context":{"diagnostics":[]}},"id":234,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":234,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":67,"character":34}},"id":235,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":235,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":26}},"id":236,"jsonrpc":"2.0"}
<<<
Content-Length: 925

{"id":236,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `xTaskCreatePinnedToCore`  \n\n---\n→ `BaseType_t`  \nParameters:  \n- `TaskFunction_t pvTaskCode`\n- `const char *const pcName`\n- `const uint32_t usStackDepth`\n- `void *const pvParameters`\n- `UBaseType_t uxPriority`\n- `TaskHandle_t *const pvCreatedTask`\n- `const BaseType_t xCoreID`\n\n---\n```cpp\nBaseType_t xTaskCreatePinnedToCore(TaskFunction_t pvTaskCode,\n                                   const char *const pcName,\n                                   const uint32_t usStackDepth,\n                                   void *const pvParameters,\n                                   UBaseType_t uxPriority,\n                                   TaskHandle_t *const pvCreatedTask,\n                                   const BaseType_t xCoreID)\n```"},"range":{"end":{"character":27,"line":66},"start":{"character":26,"line":66}}}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":21}},"id":237,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":237,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":23}},"id":238,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":238,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":25}},"id":239,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":239,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":26}},"id":240,"jsonrpc":"2.0"}
<<<
Content-Length: 925

{"id":240,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `xTaskCreatePinnedToCore`  \n\n---\n→ `BaseType_t`  \nParameters:  \n- `TaskFunction_t pvTaskCode`\n- `const char *const pcName`\n- `const uint32_t usStackDepth`\n- `void *const pvParameters`\n- `UBaseType_t uxPriority`\n- `TaskHandle_t *const pvCreatedTask`\n- `const BaseType_t xCoreID`\n\n---\n```cpp\nBaseType_t xTaskCreatePinnedToCore(TaskFunction_t pvTaskCode,\n                                   const char *const pcName,\n                                   const uint32_t usStackDepth,\n                                   void *const pvParameters,\n                                   UBaseType_t uxPriority,\n                                   TaskHandle_t *const pvCreatedTask,\n                                   const BaseType_t xCoreID)\n```"},"range":{"end":{"character":27,"line":66},"start":{"character":26,"line":66}}}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":24}},"id":241,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":241,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":25}},"id":242,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":242,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":25}},"id":243,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":243,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":66,"character":26},"end":{"line":66,"character":26}},"context":{"diagnostics":[]}},"id":244,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":244,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":66,"character":26},"end":{"line":66,"character":27}},"context":{"diagnostics":[]}},"id":245,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":245,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":64,"character":43},"end":{"line":66,"character":26}},"context":{"diagnostics":[]}},"id":246,"jsonrpc":"2.0"}
<<<
Content-Length: 389

{"id":246,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","selection":{"end":{"character":26,"line":66},"start":{"character":43,"line":64}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":65,"character":41},"end":{"line":66,"character":26}},"context":{"diagnostics":[]}},"id":247,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":247,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":74},"contentChanges":[{"range":{"start":{"line":65,"character":41},"end":{"line":66,"character":26}},"rangeLength":53,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":74}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":65,"character":41},"end":{"line":65,"character":41}},"context":{"diagnostics":[]}},"id":248,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":248,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":22}},"id":249,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":249,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":30}},"id":250,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":250,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":30}},"id":251,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":251,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":66,"character":30},"end":{"line":66,"character":30}},"context":{"diagnostics":[]}},"id":252,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":252,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":67,"character":43}},"id":253,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":253,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":75},"contentChanges":[{"range":{"start":{"line":66,"character":30},"end":{"line":66,"character":30}},"text":","}]},"jsonrpc":"2.0"}Content-Length: 205

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":31}},"id":254,"jsonrpc":"2.0"}
<<<
Content-Length: 1208

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":27,"line":68},"start":{"character":26,"line":68}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":75}}Content-Length: 485

{"id":254,"jsonrpc":"2.0","result":{"activeParameter":3,"activeSignature":0,"signatures":[{"label":"xTaskCreatePinnedToCore(TaskFunction_t pvTaskCode, const char *const pcName, const uint32_t usStackDepth, void *const pvParameters, UBaseType_t uxPriority, TaskHandle_t *const pvCreatedTask, const BaseType_t xCoreID) -> BaseType_t","parameters":[{"label":[24,49]},{"label":[51,75]},{"label":[77,104]},{"label":[106,130]},{"label":[132,154]},{"label":[156,189]},{"label":[191,215]}]}]}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":66,"character":31},"end":{"line":66,"character":31}},"context":{"diagnostics":[]}},"id":255,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":255,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":67,"character":43}},"id":256,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":256,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 441

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":68,"character":27},"end":{"line":68,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":68,"character":26},"end":{"line":68,"character":27}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":257,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":257,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":76},"contentChanges":[{"range":{"start":{"line":68,"character":26},"end":{"line":68,"character":27}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":76}}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":68,"character":0},"end":{"line":68,"character":26}},"context":{"diagnostics":[]}},"id":258,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":258,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":77},"contentChanges":[{"range":{"start":{"line":68,"character":0},"end":{"line":68,"character":26}},"rangeLength":26,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":77}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":71,"character":39}},"id":259,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":259,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":70,"character":27}},"id":260,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":260,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":70,"character":27}},"id":261,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":261,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":70,"character":28},"end":{"line":70,"character":28}},"context":{"diagnostics":[]}},"id":262,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":262,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":71,"character":28}},"id":263,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":263,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":71,"character":29}},"id":264,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":264,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":70,"character":27}},"id":265,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":265,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":70,"character":27},"end":{"line":70,"character":27}},"context":{"diagnostics":[]}},"id":266,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":266,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":78},"contentChanges":[{"range":{"start":{"line":70,"character":27},"end":{"line":70,"character":27}},"text":","}]},"jsonrpc":"2.0"}Content-Length: 205

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":70,"character":28}},"id":267,"jsonrpc":"2.0"}
<<<
Content-Length: 1208

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":27,"line":72},"start":{"character":26,"line":72}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":78}}Content-Length: 485

{"id":267,"jsonrpc":"2.0","result":{"activeParameter":5,"activeSignature":0,"signatures":[{"label":"xTaskCreatePinnedToCore(TaskFunction_t pvTaskCode, const char *const pcName, const uint32_t usStackDepth, void *const pvParameters, UBaseType_t uxPriority, TaskHandle_t *const pvCreatedTask, const BaseType_t xCoreID) -> BaseType_t","parameters":[{"label":[24,49]},{"label":[51,75]},{"label":[77,104]},{"label":[106,130]},{"label":[132,154]},{"label":[156,189]},{"label":[191,215]}]}]}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":70,"character":28},"end":{"line":70,"character":28}},"context":{"diagnostics":[]}},"id":268,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":268,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 441

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":72,"character":27},"end":{"line":72,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":72,"character":26},"end":{"line":72,"character":27}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":269,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":269,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 440

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":72,"character":0},"end":{"line":72,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":72,"character":26},"end":{"line":72,"character":27}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":270,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":270,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":79},"contentChanges":[{"range":{"start":{"line":72,"character":0},"end":{"line":72,"character":27}},"rangeLength":27,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":79}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":71,"character":45}},"id":271,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":271,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":73,"character":46}},"id":272,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":272,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":73,"character":46},"end":{"line":73,"character":46}},"context":{"diagnostics":[]}},"id":273,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":273,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":80},"contentChanges":[{"range":{"start":{"line":73,"character":46},"end":{"line":73,"character":46}},"text":"\n                          "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":80}}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":81},"contentChanges":[{"range":{"start":{"line":74,"character":0},"end":{"line":74,"character":26}},"rangeLength":26,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":81}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":71,"character":27}},"id":274,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":274,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":71,"character":26}},"id":275,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":275,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":71,"character":25}},"id":276,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":276,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":71,"character":26},"end":{"line":71,"character":26}},"context":{"diagnostics":[]}},"id":277,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":277,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":70,"character":75},"end":{"line":71,"character":26}},"context":{"diagnostics":[]}},"id":278,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":278,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":82},"contentChanges":[{"range":{"start":{"line":70,"character":75},"end":{"line":71,"character":26}},"rangeLength":27,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":82}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":70,"character":75},"end":{"line":70,"character":75}},"context":{"diagnostics":[]}},"id":279,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":279,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":83},"contentChanges":[{"range":{"start":{"line":70,"character":75},"end":{"line":70,"character":76}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":83}}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":84},"contentChanges":[{"range":{"start":{"line":70,"character":75},"end":{"line":70,"character":76}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":70,"character":75},"end":{"line":70,"character":75}},"context":{"diagnostics":[]}},"id":280,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":280,"jsonrpc":"2.0","result":[]}Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":84}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":70,"character":75},"end":{"line":70,"character":75}},"context":{"diagnostics":[]}},"id":281,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":281,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 290

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":85},"contentChanges":[{"range":{"start":{"line":71,"character":0},"end":{"line":72,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":85}}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":86},"contentChanges":[{"range":{"start":{"line":72,"character":0},"end":{"line":73,"character":0}},"rangeLength":1,"text":"                          \n"}]},"jsonrpc":"2.0"}Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":69,"character":32}},"id":282,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":282,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":280},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":86}}
>>>
Content-Length: 290

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":87},"contentChanges":[{"range":{"start":{"line":68,"character":0},"end":{"line":69,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":87}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":68,"character":29}},"id":283,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"id":283,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `NULL`  \n\n---\n```cpp\n#define NULL __null\n```"},"range":{"end":{"character":30,"line":68},"start":{"character":26,"line":68}}}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":67,"character":28}},"id":284,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":284,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":67,"character":29}},"id":285,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":285,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":67,"character":29},"end":{"line":67,"character":56}},"context":{"diagnostics":[]}},"id":286,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":286,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":66,"character":79},"end":{"line":67,"character":29}},"context":{"diagnostics":[]}},"id":287,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":287,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":88},"contentChanges":[{"range":{"start":{"line":66,"character":79},"end":{"line":67,"character":29}},"rangeLength":30,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":88}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":66,"character":79},"end":{"line":66,"character":79}},"context":{"diagnostics":[]}},"id":288,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":288,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":89},"contentChanges":[{"range":{"start":{"line":66,"character":79},"end":{"line":66,"character":79}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":89}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":66,"character":80},"end":{"line":66,"character":80}},"context":{"diagnostics":[]}},"id":289,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":289,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":67,"character":37}},"id":290,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":290,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":36}},"id":291,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":291,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":35}},"id":292,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":292,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":30}},"id":293,"jsonrpc":"2.0"}
<<<
Content-Length: 925

{"id":293,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `xTaskCreatePinnedToCore`  \n\n---\n→ `BaseType_t`  \nParameters:  \n- `TaskFunction_t pvTaskCode`\n- `const char *const pcName`\n- `const uint32_t usStackDepth`\n- `void *const pvParameters`\n- `UBaseType_t uxPriority`\n- `TaskHandle_t *const pvCreatedTask`\n- `const BaseType_t xCoreID`\n\n---\n```cpp\nBaseType_t xTaskCreatePinnedToCore(TaskFunction_t pvTaskCode,\n                                   const char *const pcName,\n                                   const uint32_t usStackDepth,\n                                   void *const pvParameters,\n                                   UBaseType_t uxPriority,\n                                   TaskHandle_t *const pvCreatedTask,\n                                   const BaseType_t xCoreID)\n```"},"range":{"end":{"character":31,"line":66},"start":{"character":30,"line":66}}}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":29}},"id":294,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":294,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":29}},"id":295,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":295,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":66,"character":30}},"id":296,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":296,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":25,"line":64},"start":{"character":2,"line":64}}}]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":66,"character":30},"end":{"line":66,"character":30}},"context":{"diagnostics":[]}},"id":297,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":297,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":66,"character":27},"end":{"line":66,"character":30}},"context":{"diagnostics":[]}},"id":298,"jsonrpc":"2.0"}
<<<
Content-Length: 389

{"id":298,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","selection":{"end":{"character":30,"line":66},"start":{"character":27,"line":66}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":66,"character":26},"end":{"line":66,"character":30}},"context":{"diagnostics":[]}},"id":299,"jsonrpc":"2.0"}
<<<
Content-Length: 389

{"id":299,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","selection":{"end":{"character":30,"line":66},"start":{"character":26,"line":66}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":71,"character":26}},"id":300,"jsonrpc":"2.0"}
<<<
Content-Length: 243

{"id":300,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `ARDUINO_RUNNING_CORE`  \n\n---\n```cpp\n#define ARDUINO_RUNNING_CORE 1\n```"},"range":{"end":{"character":46,"line":71},"start":{"character":26,"line":71}}}}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":90},"contentChanges":[{"range":{"start":{"line":66,"character":26},"end":{"line":66,"character":30}},"rangeLength":4,"text":"1"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":90}}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":91},"contentChanges":[{"range":{"start":{"line":66,"character":27},"end":{"line":66,"character":27}},"text":"0"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":91}}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":92},"contentChanges":[{"range":{"start":{"line":66,"character":28},"end":{"line":66,"character":28}},"text":"2"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":92}}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":93},"contentChanges":[{"range":{"start":{"line":66,"character":29},"end":{"line":66,"character":29}},"text":"4"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":93}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":66,"character":30},"end":{"line":66,"character":30}},"context":{"diagnostics":[]}},"id":301,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":301,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":65,"character":42},"end":{"line":65,"character":42}},"context":{"diagnostics":[]}},"id":302,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":302,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":71,"character":45}},"id":303,"jsonrpc":"2.0"}
<<<
Content-Length: 243

{"id":303,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `ARDUINO_RUNNING_CORE`  \n\n---\n```cpp\n#define ARDUINO_RUNNING_CORE 1\n```"},"range":{"end":{"character":46,"line":71},"start":{"character":26,"line":71}}}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":69,"character":46},"end":{"line":70,"character":26}},"context":{"diagnostics":[]}},"id":304,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":304,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":94},"contentChanges":[{"range":{"start":{"line":69,"character":46},"end":{"line":70,"character":26}},"rangeLength":27,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":94}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":69,"character":46},"end":{"line":69,"character":46}},"context":{"diagnostics":[]}},"id":305,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":305,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":65,"character":42},"end":{"line":65,"character":42}},"context":{"diagnostics":[]}},"id":306,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":306,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":95},"contentChanges":[{"range":{"start":{"line":65,"character":42},"end":{"line":65,"character":42}},"text":"/"}]},"jsonrpc":"2.0"}Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":96},"contentChanges":[{"range":{"start":{"line":65,"character":43},"end":{"line":65,"character":43}},"text":"/"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1208

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":43,"line":65},"start":{"character":42,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":95}}Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":96}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":65,"character":44},"end":{"line":65,"character":44}},"context":{"diagnostics":[]}},"id":307,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":307,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":97},"contentChanges":[{"range":{"start":{"line":65,"character":44},"end":{"line":65,"character":44}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":97}}
>>>
Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":98},"contentChanges":[{"range":{"start":{"line":65,"character":45},"end":{"line":65,"character":45}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 277

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":99},"contentChanges":[{"range":{"start":{"line":65,"character":46},"end":{"line":65,"character":46}},"text":"a"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":98}}Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":99}}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":100},"contentChanges":[{"range":{"start":{"line":65,"character":47},"end":{"line":65,"character":47}},"text":"m"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":100}}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":101},"contentChanges":[{"range":{"start":{"line":65,"character":48},"end":{"line":65,"character":48}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":101}}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":102},"contentChanges":[{"range":{"start":{"line":65,"character":49},"end":{"line":65,"character":49}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":102}}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":103},"contentChanges":[{"range":{"start":{"line":65,"character":50},"end":{"line":65,"character":50}},"text":"f"}]},"jsonrpc":"2.0"}Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":104},"contentChanges":[{"range":{"start":{"line":65,"character":51},"end":{"line":65,"character":51}},"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":103}}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":105},"contentChanges":[{"range":{"start":{"line":65,"character":52},"end":{"line":65,"character":52}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":104}}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":105}}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":106},"contentChanges":[{"range":{"start":{"line":65,"character":53},"end":{"line":65,"character":53}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":106}}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":107},"contentChanges":[{"range":{"start":{"line":65,"character":54},"end":{"line":65,"character":54}},"text":"h"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":107}}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":108},"contentChanges":[{"range":{"start":{"line":65,"character":55},"end":{"line":65,"character":55}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":108}}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":109},"contentChanges":[{"range":{"start":{"line":65,"character":56},"end":{"line":65,"character":56}},"text":"m"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":109}}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":110},"contentChanges":[{"range":{"start":{"line":65,"character":57},"end":{"line":65,"character":57}},"text":"a"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":110}}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":111},"contentChanges":[{"range":{"start":{"line":65,"character":58},"end":{"line":65,"character":58}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":111}}
>>>
Content-Length: 278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":112},"contentChanges":[{"range":{"start":{"line":65,"character":59},"end":{"line":65,"character":59}},"text":"s"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":112}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":65,"character":60},"end":{"line":65,"character":60}},"context":{"diagnostics":[]}},"id":308,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":308,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":65,"character":44}},"id":309,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":309,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":61,"character":21},"end":{"line":61,"character":21}},"context":{"diagnostics":[]}},"id":310,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":310,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":69,"character":18}},"id":311,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":311,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":75,"character":17}},"id":312,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"id":312,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `ArduinoOTA`  \n\n---\nType: `class ArduinoOTAClass`  \n\n---\n```cpp\nextern ArduinoOTAClass ArduinoOTA\n```"},"range":{"end":{"character":18,"line":75},"start":{"character":8,"line":75}}}}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":9}},"id":313,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":313,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":7}},"id":314,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":314,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":5}},"id":315,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":315,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":4}},"id":316,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":316,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":3}},"id":317,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":317,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":80,"character":4},"end":{"line":80,"character":73}},"context":{"diagnostics":[]}},"id":318,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":318,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":81,"character":17},"end":{"line":81,"character":17}},"context":{"diagnostics":[]}},"id":319,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":319,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 346

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":113},"contentChanges":[{"range":{"start":{"line":81,"character":17},"end":{"line":81,"character":17}},"text":"// NOTE: if updating SPIFFS this would be the place to unmount SPIFFS"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":113}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":81,"character":23}},"id":320,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":320,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":81,"character":86},"end":{"line":81,"character":86}},"context":{"diagnostics":[]}},"id":321,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":321,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":71}},"id":322,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":322,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":72}},"id":323,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":323,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":73}},"id":324,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":324,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":80,"character":73},"end":{"line":80,"character":73}},"context":{"diagnostics":[]}},"id":325,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":325,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":79,"character":0},"end":{"line":80,"character":73}},"context":{"diagnostics":[]}},"id":326,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":326,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 293

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":114},"contentChanges":[{"range":{"start":{"line":79,"character":0},"end":{"line":80,"character":73}},"rangeLength":74,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":114}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":81,"character":20}},"id":327,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":327,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":81,"character":33}},"id":328,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":328,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":81,"character":31}},"id":329,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":329,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":81,"character":31}},"id":330,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":330,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":81,"character":1},"end":{"line":81,"character":31}},"context":{"diagnostics":[]}},"id":331,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":331,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":81,"character":17}},"id":332,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":332,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 413

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":116},"contentChanges":[{"range":{"start":{"line":82,"character":25},"end":{"line":82,"character":25}},"text":"// Disable client connections "},{"range":{"start":{"line":81,"character":1},"end":{"line":81,"character":31}},"rangeLength":30,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":116}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":82,"character":25},"end":{"line":82,"character":55}},"context":{"diagnostics":[]}},"id":333,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":333,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":84,"character":5}},"id":334,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":334,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":84,"character":3}},"id":335,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":335,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":84,"character":2}},"id":336,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":336,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":84,"character":3}},"id":337,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":337,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":84,"character":3}},"id":338,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":338,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":84,"character":3}},"id":339,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":339,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":84,"character":3}},"id":340,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":340,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":84,"character":4}},"id":341,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":341,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":84,"character":4},"end":{"line":84,"character":4}},"context":{"diagnostics":[]}},"id":342,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":342,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":84,"character":4},"end":{"line":84,"character":50}},"context":{"diagnostics":[]}},"id":343,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":343,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":85,"character":38}},"id":344,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":344,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":84,"character":38}},"id":345,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":345,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 429

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":118},"contentChanges":[{"range":{"start":{"line":85,"character":41},"end":{"line":85,"character":41}},"text":"// Advertise connected clients what's going on"},{"range":{"start":{"line":84,"character":4},"end":{"line":84,"character":50}},"rangeLength":46,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":118}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":85,"character":41},"end":{"line":85,"character":87}},"context":{"diagnostics":[]}},"id":346,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":346,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":85,"character":32}},"id":347,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":347,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":85,"character":32}},"id":348,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":348,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":85,"character":32},"end":{"line":85,"character":32}},"context":{"diagnostics":[]}},"id":349,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":349,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":83,"character":0},"end":{"line":84,"character":4}},"context":{"diagnostics":[]}},"id":350,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":350,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 291

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":119},"contentChanges":[{"range":{"start":{"line":83,"character":0},"end":{"line":84,"character":4}},"rangeLength":5,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":119}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":87,"character":11}},"id":351,"jsonrpc":"2.0"}
<<<
Content-Length: 397

{"id":351,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `closeAll`  \n\n---\n→ `void`  \nParameters:  \n- `uint16_t code = 0`\n- `const char * message = __null`\n\n---\n```cpp\n// In AsyncWebSocket\npublic: void closeAll(uint16_t code = 0, const char *message = __null)\n```"},"range":{"end":{"character":19,"line":87},"start":{"character":11,"line":87}}}}
>>>
Content-Length: 209

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":86,"character":17}},"id":352,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":352,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 270

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":86,"character":4},"end":{"line":86,"character":17}},"context":{"diagnostics":[]}},"id":353,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":353,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":86,"character":7}},"id":354,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":354,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":86,"character":7}},"id":355,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":355,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":86,"character":8}},"id":356,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":356,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 396

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":121},"contentChanges":[{"range":{"start":{"line":87,"character":22},"end":{"line":87,"character":22}},"text":"// Close them"},{"range":{"start":{"line":86,"character":4},"end":{"line":86,"character":17}},"rangeLength":13,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":121}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":87,"character":24}},"id":357,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":357,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":87,"character":22},"end":{"line":87,"character":35}},"context":{"diagnostics":[]}},"id":358,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":358,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":85,"character":0},"end":{"line":86,"character":4}},"context":{"diagnostics":[]}},"id":359,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":359,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 291

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":122},"contentChanges":[{"range":{"start":{"line":85,"character":0},"end":{"line":86,"character":4}},"rangeLength":5,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":122}}
>>>
Content-Length: 291

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":123},"contentChanges":[{"range":{"start":{"line":85,"character":0},"end":{"line":86,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":123}}
>>>
Content-Length: 291

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":124},"contentChanges":[{"range":{"start":{"line":83,"character":0},"end":{"line":84,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":124}}
>>>
Content-Length: 291

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":125},"contentChanges":[{"range":{"start":{"line":81,"character":4},"end":{"line":82,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":125}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":81,"character":12}},"id":360,"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"id":360,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ws`  \n\n---\nType: `class AsyncWebSocket`  \n\n---\n```cpp\n// In BcbAws\npublic: AsyncWebSocket ws = AsyncWebSocket(\"/ws\")\n```"},"range":{"end":{"character":14,"line":81},"start":{"character":12,"line":81}}}}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":81,"character":8}},"id":361,"jsonrpc":"2.0"}
<<<
Content-Length: 239

{"id":361,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `aws`  \n\n---\nType: `class BcbAws`  \n\n---\n```cpp\nBcbAws aws\n```"},"range":{"end":{"character":11,"line":81},"start":{"character":8,"line":81}}}}
>>>
Content-Length: 208

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":81,"character":9}},"id":362,"jsonrpc":"2.0"}
<<<
Content-Length: 565

{"id":362,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":14},"start":{"character":7,"line":14}}},{"kind":1,"range":{"end":{"character":5,"line":59},"start":{"character":2,"line":59}}},{"kind":1,"range":{"end":{"character":11,"line":81},"start":{"character":8,"line":81}}},{"kind":1,"range":{"end":{"character":7,"line":82},"start":{"character":4,"line":82}}},{"kind":1,"range":{"end":{"character":7,"line":83},"start":{"character":4,"line":83}}},{"kind":1,"range":{"end":{"character":28,"line":100},"start":{"character":25,"line":100}}}]}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":81,"character":9},"end":{"line":81,"character":9}},"context":{"diagnostics":[]}},"id":363,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":363,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":81,"character":8}},"id":364,"jsonrpc":"2.0"}
<<<
Content-Length: 239

{"id":364,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `aws`  \n\n---\nType: `class BcbAws`  \n\n---\n```cpp\nBcbAws aws\n```"},"range":{"end":{"character":11,"line":81},"start":{"character":8,"line":81}}}}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":81,"character":7}},"id":365,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":365,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":81,"character":8},"end":{"line":81,"character":8}},"context":{"diagnostics":[]}},"id":366,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":366,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 291

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":126},"contentChanges":[{"range":{"start":{"line":81,"character":6},"end":{"line":81,"character":8}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":126}}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":81,"character":6},"end":{"line":81,"character":6}},"context":{"diagnostics":[]}},"id":367,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":367,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 291

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":127},"contentChanges":[{"range":{"start":{"line":81,"character":4},"end":{"line":81,"character":6}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":127}}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":81,"character":4},"end":{"line":81,"character":4}},"context":{"diagnostics":[]}},"id":368,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":368,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":84,"character":23},"end":{"line":84,"character":23}},"context":{"diagnostics":[]}},"id":369,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":369,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":13}},"id":370,"jsonrpc":"2.0"}
<<<
Content-Length: 261

{"id":370,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `end`  \n\n---\n→ `void`  \n\n---\n```cpp\n// In SPIFFSFS\npublic: void end()\n```"},"range":{"end":{"character":14,"line":80},"start":{"character":11,"line":80}}}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":45}},"id":371,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":371,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":46}},"id":372,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":372,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":46}},"id":373,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":373,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":16}},"id":374,"jsonrpc":"2.0"}
<<<
Content-Length: 261

{"id":374,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `end`  \n\n---\n→ `void`  \n\n---\n```cpp\n// In SPIFFSFS\npublic: void end()\n```"},"range":{"end":{"character":17,"line":80},"start":{"character":16,"line":80}}}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":80,"character":16},"end":{"line":80,"character":16}},"context":{"diagnostics":[]}},"id":375,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":375,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":80,"character":16}},"id":376,"jsonrpc":"2.0"}
<<<
Content-Length: 261

{"id":376,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `end`  \n\n---\n→ `void`  \n\n---\n```cpp\n// In SPIFFSFS\npublic: void end()\n```"},"range":{"end":{"character":17,"line":80},"start":{"character":16,"line":80}}}}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":128},"contentChanges":[{"range":{"start":{"line":78,"character":26},"end":{"line":79,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":128}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":78,"character":26},"end":{"line":78,"character":26}},"context":{"diagnostics":[]}},"id":377,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":377,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 292

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":129},"contentChanges":[{"range":{"start":{"line":83,"character":23},"end":{"line":84,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"drv_unknown_argument","message":"Unknown argument: '-fstrict-volatile-bitfields'","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"drv_unknown_argument_with_suggestion","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"In included file: unknown type name 'pthread_t'\n\n/home/brian/.arduino15/packages/esp32/tools/xtensa-esp32-elf-gcc/1.22.0-97-gc752ad5-5.2.0/bin/../lib/gcc/xtensa-esp32-elf/5.2.0/../../../../xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf/bits/gthr-default.h:47:9:\nnote: error occurred here","range":{"end":{"character":10,"line":1},"start":{"character":9,"line":1}},"severity":1,"source":"clang"}],"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp","version":129}}
>>>
Content-Length: 271

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":83,"character":23},"end":{"line":83,"character":23}},"context":{"diagnostics":[]}},"id":378,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":378,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":83,"character":11}},"id":379,"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"id":379,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `setOta`  \n\n---\n→ `bool`  \nParameters:  \n- `bool value`\n\n---\n```cpp\n// In State\npublic: bool setOta(bool value)\n```"},"range":{"end":{"character":16,"line":83},"start":{"character":10,"line":83}}}}
>>>
Content-Length: 269

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"range":{"start":{"line":84,"character":5},"end":{"line":84,"character":5}},"context":{"diagnostics":[]}},"id":380,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":380,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":83,"character":16}},"id":381,"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"id":381,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `setOta`  \n\n---\n→ `bool`  \nParameters:  \n- `bool value`\n\n---\n```cpp\n// In State\npublic: bool setOta(bool value)\n```"},"range":{"end":{"character":16,"line":83},"start":{"character":10,"line":83}}}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":120,"character":8}},"id":382,"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"id":382,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `printLocalTime`  \n\n---\n→ `class String`  \n\n---\n```cpp\nString printLocalTime()\n```"},"range":{"end":{"character":16,"line":120},"start":{"character":2,"line":120}}}}
>>>
Content-Length: 196

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":18,"character":3}},"id":383,"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"id":383,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `daylightOffset_sec`  \n\n---\nType: `const int`  \nValue = `3600`  \n\n---\n```cpp\nconst int daylightOffset_sec = 3600\n```"},"range":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}}}}
>>>
Content-Length: 197

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///tmp/arduino-language-server518537796/sketch/garden.ino.cpp"},"position":{"line":18,"character":30}},"id":384,"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"id":384,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `daylightOffset_sec`  \n\n---\nType: `const int`  \nValue = `3600`  \n\n---\n```cpp\nconst int daylightOffset_sec = 3600\n```"},"range":{"end":{"character":30,"line":18},"start":{"character":29,"line":18}}}}